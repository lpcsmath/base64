New log file opened at Tue May 31 15:22:51 CEST 2016 by 6315@Lothars-MacBook-Pro.fritz.box
jvm 6315@Lothars-MacBook-Pro.fritz.box
jvm vmName=Java HotSpot(TM) 64-Bit Server VM vmVendor=Oracle Corporation vmVersion=25.60-b23
jvm specName=Java Virtual Machine Specification specVendor=Oracle Corporation specVersion=1.8
jvm arguments: [-Xms256m, -Xmx1024m, -XX:MetaspaceSize=64m, -XX:MaxMetaspaceSize=256m]
Starting event engine
Starting sbt command engine
Command engine arguments=List()
Command engine baseDirectory=/Users/lpfeiler/develop/github/base64
Waiting for sbt command engine
Command engine initial remaining commands List(--initialize, onFailure load-failed, boot, server-send-ready-for-request, server-handle-next-server-request)
> --initialize
> initialize
> onFailure load-failed
> boot
> reload
[Loading] Scanning directory /Users/lpfeiler/develop/github/base64/project
[Loading] Found non-root projects 
[Loading] Done in /Users/lpfeiler/develop/github/base64/project, returning: ()
deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))))
  :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.JUnitXmlReportPlugin)
sorting: ns: List(sbt.plugins.CorePlugin, sbt.plugins.IvyPlugin, sbt.plugins.JvmPlugin, sbt.plugins.JUnitXmlReportPlugin)
  :: sorting:: found: List(sbt.plugins.CorePlugin) not found List(sbt.plugins.IvyPlugin, sbt.plugins.JvmPlugin, sbt.plugins.JUnitXmlReportPlugin)
  :: sorting:: found: List(sbt.plugins.CorePlugin, sbt.plugins.IvyPlugin) not found List(sbt.plugins.JvmPlugin, sbt.plugins.JUnitXmlReportPlugin)
  :: sorting:: found: List(sbt.plugins.CorePlugin, sbt.plugins.IvyPlugin, sbt.plugins.JvmPlugin) not found List(sbt.plugins.JUnitXmlReportPlugin)
  :: sorting:: found: List(sbt.plugins.CorePlugin, sbt.plugins.IvyPlugin, sbt.plugins.JvmPlugin, sbt.plugins.JUnitXmlReportPlugin) not found List()
  :: sorted deduced result: List(sbt.plugins.CorePlugin, sbt.plugins.IvyPlugin, sbt.plugins.JvmPlugin, sbt.plugins.JUnitXmlReportPlugin)
[Loading] Done in /Users/lpfeiler/develop/github/base64/project, returning: (base64-build)
Loading project definition from /Users/lpfeiler/develop/github/base64/project
Running task... Cancel: sbt.TaskCancellationStrategy$Null$@37b599b9, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set()
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set()

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set()

Copy resource mappings: 
	
[Loading] Scanning directory /Users/lpfeiler/develop/github/base64
[Loading] Found non-root projects 
[Loading] Done in /Users/lpfeiler/develop/github/base64, returning: ()
deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.BackgroundRunPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.BackgroundRunPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.InteractionServicePlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.SendEventServicePlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.SerializersPlugin)))))
  :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.SerializersPlugin,sbt.plugins.SendEventServicePlugin,sbt.plugins.InteractionServicePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.BackgroundRunPlugin,sbt.plugins.JUnitXmlReportPlugin)
sorting: ns: List(sbt.plugins.CorePlugin, sbt.plugins.SerializersPlugin, sbt.plugins.SendEventServicePlugin, sbt.plugins.InteractionServicePlugin, sbt.plugins.IvyPlugin, sbt.plugins.JvmPlugin, sbt.plugins.BackgroundRunPlugin, sbt.plugins.JUnitXmlReportPlugin)
  :: sorting:: found: List(sbt.plugins.CorePlugin) not found List(sbt.plugins.SerializersPlugin, sbt.plugins.SendEventServicePlugin, sbt.plugins.InteractionServicePlugin, sbt.plugins.IvyPlugin, sbt.plugins.JvmPlugin, sbt.plugins.BackgroundRunPlugin, sbt.plugins.JUnitXmlReportPlugin)
  :: sorting:: found: List(sbt.plugins.CorePlugin, sbt.plugins.SerializersPlugin, sbt.plugins.SendEventServicePlugin, sbt.plugins.InteractionServicePlugin, sbt.plugins.IvyPlugin) not found List(sbt.plugins.JvmPlugin, sbt.plugins.BackgroundRunPlugin, sbt.plugins.JUnitXmlReportPlugin)
  :: sorting:: found: List(sbt.plugins.CorePlugin, sbt.plugins.SerializersPlugin, sbt.plugins.SendEventServicePlugin, sbt.plugins.InteractionServicePlugin, sbt.plugins.IvyPlugin, sbt.plugins.JvmPlugin) not found List(sbt.plugins.BackgroundRunPlugin, sbt.plugins.JUnitXmlReportPlugin)
  :: sorting:: found: List(sbt.plugins.CorePlugin, sbt.plugins.SerializersPlugin, sbt.plugins.SendEventServicePlugin, sbt.plugins.InteractionServicePlugin, sbt.plugins.IvyPlugin, sbt.plugins.JvmPlugin, sbt.plugins.BackgroundRunPlugin, sbt.plugins.JUnitXmlReportPlugin) not found List()
  :: sorted deduced result: List(sbt.plugins.CorePlugin, sbt.plugins.SerializersPlugin, sbt.plugins.SendEventServicePlugin, sbt.plugins.InteractionServicePlugin, sbt.plugins.IvyPlugin, sbt.plugins.JvmPlugin, sbt.plugins.BackgroundRunPlugin, sbt.plugins.JUnitXmlReportPlugin)
[Loading] Done in /Users/lpfeiler/develop/github/base64, returning: (base64)
Set current project to base64 (in build file:/Users/lpfeiler/develop/github/base64/)
Reapplying settings...
Set current project to base64 (in build file:/Users/lpfeiler/develop/github/base64/)
> iflast shell
> server-send-ready-for-request
> server-handle-next-server-request
> compile
Evaluating tasks: compile:compile
Running task... Cancel: sbt.server.ServerTaskCancellation@6aa80dfb, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set()
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set()

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set()

Total time: 1 s, completed 31.05.2016 15:23:00
> server-post-command-cleanup
> server-handle-next-server-request
> {file:/Users/lpfeiler/develop/github/base64/}base64/compile:discoveredMainClasses
Evaluating tasks: compile:discoveredMainClasses
Running task... Cancel: sbt.server.ServerTaskCancellation@667110c9, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set()
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set()

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set()

Total time: 1 s, completed 31.05.2016 15:23:01
> server-post-command-cleanup
> server-handle-next-server-request
> {file:/Users/lpfeiler/develop/github/base64/}base64/compile:mainClass
Evaluating tasks: compile:mainClass
Running task... Cancel: sbt.server.ServerTaskCancellation@5d95bb72, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set()
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set()

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set()

Total time: 1 s, completed 31.05.2016 15:23:01
> server-post-command-cleanup
> server-handle-next-server-request
> test
Evaluating tasks: test:test
Running task... Cancel: sbt.server.ServerTaskCancellation@46cbd56c, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set()
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set()

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set()

Copy resource mappings: 
	

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set()
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set()

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set()

Copy resource mappings: 
	
Framework implementation 'org.scalacheck.ScalaCheckFramework' not present.
Framework implementation 'org.specs2.runner.Specs2Framework' not present.
Framework implementation 'org.specs2.runner.SpecsFramework' not present.
Framework implementation 'org.specs.runner.SpecsFramework' not present.
Framework implementation 'com.novocode.junit.JUnitFramework' not present.
Subclass fingerprints: List((org.scalatest.Suite,false,org.scalatest.tools.Framework$$anon$1@3538628e))
Annotation fingerprints: List((org.scalatest.WrapWith,false,org.scalatest.tools.Framework$$anon$2@3176a8ed))
Running TaskDef(Base64Spec, org.scalatest.tools.Framework$$anon$1@3538628e, false, [SuiteSelector])
Running TaskDef(Base32Spec, org.scalatest.tools.Framework$$anon$1@3538628e, false, [SuiteSelector])
Running TaskDef(StreamDecoderSpec, org.scalatest.tools.Framework$$anon$1@3538628e, false, [SuiteSelector])
Running TaskDef(Base16Spec, org.scalatest.tools.Framework$$anon$1@3538628e, false, [SuiteSelector])
Read from stdout: StreamDecoderSpec:
Read from stdout: StreamDecoder
Read from stdout: - should check allowed bytes
[32mStreamDecoderSpec:[0m
[32mStreamDecoder[0m
[32m- should check allowed bytes[0m
Read from stdout: Base16Spec:
Read from stdout: Base16
Read from stdout: - should encode to BASE16
[32mBase16Spec:[0m
[32mBase16[0m
[32m- should encode to BASE16[0m
Running TaskDef(StreamCodecSpec, org.scalatest.tools.Framework$$anon$1@3538628e, false, [SuiteSelector])
Read from stdout: Base32Spec:
Read from stdout: Base32
Read from stdout: - should encode to BASE32
Read from stdout: Base32
Read from stdout: - should encode to BASE32NOPAD
Read from stdout: Base32
Read from stdout: - should encode to BASE32URL
Read from stdout: Base32
Read from stdout: - should encode to BASE32HEX
Read from stdout: Base32
Read from stdout: - should encode to BASE32HEXNOPAD
Read from stdout: Base32
Read from stdout: - should encode to BASE32HEXURL
Read from stdout: Base32
Read from stdout: - should decode from BASE32
Read from stdout: Base32
Read from stdout: - should decode from BASE32 w/o padding
Read from stdout: StreamCodecSpec:
Read from stdout: StreamCodec
Read from stdout: - should create a ByteStream
Read from stdout: StreamCodec
Read from stdout: - should create a IntStream
Read from stdout: StreamCodec
Read from stdout: - should create a groupStream
Read from stdout: StreamCodec
Read from stdout: - should create a filledStream
Read from stdout: StreamCodec
Read from stdout: - should flatten a filledStream
[32mStreamCodecSpec:[0m
[32mStreamCodec[0m
[32m- should create a ByteStream[0m
[32mStreamCodec[0m
[32m- should create a IntStream[0m
[32mStreamCodec[0m
[32m- should create a groupStream[0m
[32mStreamCodec[0m
[32m- should create a filledStream[0m
[32mStreamCodec[0m
[32m- should flatten a filledStream[0m
[32mBase32Spec:[0m
[32mBase32[0m
[32m- should encode to BASE32[0m
[32mBase32[0m
[32m- should encode to BASE32NOPAD[0m
Read from stdout: Base64Spec:
[32mBase32[0m
[32m- should encode to BASE32URL[0m
Read from stdout: Base64
Read from stdout: - should encode to BASE64
Read from stdout: Base64
Read from stdout: - should encode to BASE64FILE
Read from stdout: Base64
Read from stdout: - should encode to BASE64URL
Read from stdout: Base64
Read from stdout: - should encode to BASE64NOPAD
Read from stdout: Base64
Read from stdout: - should encode to BASE64FILENOPAD
[32mBase32[0m
[32m- should encode to BASE32HEX[0m
[32mBase32[0m
Read from stdout: Base64
[32m- should encode to BASE32HEXNOPAD[0m
[32mBase32[0m
Read from stdout: - should encode to BASE64URLNOPAD
[32m- should encode to BASE32HEXURL[0m
Read from stdout: Base64
Read from stdout: - should decode from BASE64
Read from stdout: Base64
Read from stdout: - should decode from BASE64 w/o padding
Read from stdout: Base64
Read from stdout: - should fail with crap
Read from stdout: Base64
Read from stdout: - should decode from BASE64FILE
Read from stdout: Base64
Read from stdout: - should decode from BASE64FILE w/o padding
Read from stdout: Base64
Read from stdout: - should decode from BASE64URL
[32mBase64Spec:[0m
[32mBase64[0m
[32m- should encode to BASE64[0m
[32mBase64[0m
[32m- should encode to BASE64FILE[0m
[32mBase64[0m
[32m- should encode to BASE64URL[0m
[32mBase64[0m
[32m- should encode to BASE64NOPAD[0m
[32mBase64[0m
[32m- should encode to BASE64FILENOPAD[0m
[32mBase64[0m
[32m- should encode to BASE64URLNOPAD[0m
[32mBase64[0m
[32m- should decode from BASE64[0m
[32mBase64[0m
[32m- should decode from BASE64 w/o padding[0m
[32mBase64[0m
[32m- should fail with crap[0m
[32mBase64[0m
[32m- should decode from BASE64FILE[0m
[32mBase64[0m
[32m- should decode from BASE64FILE w/o padding[0m
[32mBase64[0m
[32m- should decode from BASE64URL[0m
[32mBase32[0m
[32m- should decode from BASE32[0m
[32mBase32[0m
[32m- should decode from BASE32 w/o padding[0m
Read from stdout: Run completed in 1 second, 588 milliseconds.
Read from stdout: Total number of tests run: 27
Read from stdout: Suites: completed 5, aborted 0
Read from stdout: Tests: succeeded 27, failed 0, canceled 0, ignored 0, pending 0
Read from stdout: All tests passed.
Run completed in 1 second, 588 milliseconds.
Total number of tests run: 27
Suites: completed 5, aborted 0
Tests: succeeded 27, failed 0, canceled 0, ignored 0, pending 0
All tests passed.
Passed tests:
	StreamCodecSpec
	Base64Spec
	StreamDecoderSpec
	Base32Spec
	Base16Spec
Total time: 3 s, completed 31.05.2016 15:23:05
> server-post-command-cleanup
> server-handle-next-server-request
> {file:/Users/lpfeiler/develop/github/base64/}base64/compile:discoveredMainClasses
Evaluating tasks: compile:discoveredMainClasses
Running task... Cancel: sbt.server.ServerTaskCancellation@15924f84, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set()
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set()

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set()

Total time: 0 s, completed 31.05.2016 15:23:05
> server-post-command-cleanup
> server-handle-next-server-request
