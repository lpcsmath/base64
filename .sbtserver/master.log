New log file opened at Tue May 31 14:44:25 CEST 2016 by 6183@Lothars-MacBook-Pro.fritz.box
jvm 6183@Lothars-MacBook-Pro.fritz.box
jvm vmName=Java HotSpot(TM) 64-Bit Server VM vmVendor=Oracle Corporation vmVersion=25.60-b23
jvm specName=Java Virtual Machine Specification specVendor=Oracle Corporation specVersion=1.8
jvm arguments: [-Xms256m, -Xmx1024m, -XX:MetaspaceSize=64m, -XX:MaxMetaspaceSize=256m]
Starting event engine
Starting sbt command engine
Waiting for sbt command engine
Command engine arguments=List()
Command engine baseDirectory=/Users/lpfeiler/develop/github/base64
Command engine initial remaining commands List(--initialize, onFailure load-failed, boot, server-send-ready-for-request, server-handle-next-server-request)
> --initialize
> initialize
> onFailure load-failed
> boot
> reload
[Loading] Scanning directory /Users/lpfeiler/develop/github/base64/project
[Loading] Found non-root projects 
[Loading] Done in /Users/lpfeiler/develop/github/base64/project, returning: ()
deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))))
  :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.JUnitXmlReportPlugin)
sorting: ns: List(sbt.plugins.CorePlugin, sbt.plugins.IvyPlugin, sbt.plugins.JvmPlugin, sbt.plugins.JUnitXmlReportPlugin)
  :: sorting:: found: List(sbt.plugins.CorePlugin) not found List(sbt.plugins.IvyPlugin, sbt.plugins.JvmPlugin, sbt.plugins.JUnitXmlReportPlugin)
  :: sorting:: found: List(sbt.plugins.CorePlugin, sbt.plugins.IvyPlugin) not found List(sbt.plugins.JvmPlugin, sbt.plugins.JUnitXmlReportPlugin)
  :: sorting:: found: List(sbt.plugins.CorePlugin, sbt.plugins.IvyPlugin, sbt.plugins.JvmPlugin) not found List(sbt.plugins.JUnitXmlReportPlugin)
  :: sorting:: found: List(sbt.plugins.CorePlugin, sbt.plugins.IvyPlugin, sbt.plugins.JvmPlugin, sbt.plugins.JUnitXmlReportPlugin) not found List()
  :: sorted deduced result: List(sbt.plugins.CorePlugin, sbt.plugins.IvyPlugin, sbt.plugins.JvmPlugin, sbt.plugins.JUnitXmlReportPlugin)
[Loading] Done in /Users/lpfeiler/develop/github/base64/project, returning: (base64-build)
Loading project definition from /Users/lpfeiler/develop/github/base64/project
Running task... Cancel: sbt.TaskCancellationStrategy$Null$@6422fac3, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set()
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set()

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set()

Copy resource mappings: 
	
[Loading] Scanning directory /Users/lpfeiler/develop/github/base64
[Loading] Found non-root projects 
[Loading] Done in /Users/lpfeiler/develop/github/base64, returning: ()
deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.BackgroundRunPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.BackgroundRunPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.InteractionServicePlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.SendEventServicePlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.SerializersPlugin)))))
  :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.SerializersPlugin,sbt.plugins.SendEventServicePlugin,sbt.plugins.InteractionServicePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.BackgroundRunPlugin,sbt.plugins.JUnitXmlReportPlugin)
sorting: ns: List(sbt.plugins.CorePlugin, sbt.plugins.SerializersPlugin, sbt.plugins.SendEventServicePlugin, sbt.plugins.InteractionServicePlugin, sbt.plugins.IvyPlugin, sbt.plugins.JvmPlugin, sbt.plugins.BackgroundRunPlugin, sbt.plugins.JUnitXmlReportPlugin)
  :: sorting:: found: List(sbt.plugins.CorePlugin) not found List(sbt.plugins.SerializersPlugin, sbt.plugins.SendEventServicePlugin, sbt.plugins.InteractionServicePlugin, sbt.plugins.IvyPlugin, sbt.plugins.JvmPlugin, sbt.plugins.BackgroundRunPlugin, sbt.plugins.JUnitXmlReportPlugin)
  :: sorting:: found: List(sbt.plugins.CorePlugin, sbt.plugins.SerializersPlugin, sbt.plugins.SendEventServicePlugin, sbt.plugins.InteractionServicePlugin, sbt.plugins.IvyPlugin) not found List(sbt.plugins.JvmPlugin, sbt.plugins.BackgroundRunPlugin, sbt.plugins.JUnitXmlReportPlugin)
  :: sorting:: found: List(sbt.plugins.CorePlugin, sbt.plugins.SerializersPlugin, sbt.plugins.SendEventServicePlugin, sbt.plugins.InteractionServicePlugin, sbt.plugins.IvyPlugin, sbt.plugins.JvmPlugin) not found List(sbt.plugins.BackgroundRunPlugin, sbt.plugins.JUnitXmlReportPlugin)
  :: sorting:: found: List(sbt.plugins.CorePlugin, sbt.plugins.SerializersPlugin, sbt.plugins.SendEventServicePlugin, sbt.plugins.InteractionServicePlugin, sbt.plugins.IvyPlugin, sbt.plugins.JvmPlugin, sbt.plugins.BackgroundRunPlugin, sbt.plugins.JUnitXmlReportPlugin) not found List()
  :: sorted deduced result: List(sbt.plugins.CorePlugin, sbt.plugins.SerializersPlugin, sbt.plugins.SendEventServicePlugin, sbt.plugins.InteractionServicePlugin, sbt.plugins.IvyPlugin, sbt.plugins.JvmPlugin, sbt.plugins.BackgroundRunPlugin, sbt.plugins.JUnitXmlReportPlugin)
[Loading] Done in /Users/lpfeiler/develop/github/base64, returning: (base64)
Set current project to base64 (in build file:/Users/lpfeiler/develop/github/base64/)
Reapplying settings...
Set current project to base64 (in build file:/Users/lpfeiler/develop/github/base64/)
> iflast shell
> server-send-ready-for-request
> server-handle-next-server-request
> compile
Evaluating tasks: compile:compile
Running task... Cancel: sbt.server.ServerTaskCancellation@2961909f, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala)
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala)

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala)

Read from stdout: Compiling 2 Scala sources to /Users/lpfeiler/develop/github/base64/target/scala-2.11/classes...
Compiling 2 Scala sources to /Users/lpfeiler/develop/github/base64/target/scala-2.11/classes...
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Running cached compiler 58a03a6c, interfacing (CompilerInterface) with Scala compiler version 2.11.7
Calling Scala compiler with arguments  (CompilerInterface):
	-bootclasspath
	/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/classes:/Users/lpfeiler/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.11.7.jar
	-classpath
	/Users/lpfeiler/develop/github/base64/target/scala-2.11/classes
Scala compilation took 4.264246238 s
Invalidating /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala...
Invalidating (transitively) by inheritance from /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala...
Initial set of included nodes: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala)
Invalidated by transitive inheritance dependency: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala)
The /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala source file has the following regular definitions changed:
	encodeToString, encodeToString$default$2.
All member reference dependencies will be considered within this context.
New invalidations:
	Set()
Initial set of included nodes: Set()
Previously invalidated, but (transitively) depend on new invalidations:
	Set()
All newly invalidated sources after taking into account (previously) recompiled sources:Set()
Total time: 6 s, completed 31.05.2016 14:44:39
> server-post-command-cleanup
> server-handle-next-server-request
> {file:/Users/lpfeiler/develop/github/base64/}base64/compile:discoveredMainClasses
Evaluating tasks: compile:discoveredMainClasses
Running task... Cancel: sbt.server.ServerTaskCancellation@495d81d2, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set()
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set()

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set()

Total time: 1 s, completed 31.05.2016 14:44:39
> server-post-command-cleanup
> server-handle-next-server-request
> {file:/Users/lpfeiler/develop/github/base64/}base64/compile:mainClass
Evaluating tasks: compile:mainClass
Running task... Cancel: sbt.server.ServerTaskCancellation@5045ef4a, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set()
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set()

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set()

Total time: 1 s, completed 31.05.2016 14:44:40
> server-post-command-cleanup
> server-handle-next-server-request
> test
Evaluating tasks: test:test
Running task... Cancel: sbt.server.ServerTaskCancellation@7f544209, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set()
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set()

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set()

Copy resource mappings: 
	
The de.csmath.codec.Base16$ source file has the following regular definitions changed:
	base16Enc.
All member reference dependencies will be considered within this context.
Files invalidated by inheriting from (external) de.csmath.codec.Base16$: Set(); now invalidating by inheritance (internally).
Getting direct dependencies of all sources transitively invalidated by inheritance.
Getting sources that directly depend on (external) de.csmath.codec.Base16$.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/test/scala/Base16Spec.scala. This dependency is not being considered for invalidation.
The de.csmath.codec.Base32$ source file has the following regular definitions changed:
	encodeToString, encodeToString$default$2.
All member reference dependencies will be considered within this context.
Files invalidated by inheriting from (external) de.csmath.codec.Base32$: Set(); now invalidating by inheritance (internally).
Getting direct dependencies of all sources transitively invalidated by inheritance.
Getting sources that directly depend on (external) de.csmath.codec.Base32$.
The following modified names cause invalidation of /Users/lpfeiler/develop/github/base64/src/test/scala/Base32Spec.scala: Set(encodeToString)

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set()
Removed products: Set()
External API changes: API Changes: Set(NamesChange(de.csmath.codec.Base16$,ModifiedNames(regularNames = base16Enc, implicitNames = )), NamesChange(de.csmath.codec.Base32$,ModifiedNames(regularNames = encodeToString, encodeToString$default$2, implicitNames = )))
Modified binary dependencies: Set()
Initial directly invalidated sources: Set()

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/Base32Spec.scala)
All initially invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/Base32Spec.scala)

Read from stdout: Compiling 1 Scala source to /Users/lpfeiler/develop/github/base64/target/scala-2.11/test-classes...
Compiling 1 Scala source to /Users/lpfeiler/develop/github/base64/target/scala-2.11/test-classes...
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Running cached compiler 693a0234, interfacing (CompilerInterface) with Scala compiler version 2.11.7
Calling Scala compiler with arguments  (CompilerInterface):
	-bootclasspath
	/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/classes:/Users/lpfeiler/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.11.7.jar
	-classpath
	/Users/lpfeiler/develop/github/base64/target/scala-2.11/test-classes:/Users/lpfeiler/develop/github/base64/target/scala-2.11/classes:/Users/lpfeiler/develop/scala/activator-dist-1.3.6/repository/org.scalatest/scalatest_2.11/2.2.4/bundles/scalatest_2.11.jar:/Users/lpfeiler/develop/scala/activator-dist-1.3.6/repository/org.scala-lang/scala-reflect/2.11.2/jars/scala-reflect.jar:/Users/lpfeiler/develop/scala/activator-dist-1.3.6/repository/org.scala-lang.modules/scala-xml_2.11/1.0.2/bundles/scala-xml_2.11.jar
Scala compilation took 3.314158851 s
New invalidations:
	Set()
Initial set of included nodes: Set()
Previously invalidated, but (transitively) depend on new invalidations:
	Set()
All newly invalidated sources after taking into account (previously) recompiled sources:Set()
Copy resource mappings: 
	
Framework implementation 'org.scalacheck.ScalaCheckFramework' not present.
Framework implementation 'org.specs2.runner.Specs2Framework' not present.
Framework implementation 'org.specs2.runner.SpecsFramework' not present.
Framework implementation 'org.specs.runner.SpecsFramework' not present.
Framework implementation 'com.novocode.junit.JUnitFramework' not present.
Subclass fingerprints: List((org.scalatest.Suite,false,org.scalatest.tools.Framework$$anon$1@67af603e))
Annotation fingerprints: List((org.scalatest.WrapWith,false,org.scalatest.tools.Framework$$anon$2@365a36de))
Running TaskDef(Base64Spec, org.scalatest.tools.Framework$$anon$1@67af603e, false, [SuiteSelector])
Running TaskDef(StreamCodecSpec, org.scalatest.tools.Framework$$anon$1@67af603e, false, [SuiteSelector])
Running TaskDef(StreamDecoderSpec, org.scalatest.tools.Framework$$anon$1@67af603e, false, [SuiteSelector])
Running TaskDef(Base16Spec, org.scalatest.tools.Framework$$anon$1@67af603e, false, [SuiteSelector])
Read from stdout: StreamDecoderSpec:
Read from stdout: StreamDecoder
Read from stdout: - should check allowed bytes
[32mStreamDecoderSpec:[0m
[32mStreamDecoder[0m
[32m- should check allowed bytes[0m
Read from stdout: Base16Spec:
Read from stdout: Base16
Read from stdout: - should encode to BASE16
Read from stdout: StreamCodecSpec:
Read from stdout: StreamCodec
Read from stdout: - should create a ByteStream
Read from stdout: StreamCodec
Read from stdout: - should create a IntStream
Read from stdout: StreamCodec
Read from stdout: - should create a groupStream
Read from stdout: StreamCodec
Read from stdout: - should create a filledStream
Read from stdout: StreamCodec
Read from stdout: - should flatten a filledStream
[32mBase16Spec:[0m
[32mBase16[0m
[32m- should encode to BASE16[0m
[32mStreamCodecSpec:[0m
[32mStreamCodec[0m
[32m- should create a ByteStream[0m
[32mStreamCodec[0m
[32m- should create a IntStream[0m
[32mStreamCodec[0m
[32m- should create a groupStream[0m
[32mStreamCodec[0m
[32m- should create a filledStream[0m
[32mStreamCodec[0m
[32m- should flatten a filledStream[0m
Running TaskDef(Base32Spec, org.scalatest.tools.Framework$$anon$1@67af603e, false, [SuiteSelector])
Read from stdout: Base64Spec:
Read from stdout: Base64
Read from stdout: - should encode to BASE64
Read from stdout: Base64
Read from stdout: - should encode to BASE64FILE
Read from stdout: Base64
Read from stdout: - should encode to BASE64URL
Read from stdout: Base64
Read from stdout: - should encode to BASE64NOPAD
Read from stdout: Base64
Read from stdout: - should encode to BASE64FILENOPAD
Read from stdout: Base64
Read from stdout: - should encode to BASE64URLNOPAD
Read from stdout: Base64
Read from stdout: - should decode from BASE64
Read from stdout: Base64
Read from stdout: - should decode from BASE64 w/o padding
Read from stdout: Base64
Read from stdout: - should fail with crap
Read from stdout: Base64
Read from stdout: - should decode from BASE64FILE
Read from stdout: Base64
Read from stdout: - should decode from BASE64FILE w/o padding
Read from stdout: Base64
Read from stdout: - should decode from BASE64URL
[32mBase64Spec:[0m
[32mBase64[0m
[32m- should encode to BASE64[0m
[32mBase64[0m
[32m- should encode to BASE64FILE[0m
[32mBase64[0m
[32m- should encode to BASE64URL[0m
[32mBase64[0m
[32m- should encode to BASE64NOPAD[0m
[32mBase64[0m
[32m- should encode to BASE64FILENOPAD[0m
[32mBase64[0m
[32m- should encode to BASE64URLNOPAD[0m
[32mBase64[0m
Read from stdout: Base32Spec:
[32m- should decode from BASE64[0m
[32mBase64[0m
Read from stdout: Base32
Read from stdout: - should encode to BASE32
Read from stdout: Base32
Read from stdout: - should encode to BASE32NOPAD
Read from stdout: Base32
Read from stdout: - should encode to BASE32URL
Read from stdout: Base32
Read from stdout: - should encode to BASE32HEX
Read from stdout: Base32
Read from stdout: - should encode to BASE32HEXNOPAD
Read from stdout: Base32
Read from stdout: - should encode to BASE32HEXURL
Read from stdout: Base32
Read from stdout: - should decode from BASE32
Read from stdout: Base32
Read from stdout: - should decode from BASE32 w/o padding
[32m- should decode from BASE64 w/o padding[0m
[32mBase32Spec:[0m
[32mBase32[0m
[32mBase64[0m
[32m- should fail with crap[0m
[32m- should encode to BASE32[0m
[32mBase32[0m
[32mBase64[0m
[32m- should encode to BASE32NOPAD[0m
[32mBase32[0m
[32m- should encode to BASE32URL[0m
[32mBase32[0m
[32m- should encode to BASE32HEX[0m
[32mBase32[0m
[32m- should encode to BASE32HEXNOPAD[0m
[32m- should decode from BASE64FILE[0m
[32mBase64[0m
[32mBase32[0m
[32m- should encode to BASE32HEXURL[0m
[32mBase32[0m
[32m- should decode from BASE64FILE w/o padding[0m
[32mBase64[0m
[32m- should decode from BASE32[0m
[32mBase32[0m
[32m- should decode from BASE32 w/o padding[0m
[32m- should decode from BASE64URL[0m
Read from stdout: Run completed in 928 milliseconds.
Read from stdout: Total number of tests run: 27
Read from stdout: Suites: completed 5, aborted 0
Read from stdout: Tests: succeeded 27, failed 0, canceled 0, ignored 0, pending 0
Read from stdout: All tests passed.
Run completed in 928 milliseconds.
Total number of tests run: 27
Suites: completed 5, aborted 0
Tests: succeeded 27, failed 0, canceled 0, ignored 0, pending 0
All tests passed.
Passed tests:
	StreamCodecSpec
	Base64Spec
	StreamDecoderSpec
	Base32Spec
	Base16Spec
Total time: 5 s, completed 31.05.2016 14:44:46
> server-post-command-cleanup
> server-handle-next-server-request
> {file:/Users/lpfeiler/develop/github/base64/}base64/compile:discoveredMainClasses
Evaluating tasks: compile:discoveredMainClasses
Running task... Cancel: sbt.server.ServerTaskCancellation@2fbc4089, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set()
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set()

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set()

Total time: 0 s, completed 31.05.2016 14:44:46
> server-post-command-cleanup
> server-handle-next-server-request
> compile
Evaluating tasks: compile:compile
Running task... Cancel: sbt.server.ServerTaskCancellation@3a94ed3, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala)
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala)

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala)

Read from stdout: Compiling 1 Scala source to /Users/lpfeiler/develop/github/base64/target/scala-2.11/classes...
Compiling 1 Scala source to /Users/lpfeiler/develop/github/base64/target/scala-2.11/classes...
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Running cached compiler 293a0612, interfacing (CompilerInterface) with Scala compiler version 2.11.7
Calling Scala compiler with arguments  (CompilerInterface):
	-bootclasspath
	/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/classes:/Users/lpfeiler/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.11.7.jar
	-classpath
	/Users/lpfeiler/develop/github/base64/target/scala-2.11/classes
Scala compilation took 0.929972724 s
Invalidating /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala...
Invalidating (transitively) by inheritance from /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala...
Initial set of included nodes: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala)
Invalidated by transitive inheritance dependency: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala)
The /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala source file has the following regular definitions changed:
	encode, encode$default$2.
All member reference dependencies will be considered within this context.
New invalidations:
	Set()
Initial set of included nodes: Set()
Previously invalidated, but (transitively) depend on new invalidations:
	Set()
All newly invalidated sources after taking into account (previously) recompiled sources:Set()
Total time: 1 s, completed 31.05.2016 14:45:24
> server-post-command-cleanup
> server-handle-next-server-request
> test
Evaluating tasks: test:test
Running task... Cancel: sbt.server.ServerTaskCancellation@4e44f623, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set()
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set()

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set()

Copy resource mappings: 
	
The de.csmath.codec.Base16$ source file has the following regular definitions changed:
	base16Enc.
All member reference dependencies will be considered within this context.
Files invalidated by inheriting from (external) de.csmath.codec.Base16$: Set(); now invalidating by inheritance (internally).
Getting direct dependencies of all sources transitively invalidated by inheritance.
Getting sources that directly depend on (external) de.csmath.codec.Base16$.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/test/scala/Base16Spec.scala. This dependency is not being considered for invalidation.
The de.csmath.codec.Base32$ source file has the following regular definitions changed:
	encode, encode$default$2.
All member reference dependencies will be considered within this context.
Files invalidated by inheriting from (external) de.csmath.codec.Base32$: Set(); now invalidating by inheritance (internally).
Getting direct dependencies of all sources transitively invalidated by inheritance.
Getting sources that directly depend on (external) de.csmath.codec.Base32$.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/test/scala/Base32Spec.scala. This dependency is not being considered for invalidation.

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set()
Removed products: Set()
External API changes: API Changes: Set(NamesChange(de.csmath.codec.Base16$,ModifiedNames(regularNames = base16Enc, implicitNames = )), NamesChange(de.csmath.codec.Base32$,ModifiedNames(regularNames = encode, encode$default$2, implicitNames = )))
Modified binary dependencies: Set()
Initial directly invalidated sources: Set()

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set()

Copy resource mappings: 
	
Framework implementation 'org.scalacheck.ScalaCheckFramework' not present.
Framework implementation 'org.specs2.runner.Specs2Framework' not present.
Framework implementation 'org.specs2.runner.SpecsFramework' not present.
Framework implementation 'org.specs.runner.SpecsFramework' not present.
Framework implementation 'com.novocode.junit.JUnitFramework' not present.
Subclass fingerprints: List((org.scalatest.Suite,false,org.scalatest.tools.Framework$$anon$1@1b4ebb4c))
Annotation fingerprints: List((org.scalatest.WrapWith,false,org.scalatest.tools.Framework$$anon$2@5d4424dd))
Running TaskDef(Base64Spec, org.scalatest.tools.Framework$$anon$1@1b4ebb4c, false, [SuiteSelector])
Running TaskDef(Base16Spec, org.scalatest.tools.Framework$$anon$1@1b4ebb4c, false, [SuiteSelector])
Running TaskDef(Base32Spec, org.scalatest.tools.Framework$$anon$1@1b4ebb4c, false, [SuiteSelector])
Running TaskDef(StreamCodecSpec, org.scalatest.tools.Framework$$anon$1@1b4ebb4c, false, [SuiteSelector])
Read from stdout: Base16Spec:
Read from stdout: Base16
Read from stdout: - should encode to BASE16
[32mBase16Spec:[0m
[32mBase16[0m
[32m- should encode to BASE16[0m
Running TaskDef(StreamDecoderSpec, org.scalatest.tools.Framework$$anon$1@1b4ebb4c, false, [SuiteSelector])
Read from stdout: StreamDecoderSpec:
Read from stdout: StreamDecoder
Read from stdout: - should check allowed bytes
[32mStreamDecoderSpec:[0m
[32mStreamDecoder[0m
[32m- should check allowed bytes[0m
Read from stdout: Base32Spec:
Read from stdout: Base32
Read from stdout: - should encode to BASE32
Read from stdout: Base32
Read from stdout: - should encode to BASE32NOPAD
Read from stdout: Base32
Read from stdout: - should encode to BASE32URL
Read from stdout: Base32
Read from stdout: - should encode to BASE32HEX
Read from stdout: Base32
Read from stdout: - should encode to BASE32HEXNOPAD
Read from stdout: Base32
Read from stdout: - should encode to BASE32HEXURL
Read from stdout: Base32
Read from stdout: - should decode from BASE32
Read from stdout: Base32
Read from stdout: - should decode from BASE32 w/o padding
[32mBase32Spec:[0m
[32mBase32[0m
[32m- should encode to BASE32[0m
[32mBase32[0m
[32m- should encode to BASE32NOPAD[0m
[32mBase32[0m
[32m- should encode to BASE32URL[0m
[32mBase32[0m
[32m- should encode to BASE32HEX[0m
[32mBase32[0m
[32m- should encode to BASE32HEXNOPAD[0m
[32mBase32[0m
[32m- should encode to BASE32HEXURL[0m
[32mBase32[0m
[32m- should decode from BASE32[0m
[32mBase32[0m
[32m- should decode from BASE32 w/o padding[0m
Read from stdout: Base64Spec:
Read from stdout: Base64
Read from stdout: - should encode to BASE64
Read from stdout: Base64
Read from stdout: - should encode to BASE64FILE
Read from stdout: Base64
Read from stdout: - should encode to BASE64URL
Read from stdout: Base64
Read from stdout: - should encode to BASE64NOPAD
Read from stdout: Base64
Read from stdout: - should encode to BASE64FILENOPAD
Read from stdout: Base64
Read from stdout: - should encode to BASE64URLNOPAD
Read from stdout: Base64
Read from stdout: - should decode from BASE64
Read from stdout: Base64
Read from stdout: - should decode from BASE64 w/o padding
Read from stdout: Base64
Read from stdout: - should fail with crap
Read from stdout: Base64
Read from stdout: - should decode from BASE64FILE
Read from stdout: Base64
Read from stdout: - should decode from BASE64FILE w/o padding
Read from stdout: Base64
Read from stdout: - should decode from BASE64URL
Read from stdout: StreamCodecSpec:
Read from stdout: StreamCodec
Read from stdout: - should create a ByteStream
Read from stdout: StreamCodec
Read from stdout: - should create a IntStream
Read from stdout: StreamCodec
Read from stdout: - should create a groupStream
Read from stdout: StreamCodec
Read from stdout: - should create a filledStream
Read from stdout: StreamCodec
Read from stdout: - should flatten a filledStream
[32mStreamCodecSpec:[0m
[32mStreamCodec[0m
[32m- should create a ByteStream[0m
[32mStreamCodec[0m
[32m- should create a IntStream[0m
[32mStreamCodec[0m
[32m- should create a groupStream[0m
[32mStreamCodec[0m
[32m- should create a filledStream[0m
[32mStreamCodec[0m
[32m- should flatten a filledStream[0m
[32mBase64Spec:[0m
[32mBase64[0m
[32m- should encode to BASE64[0m
[32mBase64[0m
[32m- should encode to BASE64FILE[0m
[32mBase64[0m
[32m- should encode to BASE64URL[0m
[32mBase64[0m
[32m- should encode to BASE64NOPAD[0m
[32mBase64[0m
[32m- should encode to BASE64FILENOPAD[0m
[32mBase64[0m
[32m- should encode to BASE64URLNOPAD[0m
[32mBase64[0m
[32m- should decode from BASE64[0m
[32mBase64[0m
[32m- should decode from BASE64 w/o padding[0m
[32mBase64[0m
[32m- should fail with crap[0m
[32mBase64[0m
[32m- should decode from BASE64FILE[0m
[32mBase64[0m
[32m- should decode from BASE64FILE w/o padding[0m
[32mBase64[0m
[32m- should decode from BASE64URL[0m
Read from stdout: Run completed in 523 milliseconds.
Read from stdout: Total number of tests run: 27
Read from stdout: Suites: completed 5, aborted 0
Read from stdout: Tests: succeeded 27, failed 0, canceled 0, ignored 0, pending 0
Read from stdout: All tests passed.
Run completed in 523 milliseconds.
Total number of tests run: 27
Suites: completed 5, aborted 0
Tests: succeeded 27, failed 0, canceled 0, ignored 0, pending 0
All tests passed.
Passed tests:
	StreamCodecSpec
	Base64Spec
	StreamDecoderSpec
	Base32Spec
	Base16Spec
Total time: 1 s, completed 31.05.2016 14:45:25
> server-post-command-cleanup
> server-handle-next-server-request
> compile
Evaluating tasks: compile:compile
Running task... Cancel: sbt.server.ServerTaskCancellation@2a8b56d0, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala)
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala)

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala)

Read from stdout: Compiling 1 Scala source to /Users/lpfeiler/develop/github/base64/target/scala-2.11/classes...
Compiling 1 Scala source to /Users/lpfeiler/develop/github/base64/target/scala-2.11/classes...
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Running cached compiler 1e153a5, interfacing (CompilerInterface) with Scala compiler version 2.11.7
Calling Scala compiler with arguments  (CompilerInterface):
	-bootclasspath
	/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/classes:/Users/lpfeiler/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.11.7.jar
	-classpath
	/Users/lpfeiler/develop/github/base64/target/scala-2.11/classes
Scala compilation took 0.887622576 s
Invalidating /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala...
Invalidating (transitively) by inheritance from /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala...
Initial set of included nodes: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala)
Invalidated by transitive inheritance dependency: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala)
The /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala source file has the following regular definitions changed:
	encode.
All member reference dependencies will be considered within this context.
New invalidations:
	Set()
Initial set of included nodes: Set()
Previously invalidated, but (transitively) depend on new invalidations:
	Set()
All newly invalidated sources after taking into account (previously) recompiled sources:Set()
Total time: 1 s, completed 31.05.2016 14:46:49
> server-post-command-cleanup
> server-handle-next-server-request
> test
Evaluating tasks: test:test
Running task... Cancel: sbt.server.ServerTaskCancellation@172f3d7c, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set()
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set()

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set()

Copy resource mappings: 
	
The de.csmath.codec.Base16$ source file has the following regular definitions changed:
	base16Enc.
All member reference dependencies will be considered within this context.
Files invalidated by inheriting from (external) de.csmath.codec.Base16$: Set(); now invalidating by inheritance (internally).
Getting direct dependencies of all sources transitively invalidated by inheritance.
Getting sources that directly depend on (external) de.csmath.codec.Base16$.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/test/scala/Base16Spec.scala. This dependency is not being considered for invalidation.
The de.csmath.codec.Base32$ source file has the following regular definitions changed:
	encode$default$2, encode.
All member reference dependencies will be considered within this context.
Files invalidated by inheriting from (external) de.csmath.codec.Base32$: Set(); now invalidating by inheritance (internally).
Getting direct dependencies of all sources transitively invalidated by inheritance.
Getting sources that directly depend on (external) de.csmath.codec.Base32$.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/test/scala/Base32Spec.scala. This dependency is not being considered for invalidation.

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set()
Removed products: Set()
External API changes: API Changes: Set(NamesChange(de.csmath.codec.Base16$,ModifiedNames(regularNames = base16Enc, implicitNames = )), NamesChange(de.csmath.codec.Base32$,ModifiedNames(regularNames = encode$default$2, encode, implicitNames = )))
Modified binary dependencies: Set()
Initial directly invalidated sources: Set()

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set()

Copy resource mappings: 
	
Framework implementation 'org.scalacheck.ScalaCheckFramework' not present.
Framework implementation 'org.specs2.runner.Specs2Framework' not present.
Framework implementation 'org.specs2.runner.SpecsFramework' not present.
Framework implementation 'org.specs.runner.SpecsFramework' not present.
Framework implementation 'com.novocode.junit.JUnitFramework' not present.
Subclass fingerprints: List((org.scalatest.Suite,false,org.scalatest.tools.Framework$$anon$1@717b59a0))
Annotation fingerprints: List((org.scalatest.WrapWith,false,org.scalatest.tools.Framework$$anon$2@59b0d3d1))
Running TaskDef(StreamDecoderSpec, org.scalatest.tools.Framework$$anon$1@717b59a0, false, [SuiteSelector])
Running TaskDef(Base32Spec, org.scalatest.tools.Framework$$anon$1@717b59a0, false, [SuiteSelector])
Running TaskDef(Base64Spec, org.scalatest.tools.Framework$$anon$1@717b59a0, false, [SuiteSelector])
Running TaskDef(Base16Spec, org.scalatest.tools.Framework$$anon$1@717b59a0, false, [SuiteSelector])
Read from stdout: Base16Spec:
Read from stdout: Base16
Read from stdout: - should encode to BASE16
[32mBase16Spec:[0m
[32mBase16[0m
[32m- should encode to BASE16[0m
Running TaskDef(StreamCodecSpec, org.scalatest.tools.Framework$$anon$1@717b59a0, false, [SuiteSelector])
Read from stdout: StreamDecoderSpec:
Read from stdout: StreamDecoder
Read from stdout: - should check allowed bytes
[32mStreamDecoderSpec:[0m
[32mStreamDecoder[0m
[32m- should check allowed bytes[0m
Read from stdout: StreamCodecSpec:
Read from stdout: StreamCodec
Read from stdout: - should create a ByteStream
Read from stdout: StreamCodec
Read from stdout: - should create a IntStream
Read from stdout: StreamCodec
Read from stdout: - should create a groupStream
Read from stdout: StreamCodec
Read from stdout: - should create a filledStream
Read from stdout: StreamCodec
Read from stdout: - should flatten a filledStream
[32mStreamCodecSpec:[0m
[32mStreamCodec[0m
[32m- should create a ByteStream[0m
[32mStreamCodec[0m
[32m- should create a IntStream[0m
[32mStreamCodec[0m
[32m- should create a groupStream[0m
[32mStreamCodec[0m
[32m- should create a filledStream[0m
[32mStreamCodec[0m
[32m- should flatten a filledStream[0m
Read from stdout: Base32Spec:
Read from stdout: Base32
Read from stdout: - should encode to BASE32
Read from stdout: Base32
Read from stdout: - should encode to BASE32NOPAD
Read from stdout: Base32
Read from stdout: - should encode to BASE32URL
Read from stdout: Base32
Read from stdout: - should encode to BASE32HEX
Read from stdout: Base32
Read from stdout: - should encode to BASE32HEXNOPAD
Read from stdout: Base32
Read from stdout: - should encode to BASE32HEXURL
Read from stdout: Base32
Read from stdout: - should decode from BASE32
Read from stdout: Base32
Read from stdout: - should decode from BASE32 w/o padding
[32mBase32Spec:[0m
[32mBase32[0m
[32m- should encode to BASE32[0m
[32mBase32[0m
[32m- should encode to BASE32NOPAD[0m
[32mBase32[0m
[32m- should encode to BASE32URL[0m
[32mBase32[0m
[32m- should encode to BASE32HEX[0m
[32mBase32[0m
[32m- should encode to BASE32HEXNOPAD[0m
[32mBase32[0m
[32m- should encode to BASE32HEXURL[0m
[32mBase32[0m
[32m- should decode from BASE32[0m
[32mBase32[0m
[32m- should decode from BASE32 w/o padding[0m
Read from stdout: Base64Spec:
Read from stdout: Base64
Read from stdout: - should encode to BASE64
Read from stdout: Base64
Read from stdout: - should encode to BASE64FILE
Read from stdout: Base64
Read from stdout: - should encode to BASE64URL
Read from stdout: Base64
Read from stdout: - should encode to BASE64NOPAD
Read from stdout: Base64
Read from stdout: - should encode to BASE64FILENOPAD
Read from stdout: Base64
Read from stdout: - should encode to BASE64URLNOPAD
Read from stdout: Base64
Read from stdout: - should decode from BASE64
Read from stdout: Base64
Read from stdout: - should decode from BASE64 w/o padding
Read from stdout: Base64
Read from stdout: - should fail with crap
Read from stdout: Base64
Read from stdout: - should decode from BASE64FILE
Read from stdout: Base64
Read from stdout: - should decode from BASE64FILE w/o padding
Read from stdout: Base64
Read from stdout: - should decode from BASE64URL
[32mBase64Spec:[0m
[32mBase64[0m
[32m- should encode to BASE64[0m
[32mBase64[0m
[32m- should encode to BASE64FILE[0m
[32mBase64[0m
[32m- should encode to BASE64URL[0m
[32mBase64[0m
[32m- should encode to BASE64NOPAD[0m
[32mBase64[0m
[32m- should encode to BASE64FILENOPAD[0m
[32mBase64[0m
[32m- should encode to BASE64URLNOPAD[0m
[32mBase64[0m
[32m- should decode from BASE64[0m
[32mBase64[0m
[32m- should decode from BASE64 w/o padding[0m
[32mBase64[0m
[32m- should fail with crap[0m
[32mBase64[0m
[32m- should decode from BASE64FILE[0m
[32mBase64[0m
[32m- should decode from BASE64FILE w/o padding[0m
[32mBase64[0m
[32m- should decode from BASE64URL[0m
Read from stdout: Run completed in 362 milliseconds.
Read from stdout: Total number of tests run: 27
Read from stdout: Suites: completed 5, aborted 0
Read from stdout: Tests: succeeded 27, failed 0, canceled 0, ignored 0, pending 0
Read from stdout: All tests passed.
Run completed in 362 milliseconds.
Total number of tests run: 27
Suites: completed 5, aborted 0
Tests: succeeded 27, failed 0, canceled 0, ignored 0, pending 0
All tests passed.
Passed tests:
	StreamCodecSpec
	Base64Spec
	StreamDecoderSpec
	Base32Spec
	Base16Spec
Total time: 1 s, completed 31.05.2016 14:46:50
> server-post-command-cleanup
> server-handle-next-server-request
> compile
Evaluating tasks: compile:compile
Running task... Cancel: sbt.server.ServerTaskCancellation@2cfcdaf9, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala)
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala)

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala)

Read from stdout: Compiling 1 Scala source to /Users/lpfeiler/develop/github/base64/target/scala-2.11/classes...
Compiling 1 Scala source to /Users/lpfeiler/develop/github/base64/target/scala-2.11/classes...
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Running cached compiler 64c4fc07, interfacing (CompilerInterface) with Scala compiler version 2.11.7
Calling Scala compiler with arguments  (CompilerInterface):
	-bootclasspath
	/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/classes:/Users/lpfeiler/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.11.7.jar
	-classpath
	/Users/lpfeiler/develop/github/base64/target/scala-2.11/classes
Scala compilation took 0.648358331 s
New invalidations:
	Set()
Initial set of included nodes: Set()
Previously invalidated, but (transitively) depend on new invalidations:
	Set()
All newly invalidated sources after taking into account (previously) recompiled sources:Set()
Total time: 1 s, completed 31.05.2016 14:47:07
> server-post-command-cleanup
> server-handle-next-server-request
> test
Evaluating tasks: test:test
Running task... Cancel: sbt.server.ServerTaskCancellation@5fea0404, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set()
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set()

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set()

Copy resource mappings: 
	
The de.csmath.codec.Base16$ source file has the following regular definitions changed:
	base16Enc.
All member reference dependencies will be considered within this context.
Files invalidated by inheriting from (external) de.csmath.codec.Base16$: Set(); now invalidating by inheritance (internally).
Getting direct dependencies of all sources transitively invalidated by inheritance.
Getting sources that directly depend on (external) de.csmath.codec.Base16$.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/test/scala/Base16Spec.scala. This dependency is not being considered for invalidation.
The de.csmath.codec.Base32$ source file has the following regular definitions changed:
	encode$default$2, encode.
All member reference dependencies will be considered within this context.
Files invalidated by inheriting from (external) de.csmath.codec.Base32$: Set(); now invalidating by inheritance (internally).
Getting direct dependencies of all sources transitively invalidated by inheritance.
Getting sources that directly depend on (external) de.csmath.codec.Base32$.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/test/scala/Base32Spec.scala. This dependency is not being considered for invalidation.

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set()
Removed products: Set()
External API changes: API Changes: Set(NamesChange(de.csmath.codec.Base16$,ModifiedNames(regularNames = base16Enc, implicitNames = )), NamesChange(de.csmath.codec.Base32$,ModifiedNames(regularNames = encode$default$2, encode, implicitNames = )))
Modified binary dependencies: Set()
Initial directly invalidated sources: Set()

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set()

Copy resource mappings: 
	
Framework implementation 'org.scalacheck.ScalaCheckFramework' not present.
Framework implementation 'org.specs2.runner.Specs2Framework' not present.
Framework implementation 'org.specs2.runner.SpecsFramework' not present.
Framework implementation 'org.specs.runner.SpecsFramework' not present.
Framework implementation 'com.novocode.junit.JUnitFramework' not present.
Subclass fingerprints: List((org.scalatest.Suite,false,org.scalatest.tools.Framework$$anon$1@5a074d05))
Annotation fingerprints: List((org.scalatest.WrapWith,false,org.scalatest.tools.Framework$$anon$2@54798eec))
Running TaskDef(StreamDecoderSpec, org.scalatest.tools.Framework$$anon$1@5a074d05, false, [SuiteSelector])
Running TaskDef(Base64Spec, org.scalatest.tools.Framework$$anon$1@5a074d05, false, [SuiteSelector])
Running TaskDef(StreamCodecSpec, org.scalatest.tools.Framework$$anon$1@5a074d05, false, [SuiteSelector])
Running TaskDef(Base16Spec, org.scalatest.tools.Framework$$anon$1@5a074d05, false, [SuiteSelector])
Read from stdout: Base16Spec:
Read from stdout: Base16
Read from stdout: - should encode to BASE16
Read from stdout: StreamCodecSpec:
Read from stdout: StreamCodec
Read from stdout: - should create a ByteStream
Read from stdout: StreamCodec
Read from stdout: - should create a IntStream
Read from stdout: StreamCodec
Read from stdout: - should create a groupStream
Read from stdout: StreamCodec
Read from stdout: - should create a filledStream
Read from stdout: StreamCodec
Read from stdout: - should flatten a filledStream
Read from stdout: StreamDecoderSpec:
Read from stdout: StreamDecoder
[32mStreamCodecSpec:[0m
[32mStreamCodec[0m
[32m- should create a ByteStream[0m
[32mStreamCodec[0m
Read from stdout: - should check allowed bytes
[32mStreamDecoderSpec:[0m
[32mStreamDecoder[0m
[32m- should check allowed bytes[0m
[32m- should create a IntStream[0m
[32mStreamCodec[0m
[32m- should create a groupStream[0m
[32mStreamCodec[0m
[32m- should create a filledStream[0m
[32mStreamCodec[0m
[32m- should flatten a filledStream[0m
Running TaskDef(Base32Spec, org.scalatest.tools.Framework$$anon$1@5a074d05, false, [SuiteSelector])
[32mBase16Spec:[0m
[32mBase16[0m
[32m- should encode to BASE16[0m
Read from stdout: Base32Spec:
Read from stdout: Base32
Read from stdout: - should encode to BASE32
Read from stdout: Base32
Read from stdout: - should encode to BASE32NOPAD
Read from stdout: Base32
Read from stdout: - should encode to BASE32URL
Read from stdout: Base32
Read from stdout: - should encode to BASE32HEX
Read from stdout: Base32
Read from stdout: - should encode to BASE32HEXNOPAD
Read from stdout: Base32
Read from stdout: - should encode to BASE32HEXURL
Read from stdout: Base32
Read from stdout: - should decode from BASE32
Read from stdout: Base32
Read from stdout: - should decode from BASE32 w/o padding
[32mBase32Spec:[0m
[32mBase32[0m
[32m- should encode to BASE32[0m
[32mBase32[0m
[32m- should encode to BASE32NOPAD[0m
[32mBase32[0m
[32m- should encode to BASE32URL[0m
[32mBase32[0m
[32m- should encode to BASE32HEX[0m
[32mBase32[0m
[32m- should encode to BASE32HEXNOPAD[0m
[32mBase32[0m
[32m- should encode to BASE32HEXURL[0m
[32mBase32[0m
[32m- should decode from BASE32[0m
[32mBase32[0m
[32m- should decode from BASE32 w/o padding[0m
Read from stdout: Base64Spec:
Read from stdout: Base64
Read from stdout: - should encode to BASE64
Read from stdout: Base64
Read from stdout: - should encode to BASE64FILE
Read from stdout: Base64
Read from stdout: - should encode to BASE64URL
Read from stdout: Base64
Read from stdout: - should encode to BASE64NOPAD
Read from stdout: Base64
Read from stdout: - should encode to BASE64FILENOPAD
Read from stdout: Base64
Read from stdout: - should encode to BASE64URLNOPAD
Read from stdout: Base64
Read from stdout: - should decode from BASE64
Read from stdout: Base64
Read from stdout: - should decode from BASE64 w/o padding
Read from stdout: Base64
Read from stdout: - should fail with crap
Read from stdout: Base64
Read from stdout: - should decode from BASE64FILE
Read from stdout: Base64
Read from stdout: - should decode from BASE64FILE w/o padding
Read from stdout: Base64
Read from stdout: - should decode from BASE64URL
[32mBase64Spec:[0m
[32mBase64[0m
[32m- should encode to BASE64[0m
[32mBase64[0m
[32m- should encode to BASE64FILE[0m
[32mBase64[0m
[32m- should encode to BASE64URL[0m
[32mBase64[0m
[32m- should encode to BASE64NOPAD[0m
[32mBase64[0m
[32m- should encode to BASE64FILENOPAD[0m
[32mBase64[0m
[32m- should encode to BASE64URLNOPAD[0m
[32mBase64[0m
[32m- should decode from BASE64[0m
[32mBase64[0m
[32m- should decode from BASE64 w/o padding[0m
[32mBase64[0m
[32m- should fail with crap[0m
[32mBase64[0m
[32m- should decode from BASE64FILE[0m
[32mBase64[0m
[32m- should decode from BASE64FILE w/o padding[0m
[32mBase64[0m
[32m- should decode from BASE64URL[0m
Read from stdout: Run completed in 588 milliseconds.
Read from stdout: Total number of tests run: 27
Read from stdout: Suites: completed 5, aborted 0
Read from stdout: Tests: succeeded 27, failed 0, canceled 0, ignored 0, pending 0
Read from stdout: All tests passed.
Run completed in 588 milliseconds.
Total number of tests run: 27
Suites: completed 5, aborted 0
Tests: succeeded 27, failed 0, canceled 0, ignored 0, pending 0
All tests passed.
Passed tests:
	StreamCodecSpec
	Base64Spec
	StreamDecoderSpec
	Base32Spec
	Base16Spec
Total time: 1 s, completed 31.05.2016 14:47:08
> server-post-command-cleanup
> server-handle-next-server-request
> compile
Evaluating tasks: compile:compile
Running task... Cancel: sbt.server.ServerTaskCancellation@6d7fd8ce, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseN.scala)
	modified: Set()
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseN.scala)

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseN.scala)

Read from stdout: Compiling 1 Scala source to /Users/lpfeiler/develop/github/base64/target/scala-2.11/classes...
Compiling 1 Scala source to /Users/lpfeiler/develop/github/base64/target/scala-2.11/classes...
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Running cached compiler 53ecbb3d, interfacing (CompilerInterface) with Scala compiler version 2.11.7
Calling Scala compiler with arguments  (CompilerInterface):
	-bootclasspath
	/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/classes:/Users/lpfeiler/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.11.7.jar
	-classpath
	/Users/lpfeiler/develop/github/base64/target/scala-2.11/classes
Scala compilation took 0.35470597 s
Invalidating /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseN.scala...
Invalidating (transitively) by inheritance from /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseN.scala...
Initial set of included nodes: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseN.scala)
Invalidated by transitive inheritance dependency: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseN.scala)
The /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseN.scala source file has the following regular definitions changed:
	.
All member reference dependencies will be considered within this context.
New invalidations:
	Set()
Initial set of included nodes: Set()
Previously invalidated, but (transitively) depend on new invalidations:
	Set()
All newly invalidated sources after taking into account (previously) recompiled sources:Set()
Total time: 1 s, completed 31.05.2016 14:49:09
> server-post-command-cleanup
> server-handle-next-server-request
> test
Evaluating tasks: test:test
Running task... Cancel: sbt.server.ServerTaskCancellation@48b62e3c, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set()
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set()

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set()

Copy resource mappings: 
	
The de.csmath.codec.Base16$ source file has the following regular definitions changed:
	base16Enc.
All member reference dependencies will be considered within this context.
Files invalidated by inheriting from (external) de.csmath.codec.Base16$: Set(); now invalidating by inheritance (internally).
Getting direct dependencies of all sources transitively invalidated by inheritance.
Getting sources that directly depend on (external) de.csmath.codec.Base16$.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/test/scala/Base16Spec.scala. This dependency is not being considered for invalidation.
The de.csmath.codec.Base32$ source file has the following regular definitions changed:
	encode$default$2, encode.
All member reference dependencies will be considered within this context.
Files invalidated by inheriting from (external) de.csmath.codec.Base32$: Set(); now invalidating by inheritance (internally).
Getting direct dependencies of all sources transitively invalidated by inheritance.
Getting sources that directly depend on (external) de.csmath.codec.Base32$.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/test/scala/Base32Spec.scala. This dependency is not being considered for invalidation.

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set()
Removed products: Set()
External API changes: API Changes: Set(NamesChange(de.csmath.codec.Base16$,ModifiedNames(regularNames = base16Enc, implicitNames = )), NamesChange(de.csmath.codec.Base32$,ModifiedNames(regularNames = encode$default$2, encode, implicitNames = )))
Modified binary dependencies: Set()
Initial directly invalidated sources: Set()

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set()

Copy resource mappings: 
	
Framework implementation 'org.scalacheck.ScalaCheckFramework' not present.
Framework implementation 'org.specs2.runner.Specs2Framework' not present.
Framework implementation 'org.specs2.runner.SpecsFramework' not present.
Framework implementation 'org.specs.runner.SpecsFramework' not present.
Framework implementation 'com.novocode.junit.JUnitFramework' not present.
Subclass fingerprints: List((org.scalatest.Suite,false,org.scalatest.tools.Framework$$anon$1@78997917))
Annotation fingerprints: List((org.scalatest.WrapWith,false,org.scalatest.tools.Framework$$anon$2@4abbe314))
Running TaskDef(Base16Spec, org.scalatest.tools.Framework$$anon$1@78997917, false, [SuiteSelector])
Running TaskDef(Base32Spec, org.scalatest.tools.Framework$$anon$1@78997917, false, [SuiteSelector])
Running TaskDef(StreamDecoderSpec, org.scalatest.tools.Framework$$anon$1@78997917, false, [SuiteSelector])
Running TaskDef(Base64Spec, org.scalatest.tools.Framework$$anon$1@78997917, false, [SuiteSelector])
Read from stdout: Base16Spec:
Read from stdout: Base16
Read from stdout: - should encode to BASE16
[32mBase16Spec:[0m
[32mBase16[0m
[32m- should encode to BASE16[0m
Read from stdout: StreamDecoderSpec:
Running TaskDef(StreamCodecSpec, org.scalatest.tools.Framework$$anon$1@78997917, false, [SuiteSelector])
Read from stdout: StreamDecoder
Read from stdout: - should check allowed bytes
[32mStreamDecoderSpec:[0m
[32mStreamDecoder[0m
[32m- should check allowed bytes[0m
Read from stdout: StreamCodecSpec:
Read from stdout: StreamCodec
Read from stdout: - should create a ByteStream
Read from stdout: StreamCodec
Read from stdout: - should create a IntStream
Read from stdout: StreamCodec
Read from stdout: - should create a groupStream
Read from stdout: StreamCodec
Read from stdout: - should create a filledStream
Read from stdout: StreamCodec
Read from stdout: - should flatten a filledStream
[32mStreamCodecSpec:[0m
[32mStreamCodec[0m
[32m- should create a ByteStream[0m
[32mStreamCodec[0m
[32m- should create a IntStream[0m
[32mStreamCodec[0m
[32m- should create a groupStream[0m
[32mStreamCodec[0m
[32m- should create a filledStream[0m
[32mStreamCodec[0m
[32m- should flatten a filledStream[0m
Read from stdout: Base32Spec:
Read from stdout: Base32
Read from stdout: - should encode to BASE32
Read from stdout: Base32
Read from stdout: - should encode to BASE32NOPAD
Read from stdout: Base32
Read from stdout: - should encode to BASE32URL
Read from stdout: Base32
Read from stdout: - should encode to BASE32HEX
Read from stdout: Base32
Read from stdout: - should encode to BASE32HEXNOPAD
Read from stdout: Base32
Read from stdout: - should encode to BASE32HEXURL
Read from stdout: Base32
Read from stdout: - should decode from BASE32
Read from stdout: Base32
Read from stdout: - should decode from BASE32 w/o padding
[32mBase32Spec:[0m
[32mBase32[0m
[32m- should encode to BASE32[0m
[32mBase32[0m
[32m- should encode to BASE32NOPAD[0m
[32mBase32[0m
[32m- should encode to BASE32URL[0m
[32mBase32[0m
[32m- should encode to BASE32HEX[0m
[32mBase32[0m
[32m- should encode to BASE32HEXNOPAD[0m
[32mBase32[0m
[32m- should encode to BASE32HEXURL[0m
[32mBase32[0m
[32m- should decode from BASE32[0m
[32mBase32[0m
[32m- should decode from BASE32 w/o padding[0m
Read from stdout: Base64Spec:
Read from stdout: Base64
Read from stdout: - should encode to BASE64
Read from stdout: Base64
Read from stdout: - should encode to BASE64FILE
Read from stdout: Base64
Read from stdout: - should encode to BASE64URL
Read from stdout: Base64
Read from stdout: - should encode to BASE64NOPAD
Read from stdout: Base64
Read from stdout: - should encode to BASE64FILENOPAD
Read from stdout: Base64
Read from stdout: - should encode to BASE64URLNOPAD
Read from stdout: Base64
Read from stdout: - should decode from BASE64
Read from stdout: Base64
Read from stdout: - should decode from BASE64 w/o padding
Read from stdout: Base64
Read from stdout: - should fail with crap
Read from stdout: Base64
Read from stdout: - should decode from BASE64FILE
Read from stdout: Base64
Read from stdout: - should decode from BASE64FILE w/o padding
Read from stdout: Base64
Read from stdout: - should decode from BASE64URL
[32mBase64Spec:[0m
[32mBase64[0m
[32m- should encode to BASE64[0m
[32mBase64[0m
[32m- should encode to BASE64FILE[0m
[32mBase64[0m
[32m- should encode to BASE64URL[0m
[32mBase64[0m
[32m- should encode to BASE64NOPAD[0m
[32mBase64[0m
[32m- should encode to BASE64FILENOPAD[0m
[32mBase64[0m
[32m- should encode to BASE64URLNOPAD[0m
[32mBase64[0m
[32m- should decode from BASE64[0m
[32mBase64[0m
[32m- should decode from BASE64 w/o padding[0m
[32mBase64[0m
[32m- should fail with crap[0m
[32mBase64[0m
[32m- should decode from BASE64FILE[0m
[32mBase64[0m
[32m- should decode from BASE64FILE w/o padding[0m
[32mBase64[0m
[32m- should decode from BASE64URL[0m
Read from stdout: Run completed in 457 milliseconds.
Read from stdout: Total number of tests run: 27
Read from stdout: Suites: completed 5, aborted 0
Read from stdout: Tests: succeeded 27, failed 0, canceled 0, ignored 0, pending 0
Read from stdout: All tests passed.
Run completed in 457 milliseconds.
Total number of tests run: 27
Suites: completed 5, aborted 0
Tests: succeeded 27, failed 0, canceled 0, ignored 0, pending 0
All tests passed.
Passed tests:
	StreamCodecSpec
	Base64Spec
	StreamDecoderSpec
	Base32Spec
	Base16Spec
Total time: 1 s, completed 31.05.2016 14:49:10
> server-post-command-cleanup
> server-handle-next-server-request
> compile
Evaluating tasks: compile:compile
Running task... Cancel: sbt.server.ServerTaskCancellation@23bd871e, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseN.scala)
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseN.scala)

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseN.scala)

Read from stdout: Compiling 1 Scala source to /Users/lpfeiler/develop/github/base64/target/scala-2.11/classes...
Compiling 1 Scala source to /Users/lpfeiler/develop/github/base64/target/scala-2.11/classes...
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Running cached compiler 6b0da890, interfacing (CompilerInterface) with Scala compiler version 2.11.7
Calling Scala compiler with arguments  (CompilerInterface):
	-bootclasspath
	/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/classes:/Users/lpfeiler/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.11.7.jar
	-classpath
	/Users/lpfeiler/develop/github/base64/target/scala-2.11/classes
Read from stdout: /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseN.scala:12: not found: value BASE64
/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseN.scala:12: not found: value BASE64
Read from stdout: def encode(data: Traversable[Byte], enc: Codec.Value = BASE64): Stream[Byte] =
    def encode(data: Traversable[Byte], enc: Codec.Value = BASE64): Stream[Byte] =
Read from stdout: ^
                                                           ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseN.scala:205: not found: value BASE64
/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseN.scala:205: not found: value BASE64
Read from stdout: case BASE64          => base64Enc
        case BASE64          => base64Enc
Read from stdout: ^
             ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseN.scala:206: not found: value BASE64NOPAD
/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseN.scala:206: not found: value BASE64NOPAD
Read from stdout: case BASE64NOPAD     => base64Enc
        case BASE64NOPAD     => base64Enc
Read from stdout: ^
             ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseN.scala:207: not found: value BASE64URL
/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseN.scala:207: not found: value BASE64URL
Read from stdout: case BASE64URL       => base64UrlEnc
        case BASE64URL       => base64UrlEnc
Read from stdout: ^
             ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseN.scala:208: not found: value BASE64URLNOPAD
/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseN.scala:208: not found: value BASE64URLNOPAD
Read from stdout: case BASE64URLNOPAD  => base64UrlEnc
        case BASE64URLNOPAD  => base64UrlEnc
Read from stdout: ^
             ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseN.scala:209: not found: value BASE64FILE
/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseN.scala:209: not found: value BASE64FILE
Read from stdout: case BASE64FILE      => base64FileEnc
        case BASE64FILE      => base64FileEnc
Read from stdout: ^
             ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseN.scala:210: not found: value BASE64FILENOPAD
/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseN.scala:210: not found: value BASE64FILENOPAD
Read from stdout: case BASE64FILENOPAD => base64FileEnc
        case BASE64FILENOPAD => base64FileEnc
Read from stdout: ^
             ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseN.scala:44: not found: value BASE64
/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseN.scala:44: not found: value BASE64
Read from stdout: def encodeToString(data: Traversable[Byte], enc: Codec.Value = BASE64): String =
    def encodeToString(data: Traversable[Byte], enc: Codec.Value = BASE64): String =
Read from stdout: ^
                                                                   ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseN.scala:59: not found: type Try
/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseN.scala:59: not found: type Try
Read from stdout: def decode(data: Traversable[Byte], enc: Codec.Value = BASE64): Try[Stream[Byte]] =
    def decode(data: Traversable[Byte], enc: Codec.Value = BASE64): Try[Stream[Byte]] =
Read from stdout: ^
                                                                    ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseN.scala:59: not found: value BASE64
/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseN.scala:59: not found: value BASE64
Read from stdout: def decode(data: Traversable[Byte], enc: Codec.Value = BASE64): Try[Stream[Byte]] =
    def decode(data: Traversable[Byte], enc: Codec.Value = BASE64): Try[Stream[Byte]] =
Read from stdout: ^
                                                           ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseN.scala:73: not found: type Try
/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseN.scala:73: not found: type Try
Read from stdout: def decode(text: String, enc: Codec.Value): Try[Stream[Byte]] =
    def decode(text: String, enc: Codec.Value): Try[Stream[Byte]] =
Read from stdout: ^
                                                ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseN.scala:88: not found: type Try
/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseN.scala:88: not found: type Try
Read from stdout: def decodeToString(data: Traversable[Byte], enc: Codec.Value = BASE64): Try[String] =
    def decodeToString(data: Traversable[Byte], enc: Codec.Value = BASE64): Try[String] =
Read from stdout: ^
                                                                            ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseN.scala:88: not found: value BASE64
/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseN.scala:88: not found: value BASE64
Read from stdout: def decodeToString(data: Traversable[Byte], enc: Codec.Value = BASE64): Try[String] =
    def decodeToString(data: Traversable[Byte], enc: Codec.Value = BASE64): Try[String] =
Read from stdout: ^
                                                                   ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseN.scala:102: not found: type Try
/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseN.scala:102: not found: type Try
Read from stdout: def decodeToString(text: String, enc: Codec.Value): Try[String] =
    def decodeToString(text: String, enc: Codec.Value): Try[String] =
Read from stdout: ^
                                                        ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseN.scala:118: not found: type Try
/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseN.scala:118: not found: type Try
Read from stdout: def decode(data: Traversable[Byte], enc: Codec.Value, size: Long): Try[Stream[Byte]] =
    def decode(data: Traversable[Byte], enc: Codec.Value, size: Long): Try[Stream[Byte]] =
Read from stdout: ^
                                                                       ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseN.scala:133: not found: type Try
/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseN.scala:133: not found: type Try
Read from stdout: def decode(text: String, enc: Codec.Value, size: Long): Try[Stream[Byte]] =
    def decode(text: String, enc: Codec.Value, size: Long): Try[Stream[Byte]] =
Read from stdout: ^
                                                            ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseN.scala:149: not found: type Try
/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseN.scala:149: not found: type Try
Read from stdout: def decodeToString(data: Traversable[Byte], enc: Codec.Value, size: Long): Try[String] =
    def decodeToString(data: Traversable[Byte], enc: Codec.Value, size: Long): Try[String] =
Read from stdout: ^
                                                                               ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseN.scala:164: not found: type Try
/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseN.scala:164: not found: type Try
Read from stdout: def decodeToString(text: String, enc: Codec.Value, size: Long): Try[String] =
    def decodeToString(text: String, enc: Codec.Value, size: Long): Try[String] =
Read from stdout: ^
                                                                    ^
Read from stdout: 18 errors found
18 errors found
Compilation failed (CompilerInterface)
Read from stdout: (compile:compileIncremental) Compilation failed
(compile:compileIncremental) Compilation failed
Total time: 1 s, completed 31.05.2016 14:50:35
> server-post-command-error-handler
> server-post-command-cleanup
> server-handle-next-server-request
> compile
Evaluating tasks: compile:compile
Running task... Cancel: sbt.server.ServerTaskCancellation@5eb2c813, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseN.scala)
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseN.scala)

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseN.scala)

Read from stdout: Compiling 1 Scala source to /Users/lpfeiler/develop/github/base64/target/scala-2.11/classes...
Compiling 1 Scala source to /Users/lpfeiler/develop/github/base64/target/scala-2.11/classes...
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Running cached compiler 2ac968f2, interfacing (CompilerInterface) with Scala compiler version 2.11.7
Calling Scala compiler with arguments  (CompilerInterface):
	-bootclasspath
	/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/classes:/Users/lpfeiler/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.11.7.jar
	-classpath
	/Users/lpfeiler/develop/github/base64/target/scala-2.11/classes
Read from stdout: /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseN.scala:59: not found: type Try
/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseN.scala:59: not found: type Try
Read from stdout: def decode(data: Traversable[Byte], enc: Codec.Value): Try[Stream[Byte]] =
    def decode(data: Traversable[Byte], enc: Codec.Value): Try[Stream[Byte]] =
Read from stdout: ^
                                                           ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseN.scala:73: not found: type Try
/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseN.scala:73: not found: type Try
Read from stdout: def decode(text: String, enc: Codec.Value): Try[Stream[Byte]] =
    def decode(text: String, enc: Codec.Value): Try[Stream[Byte]] =
Read from stdout: ^
                                                ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseN.scala:88: not found: type Try
/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseN.scala:88: not found: type Try
Read from stdout: def decodeToString(data: Traversable[Byte], enc: Codec.Value): Try[String] =
    def decodeToString(data: Traversable[Byte], enc: Codec.Value): Try[String] =
Read from stdout: ^
                                                                   ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseN.scala:102: not found: type Try
/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseN.scala:102: not found: type Try
Read from stdout: def decodeToString(text: String, enc: Codec.Value): Try[String] =
    def decodeToString(text: String, enc: Codec.Value): Try[String] =
Read from stdout: ^
                                                        ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseN.scala:118: not found: type Try
/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseN.scala:118: not found: type Try
Read from stdout: def decode(data: Traversable[Byte], enc: Codec.Value, size: Long): Try[Stream[Byte]] =
    def decode(data: Traversable[Byte], enc: Codec.Value, size: Long): Try[Stream[Byte]] =
Read from stdout: ^
                                                                       ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseN.scala:133: not found: type Try
/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseN.scala:133: not found: type Try
Read from stdout: def decode(text: String, enc: Codec.Value, size: Long): Try[Stream[Byte]] =
    def decode(text: String, enc: Codec.Value, size: Long): Try[Stream[Byte]] =
Read from stdout: ^
                                                            ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseN.scala:149: not found: type Try
/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseN.scala:149: not found: type Try
Read from stdout: def decodeToString(data: Traversable[Byte], enc: Codec.Value, size: Long): Try[String] =
    def decodeToString(data: Traversable[Byte], enc: Codec.Value, size: Long): Try[String] =
Read from stdout: ^
                                                                               ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseN.scala:164: not found: type Try
/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseN.scala:164: not found: type Try
Read from stdout: def decodeToString(text: String, enc: Codec.Value, size: Long): Try[String] =
    def decodeToString(text: String, enc: Codec.Value, size: Long): Try[String] =
Read from stdout: ^
                                                                    ^
Read from stdout: 8 errors found
8 errors found
Compilation failed (CompilerInterface)
Read from stdout: (compile:compileIncremental) Compilation failed
(compile:compileIncremental) Compilation failed
Total time: 1 s, completed 31.05.2016 14:53:31
> server-post-command-error-handler
> server-post-command-cleanup
> server-handle-next-server-request
> compile
Evaluating tasks: compile:compile
Running task... Cancel: sbt.server.ServerTaskCancellation@3f917c17, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseN.scala)
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseN.scala)

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseN.scala)

Read from stdout: Compiling 1 Scala source to /Users/lpfeiler/develop/github/base64/target/scala-2.11/classes...
Compiling 1 Scala source to /Users/lpfeiler/develop/github/base64/target/scala-2.11/classes...
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Running cached compiler 715e082e, interfacing (CompilerInterface) with Scala compiler version 2.11.7
Calling Scala compiler with arguments  (CompilerInterface):
	-bootclasspath
	/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/classes:/Users/lpfeiler/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.11.7.jar
	-classpath
	/Users/lpfeiler/develop/github/base64/target/scala-2.11/classes
Scala compilation took 0.745969785 s
Invalidating /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseN.scala...
Invalidating (transitively) by inheritance from /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseN.scala...
Initial set of included nodes: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseN.scala)
Invalidated by transitive inheritance dependency: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseN.scala)
The /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseN.scala source file has the following regular definitions changed:
	notify, encode, decoder, wait, $asInstanceOf, equals, asInstanceOf, synchronized, $isInstanceOf, BaseN, decode, encodeToString, notifyAll, isInstanceOf, <init>, encoder, ==, clone, toString, decodeToString, !=, getClass, ne, eq, ##, finalize, hashCode.
All member reference dependencies will be considered within this context.
New invalidations:
	Set()
Initial set of included nodes: Set()
Previously invalidated, but (transitively) depend on new invalidations:
	Set()
All newly invalidated sources after taking into account (previously) recompiled sources:Set()
Total time: 1 s, completed 31.05.2016 14:53:56
> server-post-command-cleanup
> server-handle-next-server-request
> test
Evaluating tasks: test:test
Running task... Cancel: sbt.server.ServerTaskCancellation@787b0602, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set()
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set()

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set()

Copy resource mappings: 
	
The de.csmath.codec.Base16$ source file has the following regular definitions changed:
	base16Enc.
All member reference dependencies will be considered within this context.
Files invalidated by inheriting from (external) de.csmath.codec.Base16$: Set(); now invalidating by inheritance (internally).
Getting direct dependencies of all sources transitively invalidated by inheritance.
Getting sources that directly depend on (external) de.csmath.codec.Base16$.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/test/scala/Base16Spec.scala. This dependency is not being considered for invalidation.
The de.csmath.codec.Base32$ source file has the following regular definitions changed:
	encode$default$2, encode.
All member reference dependencies will be considered within this context.
Files invalidated by inheriting from (external) de.csmath.codec.Base32$: Set(); now invalidating by inheritance (internally).
Getting direct dependencies of all sources transitively invalidated by inheritance.
Getting sources that directly depend on (external) de.csmath.codec.Base32$.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/test/scala/Base32Spec.scala. This dependency is not being considered for invalidation.

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set()
Removed products: Set()
External API changes: API Changes: Set(NamesChange(de.csmath.codec.Base16$,ModifiedNames(regularNames = base16Enc, implicitNames = )), NamesChange(de.csmath.codec.Base32$,ModifiedNames(regularNames = encode$default$2, encode, implicitNames = )))
Modified binary dependencies: Set()
Initial directly invalidated sources: Set()

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set()

Copy resource mappings: 
	
Framework implementation 'org.scalacheck.ScalaCheckFramework' not present.
Framework implementation 'org.specs2.runner.Specs2Framework' not present.
Framework implementation 'org.specs2.runner.SpecsFramework' not present.
Framework implementation 'org.specs.runner.SpecsFramework' not present.
Framework implementation 'com.novocode.junit.JUnitFramework' not present.
Subclass fingerprints: List((org.scalatest.Suite,false,org.scalatest.tools.Framework$$anon$1@f2810e9))
Annotation fingerprints: List((org.scalatest.WrapWith,false,org.scalatest.tools.Framework$$anon$2@3afc7f4d))
Running TaskDef(Base64Spec, org.scalatest.tools.Framework$$anon$1@f2810e9, false, [SuiteSelector])
Running TaskDef(StreamCodecSpec, org.scalatest.tools.Framework$$anon$1@f2810e9, false, [SuiteSelector])
Running TaskDef(StreamDecoderSpec, org.scalatest.tools.Framework$$anon$1@f2810e9, false, [SuiteSelector])
Running TaskDef(Base32Spec, org.scalatest.tools.Framework$$anon$1@f2810e9, false, [SuiteSelector])
Read from stdout: StreamDecoderSpec:
Read from stdout: StreamDecoder
Read from stdout: - should check allowed bytes
[32mStreamDecoderSpec:[0m
[32mStreamDecoder[0m
[32m- should check allowed bytes[0m
Running TaskDef(Base16Spec, org.scalatest.tools.Framework$$anon$1@f2810e9, false, [SuiteSelector])
Read from stdout: StreamCodecSpec:
Read from stdout: StreamCodec
Read from stdout: - should create a ByteStream
Read from stdout: StreamCodec
Read from stdout: - should create a IntStream
Read from stdout: StreamCodec
Read from stdout: - should create a groupStream
Read from stdout: StreamCodec
Read from stdout: - should create a filledStream
Read from stdout: StreamCodec
Read from stdout: - should flatten a filledStream
Read from stdout: Base16Spec:
Read from stdout: Base16
Read from stdout: - should encode to BASE16
[32mBase16Spec:[0m
[32mBase16[0m
[32m- should encode to BASE16[0m
[32mStreamCodecSpec:[0m
[32mStreamCodec[0m
[32m- should create a ByteStream[0m
[32mStreamCodec[0m
[32m- should create a IntStream[0m
[32mStreamCodec[0m
[32m- should create a groupStream[0m
[32mStreamCodec[0m
[32m- should create a filledStream[0m
[32mStreamCodec[0m
[32m- should flatten a filledStream[0m
Read from stdout: Base32Spec:
Read from stdout: Base32
Read from stdout: - should encode to BASE32
Read from stdout: Base32
Read from stdout: - should encode to BASE32NOPAD
Read from stdout: Base32
Read from stdout: - should encode to BASE32URL
Read from stdout: Base32
Read from stdout: - should encode to BASE32HEX
Read from stdout: Base32
Read from stdout: - should encode to BASE32HEXNOPAD
Read from stdout: Base32
Read from stdout: - should encode to BASE32HEXURL
Read from stdout: Base32
Read from stdout: - should decode from BASE32
Read from stdout: Base32
Read from stdout: - should decode from BASE32 w/o padding
[32mBase32Spec:[0m
[32mBase32[0m
[32m- should encode to BASE32[0m
[32mBase32[0m
[32m- should encode to BASE32NOPAD[0m
[32mBase32[0m
[32m- should encode to BASE32URL[0m
[32mBase32[0m
[32m- should encode to BASE32HEX[0m
[32mBase32[0m
[32m- should encode to BASE32HEXNOPAD[0m
[32mBase32[0m
[32m- should encode to BASE32HEXURL[0m
[32mBase32[0m
[32m- should decode from BASE32[0m
[32mBase32[0m
[32m- should decode from BASE32 w/o padding[0m
Read from stdout: Base64Spec:
Read from stdout: Base64
Read from stdout: - should encode to BASE64
Read from stdout: Base64
Read from stdout: - should encode to BASE64FILE
Read from stdout: Base64
Read from stdout: - should encode to BASE64URL
Read from stdout: Base64
Read from stdout: - should encode to BASE64NOPAD
Read from stdout: Base64
Read from stdout: - should encode to BASE64FILENOPAD
Read from stdout: Base64
Read from stdout: - should encode to BASE64URLNOPAD
Read from stdout: Base64
Read from stdout: - should decode from BASE64
Read from stdout: Base64
Read from stdout: - should decode from BASE64 w/o padding
Read from stdout: Base64
Read from stdout: - should fail with crap
Read from stdout: Base64
Read from stdout: - should decode from BASE64FILE
Read from stdout: Base64
Read from stdout: - should decode from BASE64FILE w/o padding
Read from stdout: Base64
Read from stdout: - should decode from BASE64URL
[32mBase64Spec:[0m
[32mBase64[0m
[32m- should encode to BASE64[0m
[32mBase64[0m
[32m- should encode to BASE64FILE[0m
[32mBase64[0m
[32m- should encode to BASE64URL[0m
[32mBase64[0m
[32m- should encode to BASE64NOPAD[0m
[32mBase64[0m
[32m- should encode to BASE64FILENOPAD[0m
[32mBase64[0m
[32m- should encode to BASE64URLNOPAD[0m
[32mBase64[0m
[32m- should decode from BASE64[0m
[32mBase64[0m
[32m- should decode from BASE64 w/o padding[0m
[32mBase64[0m
[32m- should fail with crap[0m
[32mBase64[0m
[32m- should decode from BASE64FILE[0m
[32mBase64[0m
[32m- should decode from BASE64FILE w/o padding[0m
[32mBase64[0m
[32m- should decode from BASE64URL[0m
Read from stdout: Run completed in 673 milliseconds.
Read from stdout: Total number of tests run: 27
Read from stdout: Suites: completed 5, aborted 0
Read from stdout: Tests: succeeded 27, failed 0, canceled 0, ignored 0, pending 0
Read from stdout: All tests passed.
Run completed in 673 milliseconds.
Total number of tests run: 27
Suites: completed 5, aborted 0
Tests: succeeded 27, failed 0, canceled 0, ignored 0, pending 0
All tests passed.
Passed tests:
	StreamCodecSpec
	Base64Spec
	StreamDecoderSpec
	Base32Spec
	Base16Spec
Total time: 1 s, completed 31.05.2016 14:53:57
> server-post-command-cleanup
> server-handle-next-server-request
> compile
Evaluating tasks: compile:compile
Running task... Cancel: sbt.server.ServerTaskCancellation@9f0ee6b, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseN.scala)
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseN.scala)

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseN.scala)

Read from stdout: Compiling 1 Scala source to /Users/lpfeiler/develop/github/base64/target/scala-2.11/classes...
Compiling 1 Scala source to /Users/lpfeiler/develop/github/base64/target/scala-2.11/classes...
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Running cached compiler 20c72794, interfacing (CompilerInterface) with Scala compiler version 2.11.7
Calling Scala compiler with arguments  (CompilerInterface):
	-bootclasspath
	/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/classes:/Users/lpfeiler/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.11.7.jar
	-classpath
	/Users/lpfeiler/develop/github/base64/target/scala-2.11/classes
Scala compilation took 0.565213502 s
New invalidations:
	Set()
Initial set of included nodes: Set()
Previously invalidated, but (transitively) depend on new invalidations:
	Set()
All newly invalidated sources after taking into account (previously) recompiled sources:Set()
Total time: 1 s, completed 31.05.2016 14:55:23
> server-post-command-cleanup
> server-handle-next-server-request
> test
Evaluating tasks: test:test
Running task... Cancel: sbt.server.ServerTaskCancellation@2b675dec, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set()
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set()

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set()

Copy resource mappings: 
	
The de.csmath.codec.Base16$ source file has the following regular definitions changed:
	base16Enc.
All member reference dependencies will be considered within this context.
Files invalidated by inheriting from (external) de.csmath.codec.Base16$: Set(); now invalidating by inheritance (internally).
Getting direct dependencies of all sources transitively invalidated by inheritance.
Getting sources that directly depend on (external) de.csmath.codec.Base16$.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/test/scala/Base16Spec.scala. This dependency is not being considered for invalidation.
The de.csmath.codec.Base32$ source file has the following regular definitions changed:
	encode$default$2, encode.
All member reference dependencies will be considered within this context.
Files invalidated by inheriting from (external) de.csmath.codec.Base32$: Set(); now invalidating by inheritance (internally).
Getting direct dependencies of all sources transitively invalidated by inheritance.
Getting sources that directly depend on (external) de.csmath.codec.Base32$.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/test/scala/Base32Spec.scala. This dependency is not being considered for invalidation.

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set()
Removed products: Set()
External API changes: API Changes: Set(NamesChange(de.csmath.codec.Base16$,ModifiedNames(regularNames = base16Enc, implicitNames = )), NamesChange(de.csmath.codec.Base32$,ModifiedNames(regularNames = encode$default$2, encode, implicitNames = )))
Modified binary dependencies: Set()
Initial directly invalidated sources: Set()

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set()

Copy resource mappings: 
	
Framework implementation 'org.scalacheck.ScalaCheckFramework' not present.
Framework implementation 'org.specs2.runner.Specs2Framework' not present.
Framework implementation 'org.specs2.runner.SpecsFramework' not present.
Framework implementation 'org.specs.runner.SpecsFramework' not present.
Framework implementation 'com.novocode.junit.JUnitFramework' not present.
Subclass fingerprints: List((org.scalatest.Suite,false,org.scalatest.tools.Framework$$anon$1@16456b31))
Annotation fingerprints: List((org.scalatest.WrapWith,false,org.scalatest.tools.Framework$$anon$2@7467fe27))
Running TaskDef(StreamCodecSpec, org.scalatest.tools.Framework$$anon$1@16456b31, false, [SuiteSelector])
Running TaskDef(Base64Spec, org.scalatest.tools.Framework$$anon$1@16456b31, false, [SuiteSelector])
Running TaskDef(Base32Spec, org.scalatest.tools.Framework$$anon$1@16456b31, false, [SuiteSelector])
Running TaskDef(StreamDecoderSpec, org.scalatest.tools.Framework$$anon$1@16456b31, false, [SuiteSelector])
Read from stdout: StreamDecoderSpec:
Read from stdout: StreamDecoder
Read from stdout: - should check allowed bytes
[32mStreamDecoderSpec:[0m
[32mStreamDecoder[0m
[32m- should check allowed bytes[0m
Read from stdout: StreamCodecSpec:
Running TaskDef(Base16Spec, org.scalatest.tools.Framework$$anon$1@16456b31, false, [SuiteSelector])
Read from stdout: StreamCodec
Read from stdout: - should create a ByteStream
Read from stdout: StreamCodec
Read from stdout: - should create a IntStream
Read from stdout: StreamCodec
Read from stdout: - should create a groupStream
Read from stdout: StreamCodec
Read from stdout: - should create a filledStream
Read from stdout: StreamCodec
Read from stdout: - should flatten a filledStream
[32mStreamCodecSpec:[0m
[32mStreamCodec[0m
[32m- should create a ByteStream[0m
[32mStreamCodec[0m
[32m- should create a IntStream[0m
[32mStreamCodec[0m
[32m- should create a groupStream[0m
[32mStreamCodec[0m
[32m- should create a filledStream[0m
[32mStreamCodec[0m
[32m- should flatten a filledStream[0m
Read from stdout: Base16Spec:
Read from stdout: Base16
Read from stdout: - should encode to BASE16
[32mBase16Spec:[0m
[32mBase16[0m
[32m- should encode to BASE16[0m
Read from stdout: Base32Spec:
Read from stdout: Base32
Read from stdout: - should encode to BASE32
Read from stdout: Base32
Read from stdout: - should encode to BASE32NOPAD
Read from stdout: Base32
Read from stdout: - should encode to BASE32URL
Read from stdout: Base32
Read from stdout: - should encode to BASE32HEX
Read from stdout: Base32
Read from stdout: - should encode to BASE32HEXNOPAD
Read from stdout: Base32
Read from stdout: - should encode to BASE32HEXURL
Read from stdout: Base32
Read from stdout: - should decode from BASE32
Read from stdout: Base32
Read from stdout: - should decode from BASE32 w/o padding
[32mBase32Spec:[0m
[32mBase32[0m
[32m- should encode to BASE32[0m
[32mBase32[0m
[32m- should encode to BASE32NOPAD[0m
[32mBase32[0m
[32m- should encode to BASE32URL[0m
[32mBase32[0m
[32m- should encode to BASE32HEX[0m
[32mBase32[0m
[32m- should encode to BASE32HEXNOPAD[0m
[32mBase32[0m
[32m- should encode to BASE32HEXURL[0m
[32mBase32[0m
[32m- should decode from BASE32[0m
[32mBase32[0m
[32m- should decode from BASE32 w/o padding[0m
Read from stdout: Base64Spec:
Read from stdout: Base64
Read from stdout: - should encode to BASE64
Read from stdout: Base64
Read from stdout: - should encode to BASE64FILE
Read from stdout: Base64
Read from stdout: - should encode to BASE64URL
Read from stdout: Base64
Read from stdout: - should encode to BASE64NOPAD
Read from stdout: Base64
Read from stdout: - should encode to BASE64FILENOPAD
Read from stdout: Base64
Read from stdout: - should encode to BASE64URLNOPAD
Read from stdout: Base64
Read from stdout: - should decode from BASE64
Read from stdout: Base64
Read from stdout: - should decode from BASE64 w/o padding
Read from stdout: Base64
Read from stdout: - should fail with crap
Read from stdout: Base64
Read from stdout: - should decode from BASE64FILE
Read from stdout: Base64
Read from stdout: - should decode from BASE64FILE w/o padding
Read from stdout: Base64
Read from stdout: - should decode from BASE64URL
[32mBase64Spec:[0m
[32mBase64[0m
[32m- should encode to BASE64[0m
[32mBase64[0m
[32m- should encode to BASE64FILE[0m
[32mBase64[0m
[32m- should encode to BASE64URL[0m
[32mBase64[0m
[32m- should encode to BASE64NOPAD[0m
[32mBase64[0m
[32m- should encode to BASE64FILENOPAD[0m
[32mBase64[0m
[32m- should encode to BASE64URLNOPAD[0m
[32mBase64[0m
[32m- should decode from BASE64[0m
[32mBase64[0m
[32m- should decode from BASE64 w/o padding[0m
[32mBase64[0m
[32m- should fail with crap[0m
[32mBase64[0m
[32m- should decode from BASE64FILE[0m
[32mBase64[0m
[32m- should decode from BASE64FILE w/o padding[0m
[32mBase64[0m
[32m- should decode from BASE64URL[0m
Read from stdout: Run completed in 405 milliseconds.
Read from stdout: Total number of tests run: 27
Read from stdout: Suites: completed 5, aborted 0
Read from stdout: Tests: succeeded 27, failed 0, canceled 0, ignored 0, pending 0
Read from stdout: All tests passed.
Run completed in 405 milliseconds.
Total number of tests run: 27
Suites: completed 5, aborted 0
Tests: succeeded 27, failed 0, canceled 0, ignored 0, pending 0
All tests passed.
Passed tests:
	StreamCodecSpec
	Base64Spec
	StreamDecoderSpec
	Base32Spec
	Base16Spec
Total time: 1 s, completed 31.05.2016 14:55:23
> server-post-command-cleanup
> server-handle-next-server-request
> compile
Evaluating tasks: compile:compile
Running task... Cancel: sbt.server.ServerTaskCancellation@30234945, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala)
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala)

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala)

Read from stdout: Compiling 1 Scala source to /Users/lpfeiler/develop/github/base64/target/scala-2.11/classes...
Compiling 1 Scala source to /Users/lpfeiler/develop/github/base64/target/scala-2.11/classes...
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Running cached compiler 19b3d954, interfacing (CompilerInterface) with Scala compiler version 2.11.7
Calling Scala compiler with arguments  (CompilerInterface):
	-bootclasspath
	/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/classes:/Users/lpfeiler/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.11.7.jar
	-classpath
	/Users/lpfeiler/develop/github/base64/target/scala-2.11/classes
Scala compilation took 0.865705219 s
Invalidating /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala...
Invalidating (transitively) by inheritance from /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala...
Initial set of included nodes: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala)
Invalidated by transitive inheritance dependency: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala)
The /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala source file has the following regular definitions changed:
	encode, encodeToString.
All member reference dependencies will be considered within this context.
New invalidations:
	Set()
Initial set of included nodes: Set()
Previously invalidated, but (transitively) depend on new invalidations:
	Set()
All newly invalidated sources after taking into account (previously) recompiled sources:Set()
Total time: 1 s, completed 31.05.2016 14:55:52
> server-post-command-cleanup
> server-handle-next-server-request
> test
Evaluating tasks: test:test
Running task... Cancel: sbt.server.ServerTaskCancellation@5adb326a, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set()
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set()

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set()

Copy resource mappings: 
	
The de.csmath.codec.Base16$ source file has the following regular definitions changed:
	base16Enc.
All member reference dependencies will be considered within this context.
Files invalidated by inheriting from (external) de.csmath.codec.Base16$: Set(); now invalidating by inheritance (internally).
Getting direct dependencies of all sources transitively invalidated by inheritance.
Getting sources that directly depend on (external) de.csmath.codec.Base16$.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/test/scala/Base16Spec.scala. This dependency is not being considered for invalidation.
The de.csmath.codec.Base32$ source file has the following regular definitions changed:
	encode$default$2, encode.
All member reference dependencies will be considered within this context.
Files invalidated by inheriting from (external) de.csmath.codec.Base32$: Set(); now invalidating by inheritance (internally).
Getting direct dependencies of all sources transitively invalidated by inheritance.
Getting sources that directly depend on (external) de.csmath.codec.Base32$.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/test/scala/Base32Spec.scala. This dependency is not being considered for invalidation.
The de.csmath.codec.Base64$ source file has the following regular definitions changed:
	encode, encodeToString.
All member reference dependencies will be considered within this context.
Files invalidated by inheriting from (external) de.csmath.codec.Base64$: Set(); now invalidating by inheritance (internally).
Getting direct dependencies of all sources transitively invalidated by inheritance.
Getting sources that directly depend on (external) de.csmath.codec.Base64$.
The following modified names cause invalidation of /Users/lpfeiler/develop/github/base64/src/test/scala/Base64Spec.scala: Set(encodeToString)

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set()
Removed products: Set()
External API changes: API Changes: Set(NamesChange(de.csmath.codec.Base16$,ModifiedNames(regularNames = base16Enc, implicitNames = )), NamesChange(de.csmath.codec.Base32$,ModifiedNames(regularNames = encode$default$2, encode, implicitNames = )), NamesChange(de.csmath.codec.Base64$,ModifiedNames(regularNames = encode, encodeToString, implicitNames = )))
Modified binary dependencies: Set()
Initial directly invalidated sources: Set()

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/Base64Spec.scala)
All initially invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/Base64Spec.scala)

Read from stdout: Compiling 1 Scala source to /Users/lpfeiler/develop/github/base64/target/scala-2.11/test-classes...
Compiling 1 Scala source to /Users/lpfeiler/develop/github/base64/target/scala-2.11/test-classes...
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Running cached compiler 3ca83e11, interfacing (CompilerInterface) with Scala compiler version 2.11.7
Calling Scala compiler with arguments  (CompilerInterface):
	-bootclasspath
	/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/classes:/Users/lpfeiler/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.11.7.jar
	-classpath
	/Users/lpfeiler/develop/github/base64/target/scala-2.11/test-classes:/Users/lpfeiler/develop/github/base64/target/scala-2.11/classes:/Users/lpfeiler/develop/scala/activator-dist-1.3.6/repository/org.scalatest/scalatest_2.11/2.2.4/bundles/scalatest_2.11.jar:/Users/lpfeiler/develop/scala/activator-dist-1.3.6/repository/org.scala-lang/scala-reflect/2.11.2/jars/scala-reflect.jar:/Users/lpfeiler/develop/scala/activator-dist-1.3.6/repository/org.scala-lang.modules/scala-xml_2.11/1.0.2/bundles/scala-xml_2.11.jar
Read from stdout: /Users/lpfeiler/develop/github/base64/src/test/scala/Base64Spec.scala:10: type mismatch;
Read from stdout: found   : String("")
Read from stdout: required: Traversable[Byte]
/Users/lpfeiler/develop/github/base64/src/test/scala/Base64Spec.scala:10: type mismatch;
 found   : String("")
 required: Traversable[Byte]
Read from stdout: encodeToString("", BASE64) should === ("")
      encodeToString("", BASE64) should === ("")
Read from stdout: ^
                     ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/test/scala/Base64Spec.scala:11: type mismatch;
Read from stdout: found   : String("f")
Read from stdout: required: Traversable[Byte]
/Users/lpfeiler/develop/github/base64/src/test/scala/Base64Spec.scala:11: type mismatch;
 found   : String("f")
 required: Traversable[Byte]
Read from stdout: encodeToString("f", BASE64) should === ("Zg==")
      encodeToString("f", BASE64) should === ("Zg==")
Read from stdout: ^
                     ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/test/scala/Base64Spec.scala:12: type mismatch;
Read from stdout: found   : String("fo")
Read from stdout: required: Traversable[Byte]
/Users/lpfeiler/develop/github/base64/src/test/scala/Base64Spec.scala:12: type mismatch;
 found   : String("fo")
 required: Traversable[Byte]
Read from stdout: encodeToString("fo", BASE64) should === ("Zm8=")
      encodeToString("fo", BASE64) should === ("Zm8=")
Read from stdout: ^
                     ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/test/scala/Base64Spec.scala:13: type mismatch;
Read from stdout: found   : String("foo")
Read from stdout: required: Traversable[Byte]
/Users/lpfeiler/develop/github/base64/src/test/scala/Base64Spec.scala:13: type mismatch;
 found   : String("foo")
 required: Traversable[Byte]
Read from stdout: encodeToString("foo", BASE64) should === ("Zm9v")
      encodeToString("foo", BASE64) should === ("Zm9v")
Read from stdout: ^
                     ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/test/scala/Base64Spec.scala:14: type mismatch;
Read from stdout: found   : String("foob")
Read from stdout: required: Traversable[Byte]
/Users/lpfeiler/develop/github/base64/src/test/scala/Base64Spec.scala:14: type mismatch;
 found   : String("foob")
 required: Traversable[Byte]
Read from stdout: encodeToString("foob", BASE64) should === ("Zm9vYg==")
      encodeToString("foob", BASE64) should === ("Zm9vYg==")
Read from stdout: ^
                     ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/test/scala/Base64Spec.scala:15: type mismatch;
Read from stdout: found   : String("fooba")
Read from stdout: required: Traversable[Byte]
/Users/lpfeiler/develop/github/base64/src/test/scala/Base64Spec.scala:15: type mismatch;
 found   : String("fooba")
 required: Traversable[Byte]
Read from stdout: encodeToString("fooba", BASE64) should === ("Zm9vYmE=")
      encodeToString("fooba", BASE64) should === ("Zm9vYmE=")
Read from stdout: ^
                     ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/test/scala/Base64Spec.scala:16: type mismatch;
Read from stdout: found   : String("foobar")
Read from stdout: required: Traversable[Byte]
/Users/lpfeiler/develop/github/base64/src/test/scala/Base64Spec.scala:16: type mismatch;
 found   : String("foobar")
 required: Traversable[Byte]
Read from stdout: encodeToString("foobar", BASE64) should === ("Zm9vYmFy")
      encodeToString("foobar", BASE64) should === ("Zm9vYmFy")
Read from stdout: ^
                     ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/test/scala/Base64Spec.scala:21: type mismatch;
Read from stdout: found   : String("")
Read from stdout: required: Traversable[Byte]
/Users/lpfeiler/develop/github/base64/src/test/scala/Base64Spec.scala:21: type mismatch;
 found   : String("")
 required: Traversable[Byte]
Read from stdout: encodeToString("", BASE64FILE) should === ("")
      encodeToString("", BASE64FILE) should === ("")
Read from stdout: ^
                     ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/test/scala/Base64Spec.scala:22: type mismatch;
Read from stdout: found   : String("f")
Read from stdout: required: Traversable[Byte]
/Users/lpfeiler/develop/github/base64/src/test/scala/Base64Spec.scala:22: type mismatch;
 found   : String("f")
 required: Traversable[Byte]
Read from stdout: encodeToString("f", BASE64FILE) should === ("Zg==")
      encodeToString("f", BASE64FILE) should === ("Zg==")
Read from stdout: ^
                     ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/test/scala/Base64Spec.scala:23: type mismatch;
Read from stdout: found   : String("fo")
Read from stdout: required: Traversable[Byte]
/Users/lpfeiler/develop/github/base64/src/test/scala/Base64Spec.scala:23: type mismatch;
 found   : String("fo")
 required: Traversable[Byte]
Read from stdout: encodeToString("fo", BASE64FILE) should === ("Zm8=")
      encodeToString("fo", BASE64FILE) should === ("Zm8=")
Read from stdout: ^
                     ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/test/scala/Base64Spec.scala:24: type mismatch;
Read from stdout: found   : String("foo")
Read from stdout: required: Traversable[Byte]
/Users/lpfeiler/develop/github/base64/src/test/scala/Base64Spec.scala:24: type mismatch;
 found   : String("foo")
 required: Traversable[Byte]
Read from stdout: encodeToString("foo", BASE64FILE) should === ("Zm9v")
      encodeToString("foo", BASE64FILE) should === ("Zm9v")
Read from stdout: ^
                     ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/test/scala/Base64Spec.scala:25: type mismatch;
Read from stdout: found   : String("foob")
Read from stdout: required: Traversable[Byte]
/Users/lpfeiler/develop/github/base64/src/test/scala/Base64Spec.scala:25: type mismatch;
 found   : String("foob")
 required: Traversable[Byte]
Read from stdout: encodeToString("foob", BASE64FILE) should === ("Zm9vYg==")
      encodeToString("foob", BASE64FILE) should === ("Zm9vYg==")
Read from stdout: ^
                     ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/test/scala/Base64Spec.scala:26: type mismatch;
Read from stdout: found   : String("fooba")
Read from stdout: required: Traversable[Byte]
/Users/lpfeiler/develop/github/base64/src/test/scala/Base64Spec.scala:26: type mismatch;
 found   : String("fooba")
 required: Traversable[Byte]
Read from stdout: encodeToString("fooba", BASE64FILE) should === ("Zm9vYmE=")
      encodeToString("fooba", BASE64FILE) should === ("Zm9vYmE=")
Read from stdout: ^
                     ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/test/scala/Base64Spec.scala:27: type mismatch;
Read from stdout: found   : String("foobar")
Read from stdout: required: Traversable[Byte]
/Users/lpfeiler/develop/github/base64/src/test/scala/Base64Spec.scala:27: type mismatch;
 found   : String("foobar")
 required: Traversable[Byte]
Read from stdout: encodeToString("foobar", BASE64FILE) should === ("Zm9vYmFy")
      encodeToString("foobar", BASE64FILE) should === ("Zm9vYmFy")
Read from stdout: ^
                     ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/test/scala/Base64Spec.scala:32: type mismatch;
Read from stdout: found   : String("")
Read from stdout: required: Traversable[Byte]
/Users/lpfeiler/develop/github/base64/src/test/scala/Base64Spec.scala:32: type mismatch;
 found   : String("")
 required: Traversable[Byte]
Read from stdout: encodeToString("", BASE64URL) should === ("")
      encodeToString("", BASE64URL) should === ("")
Read from stdout: ^
                     ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/test/scala/Base64Spec.scala:33: type mismatch;
Read from stdout: found   : String("f")
Read from stdout: required: Traversable[Byte]
/Users/lpfeiler/develop/github/base64/src/test/scala/Base64Spec.scala:33: type mismatch;
 found   : String("f")
 required: Traversable[Byte]
Read from stdout: encodeToString("f", BASE64URL) should === ("Zg%3D%3D")
      encodeToString("f", BASE64URL) should === ("Zg%3D%3D")
Read from stdout: ^
                     ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/test/scala/Base64Spec.scala:34: type mismatch;
Read from stdout: found   : String("fo")
Read from stdout: required: Traversable[Byte]
/Users/lpfeiler/develop/github/base64/src/test/scala/Base64Spec.scala:34: type mismatch;
 found   : String("fo")
 required: Traversable[Byte]
Read from stdout: encodeToString("fo", BASE64URL) should === ("Zm8%3D")
      encodeToString("fo", BASE64URL) should === ("Zm8%3D")
Read from stdout: ^
                     ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/test/scala/Base64Spec.scala:35: type mismatch;
Read from stdout: found   : String("foo")
Read from stdout: required: Traversable[Byte]
/Users/lpfeiler/develop/github/base64/src/test/scala/Base64Spec.scala:35: type mismatch;
 found   : String("foo")
 required: Traversable[Byte]
Read from stdout: encodeToString("foo", BASE64URL) should === ("Zm9v")
      encodeToString("foo", BASE64URL) should === ("Zm9v")
Read from stdout: ^
                     ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/test/scala/Base64Spec.scala:36: type mismatch;
Read from stdout: found   : String("foob")
Read from stdout: required: Traversable[Byte]
/Users/lpfeiler/develop/github/base64/src/test/scala/Base64Spec.scala:36: type mismatch;
 found   : String("foob")
 required: Traversable[Byte]
Read from stdout: encodeToString("foob", BASE64URL) should === ("Zm9vYg%3D%3D")
      encodeToString("foob", BASE64URL) should === ("Zm9vYg%3D%3D")
Read from stdout: ^
                     ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/test/scala/Base64Spec.scala:37: type mismatch;
Read from stdout: found   : String("fooba")
Read from stdout: required: Traversable[Byte]
/Users/lpfeiler/develop/github/base64/src/test/scala/Base64Spec.scala:37: type mismatch;
 found   : String("fooba")
 required: Traversable[Byte]
Read from stdout: encodeToString("fooba", BASE64URL) should === ("Zm9vYmE%3D")
      encodeToString("fooba", BASE64URL) should === ("Zm9vYmE%3D")
Read from stdout: ^
                     ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/test/scala/Base64Spec.scala:42: type mismatch;
Read from stdout: found   : String("")
Read from stdout: required: Traversable[Byte]
/Users/lpfeiler/develop/github/base64/src/test/scala/Base64Spec.scala:42: type mismatch;
 found   : String("")
 required: Traversable[Byte]
Read from stdout: encodeToString("", BASE64NOPAD) should === ("")
      encodeToString("", BASE64NOPAD) should === ("")
Read from stdout: ^
                     ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/test/scala/Base64Spec.scala:43: type mismatch;
Read from stdout: found   : String("f")
Read from stdout: required: Traversable[Byte]
/Users/lpfeiler/develop/github/base64/src/test/scala/Base64Spec.scala:43: type mismatch;
 found   : String("f")
 required: Traversable[Byte]
Read from stdout: encodeToString("f", BASE64NOPAD) should === ("Zg")
      encodeToString("f", BASE64NOPAD) should === ("Zg")
Read from stdout: ^
                     ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/test/scala/Base64Spec.scala:44: type mismatch;
Read from stdout: found   : String("fo")
Read from stdout: required: Traversable[Byte]
/Users/lpfeiler/develop/github/base64/src/test/scala/Base64Spec.scala:44: type mismatch;
 found   : String("fo")
 required: Traversable[Byte]
Read from stdout: encodeToString("fo", BASE64NOPAD) should === ("Zm8")
      encodeToString("fo", BASE64NOPAD) should === ("Zm8")
Read from stdout: ^
                     ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/test/scala/Base64Spec.scala:45: type mismatch;
Read from stdout: found   : String("foo")
Read from stdout: required: Traversable[Byte]
/Users/lpfeiler/develop/github/base64/src/test/scala/Base64Spec.scala:45: type mismatch;
 found   : String("foo")
 required: Traversable[Byte]
Read from stdout: encodeToString("foo", BASE64NOPAD) should === ("Zm9v")
      encodeToString("foo", BASE64NOPAD) should === ("Zm9v")
Read from stdout: ^
                     ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/test/scala/Base64Spec.scala:46: type mismatch;
Read from stdout: found   : String("foob")
Read from stdout: required: Traversable[Byte]
/Users/lpfeiler/develop/github/base64/src/test/scala/Base64Spec.scala:46: type mismatch;
 found   : String("foob")
 required: Traversable[Byte]
Read from stdout: encodeToString("foob", BASE64NOPAD) should === ("Zm9vYg")
      encodeToString("foob", BASE64NOPAD) should === ("Zm9vYg")
Read from stdout: ^
                     ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/test/scala/Base64Spec.scala:47: type mismatch;
Read from stdout: found   : String("fooba")
Read from stdout: required: Traversable[Byte]
/Users/lpfeiler/develop/github/base64/src/test/scala/Base64Spec.scala:47: type mismatch;
 found   : String("fooba")
 required: Traversable[Byte]
Read from stdout: encodeToString("fooba", BASE64NOPAD) should === ("Zm9vYmE")
      encodeToString("fooba", BASE64NOPAD) should === ("Zm9vYmE")
Read from stdout: ^
                     ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/test/scala/Base64Spec.scala:48: type mismatch;
Read from stdout: found   : String("foobar")
Read from stdout: required: Traversable[Byte]
/Users/lpfeiler/develop/github/base64/src/test/scala/Base64Spec.scala:48: type mismatch;
 found   : String("foobar")
 required: Traversable[Byte]
Read from stdout: encodeToString("foobar", BASE64NOPAD) should === ("Zm9vYmFy")
      encodeToString("foobar", BASE64NOPAD) should === ("Zm9vYmFy")
Read from stdout: ^
                     ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/test/scala/Base64Spec.scala:52: type mismatch;
Read from stdout: found   : String("")
Read from stdout: required: Traversable[Byte]
/Users/lpfeiler/develop/github/base64/src/test/scala/Base64Spec.scala:52: type mismatch;
 found   : String("")
 required: Traversable[Byte]
Read from stdout: encodeToString("", BASE64FILENOPAD) should === ("")
      encodeToString("", BASE64FILENOPAD) should === ("")
Read from stdout: ^
                     ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/test/scala/Base64Spec.scala:53: type mismatch;
Read from stdout: found   : String("f")
Read from stdout: required: Traversable[Byte]
/Users/lpfeiler/develop/github/base64/src/test/scala/Base64Spec.scala:53: type mismatch;
 found   : String("f")
 required: Traversable[Byte]
Read from stdout: encodeToString("f", BASE64FILENOPAD) should === ("Zg")
      encodeToString("f", BASE64FILENOPAD) should === ("Zg")
Read from stdout: ^
                     ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/test/scala/Base64Spec.scala:54: type mismatch;
Read from stdout: found   : String("fo")
Read from stdout: required: Traversable[Byte]
/Users/lpfeiler/develop/github/base64/src/test/scala/Base64Spec.scala:54: type mismatch;
 found   : String("fo")
 required: Traversable[Byte]
Read from stdout: encodeToString("fo", BASE64FILENOPAD) should === ("Zm8")
      encodeToString("fo", BASE64FILENOPAD) should === ("Zm8")
Read from stdout: ^
                     ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/test/scala/Base64Spec.scala:55: type mismatch;
Read from stdout: found   : String("foo")
Read from stdout: required: Traversable[Byte]
/Users/lpfeiler/develop/github/base64/src/test/scala/Base64Spec.scala:55: type mismatch;
 found   : String("foo")
 required: Traversable[Byte]
Read from stdout: encodeToString("foo", BASE64FILENOPAD) should === ("Zm9v")
      encodeToString("foo", BASE64FILENOPAD) should === ("Zm9v")
Read from stdout: ^
                     ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/test/scala/Base64Spec.scala:56: type mismatch;
Read from stdout: found   : String("foob")
Read from stdout: required: Traversable[Byte]
/Users/lpfeiler/develop/github/base64/src/test/scala/Base64Spec.scala:56: type mismatch;
 found   : String("foob")
 required: Traversable[Byte]
Read from stdout: encodeToString("foob", BASE64FILENOPAD) should === ("Zm9vYg")
      encodeToString("foob", BASE64FILENOPAD) should === ("Zm9vYg")
Read from stdout: ^
                     ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/test/scala/Base64Spec.scala:57: type mismatch;
Read from stdout: found   : String("fooba")
Read from stdout: required: Traversable[Byte]
/Users/lpfeiler/develop/github/base64/src/test/scala/Base64Spec.scala:57: type mismatch;
 found   : String("fooba")
 required: Traversable[Byte]
Read from stdout: encodeToString("fooba", BASE64FILENOPAD) should === ("Zm9vYmE")
      encodeToString("fooba", BASE64FILENOPAD) should === ("Zm9vYmE")
Read from stdout: ^
                     ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/test/scala/Base64Spec.scala:58: type mismatch;
Read from stdout: found   : String("foobar")
Read from stdout: required: Traversable[Byte]
/Users/lpfeiler/develop/github/base64/src/test/scala/Base64Spec.scala:58: type mismatch;
 found   : String("foobar")
 required: Traversable[Byte]
Read from stdout: encodeToString("foobar", BASE64FILENOPAD) should === ("Zm9vYmFy")
      encodeToString("foobar", BASE64FILENOPAD) should === ("Zm9vYmFy")
Read from stdout: ^
                     ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/test/scala/Base64Spec.scala:63: type mismatch;
Read from stdout: found   : String("")
Read from stdout: required: Traversable[Byte]
/Users/lpfeiler/develop/github/base64/src/test/scala/Base64Spec.scala:63: type mismatch;
 found   : String("")
 required: Traversable[Byte]
Read from stdout: encodeToString("", BASE64URLNOPAD) should === ("")
      encodeToString("", BASE64URLNOPAD) should === ("")
Read from stdout: ^
                     ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/test/scala/Base64Spec.scala:64: type mismatch;
Read from stdout: found   : String("f")
Read from stdout: required: Traversable[Byte]
/Users/lpfeiler/develop/github/base64/src/test/scala/Base64Spec.scala:64: type mismatch;
 found   : String("f")
 required: Traversable[Byte]
Read from stdout: encodeToString("f", BASE64URLNOPAD) should === ("Zg")
      encodeToString("f", BASE64URLNOPAD) should === ("Zg")
Read from stdout: ^
                     ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/test/scala/Base64Spec.scala:65: type mismatch;
Read from stdout: found   : String("fo")
Read from stdout: required: Traversable[Byte]
/Users/lpfeiler/develop/github/base64/src/test/scala/Base64Spec.scala:65: type mismatch;
 found   : String("fo")
 required: Traversable[Byte]
Read from stdout: encodeToString("fo", BASE64URLNOPAD) should === ("Zm8")
      encodeToString("fo", BASE64URLNOPAD) should === ("Zm8")
Read from stdout: ^
                     ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/test/scala/Base64Spec.scala:66: type mismatch;
Read from stdout: found   : String("foo")
Read from stdout: required: Traversable[Byte]
/Users/lpfeiler/develop/github/base64/src/test/scala/Base64Spec.scala:66: type mismatch;
 found   : String("foo")
 required: Traversable[Byte]
Read from stdout: encodeToString("foo", BASE64URLNOPAD) should === ("Zm9v")
      encodeToString("foo", BASE64URLNOPAD) should === ("Zm9v")
Read from stdout: ^
                     ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/test/scala/Base64Spec.scala:67: type mismatch;
Read from stdout: found   : String("foob")
Read from stdout: required: Traversable[Byte]
/Users/lpfeiler/develop/github/base64/src/test/scala/Base64Spec.scala:67: type mismatch;
 found   : String("foob")
 required: Traversable[Byte]
Read from stdout: encodeToString("foob", BASE64URLNOPAD) should === ("Zm9vYg")
      encodeToString("foob", BASE64URLNOPAD) should === ("Zm9vYg")
Read from stdout: ^
                     ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/test/scala/Base64Spec.scala:68: type mismatch;
Read from stdout: found   : String("fooba")
Read from stdout: required: Traversable[Byte]
/Users/lpfeiler/develop/github/base64/src/test/scala/Base64Spec.scala:68: type mismatch;
 found   : String("fooba")
 required: Traversable[Byte]
Read from stdout: encodeToString("fooba", BASE64URLNOPAD) should === ("Zm9vYmE")
      encodeToString("fooba", BASE64URLNOPAD) should === ("Zm9vYmE")
Read from stdout: ^
                     ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/test/scala/Base64Spec.scala:69: type mismatch;
Read from stdout: found   : String("foobar")
Read from stdout: required: Traversable[Byte]
/Users/lpfeiler/develop/github/base64/src/test/scala/Base64Spec.scala:69: type mismatch;
 found   : String("foobar")
 required: Traversable[Byte]
Read from stdout: encodeToString("foobar", BASE64URLNOPAD) should === ("Zm9vYmFy")
      encodeToString("foobar", BASE64URLNOPAD) should === ("Zm9vYmFy")
Read from stdout: ^
                     ^
Read from stdout: 41 errors found
41 errors found
Compilation failed (CompilerInterface)
Read from stdout: (test:compileIncremental) Compilation failed
(test:compileIncremental) Compilation failed
Total time: 2 s, completed 31.05.2016 14:55:54
> server-post-command-error-handler
> server-post-command-cleanup
> server-handle-next-server-request
> compile
Evaluating tasks: compile:compile
Running task... Cancel: sbt.server.ServerTaskCancellation@75a7ceec, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala)
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala)

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala)

Read from stdout: Compiling 1 Scala source to /Users/lpfeiler/develop/github/base64/target/scala-2.11/classes...
Compiling 1 Scala source to /Users/lpfeiler/develop/github/base64/target/scala-2.11/classes...
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Running cached compiler 52011fdd, interfacing (CompilerInterface) with Scala compiler version 2.11.7
Calling Scala compiler with arguments  (CompilerInterface):
	-bootclasspath
	/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/classes:/Users/lpfeiler/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.11.7.jar
	-classpath
	/Users/lpfeiler/develop/github/base64/target/scala-2.11/classes
Read from stdout: /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala:20: overriding method encode in class BaseN of type (data: Traversable[Byte], enc: de.csmath.codec.Codec.Value)Stream[Byte];
Read from stdout: method encode needs `override' modifier
/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala:20: overriding method encode in class BaseN of type (data: Traversable[Byte], enc: de.csmath.codec.Codec.Value)Stream[Byte];
 method encode needs `override' modifier
Read from stdout: def encode(data: Traversable[Byte], enc: Codec.Value = BASE64): Stream[Byte] =
    def encode(data: Traversable[Byte], enc: Codec.Value = BASE64): Stream[Byte] =
Read from stdout: ^
        ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala:32: overriding method encodeToString in class BaseN of type (data: Traversable[Byte], enc: de.csmath.codec.Codec.Value)String;
Read from stdout: method encodeToString needs `override' modifier
/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala:32: overriding method encodeToString in class BaseN of type (data: Traversable[Byte], enc: de.csmath.codec.Codec.Value)String;
 method encodeToString needs `override' modifier
Read from stdout: def encodeToString(data: Traversable[Byte], enc: Codec.Value = BASE64): String =
    def encodeToString(data: Traversable[Byte], enc: Codec.Value = BASE64): String =
Read from stdout: ^
        ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala:47: overriding method decode in class BaseN of type (data: Traversable[Byte], enc: de.csmath.codec.Codec.Value)scala.util.Try[Stream[Byte]];
Read from stdout: method decode needs `override' modifier
/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala:47: overriding method decode in class BaseN of type (data: Traversable[Byte], enc: de.csmath.codec.Codec.Value)scala.util.Try[Stream[Byte]];
 method decode needs `override' modifier
Read from stdout: def decode(data: Traversable[Byte], enc: Codec.Value = BASE64): Try[Stream[Byte]] =
    def decode(data: Traversable[Byte], enc: Codec.Value = BASE64): Try[Stream[Byte]] =
Read from stdout: ^
        ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala:61: overriding method decode in class BaseN of type (text: String, enc: de.csmath.codec.Codec.Value)scala.util.Try[Stream[Byte]];
Read from stdout: method decode needs `override' modifier
/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala:61: overriding method decode in class BaseN of type (text: String, enc: de.csmath.codec.Codec.Value)scala.util.Try[Stream[Byte]];
 method decode needs `override' modifier
Read from stdout: def decode(text: String, enc: Codec.Value): Try[Stream[Byte]] =
    def decode(text: String, enc: Codec.Value): Try[Stream[Byte]] =
Read from stdout: ^
        ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala:76: overriding method decodeToString in class BaseN of type (data: Traversable[Byte], enc: de.csmath.codec.Codec.Value)scala.util.Try[String];
Read from stdout: method decodeToString needs `override' modifier
/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala:76: overriding method decodeToString in class BaseN of type (data: Traversable[Byte], enc: de.csmath.codec.Codec.Value)scala.util.Try[String];
 method decodeToString needs `override' modifier
Read from stdout: def decodeToString(data: Traversable[Byte], enc: Codec.Value = BASE64): Try[String] =
    def decodeToString(data: Traversable[Byte], enc: Codec.Value = BASE64): Try[String] =
Read from stdout: ^
        ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala:90: overriding method decodeToString in class BaseN of type (text: String, enc: de.csmath.codec.Codec.Value)scala.util.Try[String];
Read from stdout: method decodeToString needs `override' modifier
/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala:90: overriding method decodeToString in class BaseN of type (text: String, enc: de.csmath.codec.Codec.Value)scala.util.Try[String];
 method decodeToString needs `override' modifier
Read from stdout: def decodeToString(text: String, enc: Codec.Value): Try[String] =
    def decodeToString(text: String, enc: Codec.Value): Try[String] =
Read from stdout: ^
        ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala:106: overriding method decode in class BaseN of type (data: Traversable[Byte], enc: de.csmath.codec.Codec.Value, size: Long)scala.util.Try[Stream[Byte]];
Read from stdout: method decode needs `override' modifier
/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala:106: overriding method decode in class BaseN of type (data: Traversable[Byte], enc: de.csmath.codec.Codec.Value, size: Long)scala.util.Try[Stream[Byte]];
 method decode needs `override' modifier
Read from stdout: def decode(data: Traversable[Byte], enc: Codec.Value, size: Long): Try[Stream[Byte]] =
    def decode(data: Traversable[Byte], enc: Codec.Value, size: Long): Try[Stream[Byte]] =
Read from stdout: ^
        ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala:121: overriding method decode in class BaseN of type (text: String, enc: de.csmath.codec.Codec.Value, size: Long)scala.util.Try[Stream[Byte]];
Read from stdout: method decode needs `override' modifier
/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala:121: overriding method decode in class BaseN of type (text: String, enc: de.csmath.codec.Codec.Value, size: Long)scala.util.Try[Stream[Byte]];
 method decode needs `override' modifier
Read from stdout: def decode(text: String, enc: Codec.Value, size: Long): Try[Stream[Byte]] =
    def decode(text: String, enc: Codec.Value, size: Long): Try[Stream[Byte]] =
Read from stdout: ^
        ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala:137: overriding method decodeToString in class BaseN of type (data: Traversable[Byte], enc: de.csmath.codec.Codec.Value, size: Long)scala.util.Try[String];
Read from stdout: method decodeToString needs `override' modifier
/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala:137: overriding method decodeToString in class BaseN of type (data: Traversable[Byte], enc: de.csmath.codec.Codec.Value, size: Long)scala.util.Try[String];
 method decodeToString needs `override' modifier
Read from stdout: def decodeToString(data: Traversable[Byte], enc: Codec.Value, size: Long): Try[String] =
    def decodeToString(data: Traversable[Byte], enc: Codec.Value, size: Long): Try[String] =
Read from stdout: ^
        ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala:152: overriding method decodeToString in class BaseN of type (text: String, enc: de.csmath.codec.Codec.Value, size: Long)scala.util.Try[String];
Read from stdout: method decodeToString needs `override' modifier
/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala:152: overriding method decodeToString in class BaseN of type (text: String, enc: de.csmath.codec.Codec.Value, size: Long)scala.util.Try[String];
 method decodeToString needs `override' modifier
Read from stdout: def decodeToString(text: String, enc: Codec.Value, size: Long): Try[String] =
    def decodeToString(text: String, enc: Codec.Value, size: Long): Try[String] =
Read from stdout: ^
        ^
Read from stdout: 10 errors found
10 errors found
Compilation failed (CompilerInterface)
Read from stdout: (compile:compileIncremental) Compilation failed
(compile:compileIncremental) Compilation failed
Total time: 1 s, completed 31.05.2016 14:56:06
> server-post-command-error-handler
> server-post-command-cleanup
> server-handle-next-server-request
> compile
Evaluating tasks: compile:compile
Running task... Cancel: sbt.server.ServerTaskCancellation@3b666028, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala)
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala)

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala)

Read from stdout: Compiling 1 Scala source to /Users/lpfeiler/develop/github/base64/target/scala-2.11/classes...
Compiling 1 Scala source to /Users/lpfeiler/develop/github/base64/target/scala-2.11/classes...
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Running cached compiler 7c5725ab, interfacing (CompilerInterface) with Scala compiler version 2.11.7
Calling Scala compiler with arguments  (CompilerInterface):
	-bootclasspath
	/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/classes:/Users/lpfeiler/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.11.7.jar
	-classpath
	/Users/lpfeiler/develop/github/base64/target/scala-2.11/classes
Read from stdout: /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala:32: overriding method encodeToString in class BaseN of type (data: Traversable[Byte], enc: de.csmath.codec.Codec.Value)String;
Read from stdout: method encodeToString needs `override' modifier
/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala:32: overriding method encodeToString in class BaseN of type (data: Traversable[Byte], enc: de.csmath.codec.Codec.Value)String;
 method encodeToString needs `override' modifier
Read from stdout: def encodeToString(data: Traversable[Byte], enc: Codec.Value = BASE64): String =
    def encodeToString(data: Traversable[Byte], enc: Codec.Value = BASE64): String =
Read from stdout: ^
        ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala:47: overriding method decode in class BaseN of type (data: Traversable[Byte], enc: de.csmath.codec.Codec.Value)scala.util.Try[Stream[Byte]];
Read from stdout: method decode needs `override' modifier
/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala:47: overriding method decode in class BaseN of type (data: Traversable[Byte], enc: de.csmath.codec.Codec.Value)scala.util.Try[Stream[Byte]];
 method decode needs `override' modifier
Read from stdout: def decode(data: Traversable[Byte], enc: Codec.Value = BASE64): Try[Stream[Byte]] =
    def decode(data: Traversable[Byte], enc: Codec.Value = BASE64): Try[Stream[Byte]] =
Read from stdout: ^
        ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala:61: overriding method decode in class BaseN of type (text: String, enc: de.csmath.codec.Codec.Value)scala.util.Try[Stream[Byte]];
Read from stdout: method decode needs `override' modifier
/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala:61: overriding method decode in class BaseN of type (text: String, enc: de.csmath.codec.Codec.Value)scala.util.Try[Stream[Byte]];
 method decode needs `override' modifier
Read from stdout: def decode(text: String, enc: Codec.Value): Try[Stream[Byte]] =
    def decode(text: String, enc: Codec.Value): Try[Stream[Byte]] =
Read from stdout: ^
        ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala:76: overriding method decodeToString in class BaseN of type (data: Traversable[Byte], enc: de.csmath.codec.Codec.Value)scala.util.Try[String];
Read from stdout: method decodeToString needs `override' modifier
/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala:76: overriding method decodeToString in class BaseN of type (data: Traversable[Byte], enc: de.csmath.codec.Codec.Value)scala.util.Try[String];
 method decodeToString needs `override' modifier
Read from stdout: def decodeToString(data: Traversable[Byte], enc: Codec.Value = BASE64): Try[String] =
    def decodeToString(data: Traversable[Byte], enc: Codec.Value = BASE64): Try[String] =
Read from stdout: ^
        ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala:90: overriding method decodeToString in class BaseN of type (text: String, enc: de.csmath.codec.Codec.Value)scala.util.Try[String];
Read from stdout: method decodeToString needs `override' modifier
/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala:90: overriding method decodeToString in class BaseN of type (text: String, enc: de.csmath.codec.Codec.Value)scala.util.Try[String];
 method decodeToString needs `override' modifier
Read from stdout: def decodeToString(text: String, enc: Codec.Value): Try[String] =
    def decodeToString(text: String, enc: Codec.Value): Try[String] =
Read from stdout: ^
        ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala:106: overriding method decode in class BaseN of type (data: Traversable[Byte], enc: de.csmath.codec.Codec.Value, size: Long)scala.util.Try[Stream[Byte]];
Read from stdout: method decode needs `override' modifier
/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala:106: overriding method decode in class BaseN of type (data: Traversable[Byte], enc: de.csmath.codec.Codec.Value, size: Long)scala.util.Try[Stream[Byte]];
 method decode needs `override' modifier
Read from stdout: def decode(data: Traversable[Byte], enc: Codec.Value, size: Long): Try[Stream[Byte]] =
    def decode(data: Traversable[Byte], enc: Codec.Value, size: Long): Try[Stream[Byte]] =
Read from stdout: ^
        ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala:121: overriding method decode in class BaseN of type (text: String, enc: de.csmath.codec.Codec.Value, size: Long)scala.util.Try[Stream[Byte]];
Read from stdout: method decode needs `override' modifier
/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala:121: overriding method decode in class BaseN of type (text: String, enc: de.csmath.codec.Codec.Value, size: Long)scala.util.Try[Stream[Byte]];
 method decode needs `override' modifier
Read from stdout: def decode(text: String, enc: Codec.Value, size: Long): Try[Stream[Byte]] =
    def decode(text: String, enc: Codec.Value, size: Long): Try[Stream[Byte]] =
Read from stdout: ^
        ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala:137: overriding method decodeToString in class BaseN of type (data: Traversable[Byte], enc: de.csmath.codec.Codec.Value, size: Long)scala.util.Try[String];
Read from stdout: method decodeToString needs `override' modifier
/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala:137: overriding method decodeToString in class BaseN of type (data: Traversable[Byte], enc: de.csmath.codec.Codec.Value, size: Long)scala.util.Try[String];
 method decodeToString needs `override' modifier
Read from stdout: def decodeToString(data: Traversable[Byte], enc: Codec.Value, size: Long): Try[String] =
    def decodeToString(data: Traversable[Byte], enc: Codec.Value, size: Long): Try[String] =
Read from stdout: ^
        ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala:152: overriding method decodeToString in class BaseN of type (text: String, enc: de.csmath.codec.Codec.Value, size: Long)scala.util.Try[String];
Read from stdout: method decodeToString needs `override' modifier
/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala:152: overriding method decodeToString in class BaseN of type (text: String, enc: de.csmath.codec.Codec.Value, size: Long)scala.util.Try[String];
 method decodeToString needs `override' modifier
Read from stdout: def decodeToString(text: String, enc: Codec.Value, size: Long): Try[String] =
    def decodeToString(text: String, enc: Codec.Value, size: Long): Try[String] =
Read from stdout: ^
        ^
Read from stdout: 9 errors found
9 errors found
Compilation failed (CompilerInterface)
Read from stdout: (compile:compileIncremental) Compilation failed
(compile:compileIncremental) Compilation failed
Total time: 1 s, completed 31.05.2016 14:57:19
> server-post-command-error-handler
> server-post-command-cleanup
> server-handle-next-server-request
> compile
Evaluating tasks: compile:compile
Running task... Cancel: sbt.server.ServerTaskCancellation@4f7806cb, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala)
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala)

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala)

Read from stdout: Compiling 1 Scala source to /Users/lpfeiler/develop/github/base64/target/scala-2.11/classes...
Compiling 1 Scala source to /Users/lpfeiler/develop/github/base64/target/scala-2.11/classes...
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Running cached compiler 6d830b06, interfacing (CompilerInterface) with Scala compiler version 2.11.7
Calling Scala compiler with arguments  (CompilerInterface):
	-bootclasspath
	/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/classes:/Users/lpfeiler/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.11.7.jar
	-classpath
	/Users/lpfeiler/develop/github/base64/target/scala-2.11/classes
Read from stdout: /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala:61: overriding method decode in class BaseN of type (text: String, enc: de.csmath.codec.Codec.Value)scala.util.Try[Stream[Byte]];
Read from stdout: method decode needs `override' modifier
/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala:61: overriding method decode in class BaseN of type (text: String, enc: de.csmath.codec.Codec.Value)scala.util.Try[Stream[Byte]];
 method decode needs `override' modifier
Read from stdout: def decode(text: String, enc: Codec.Value): Try[Stream[Byte]] =
    def decode(text: String, enc: Codec.Value): Try[Stream[Byte]] =
Read from stdout: ^
        ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala:90: overriding method decodeToString in class BaseN of type (text: String, enc: de.csmath.codec.Codec.Value)scala.util.Try[String];
Read from stdout: method decodeToString needs `override' modifier
/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala:90: overriding method decodeToString in class BaseN of type (text: String, enc: de.csmath.codec.Codec.Value)scala.util.Try[String];
 method decodeToString needs `override' modifier
Read from stdout: def decodeToString(text: String, enc: Codec.Value): Try[String] =
    def decodeToString(text: String, enc: Codec.Value): Try[String] =
Read from stdout: ^
        ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala:106: overriding method decode in class BaseN of type (data: Traversable[Byte], enc: de.csmath.codec.Codec.Value, size: Long)scala.util.Try[Stream[Byte]];
Read from stdout: method decode needs `override' modifier
/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala:106: overriding method decode in class BaseN of type (data: Traversable[Byte], enc: de.csmath.codec.Codec.Value, size: Long)scala.util.Try[Stream[Byte]];
 method decode needs `override' modifier
Read from stdout: def decode(data: Traversable[Byte], enc: Codec.Value, size: Long): Try[Stream[Byte]] =
    def decode(data: Traversable[Byte], enc: Codec.Value, size: Long): Try[Stream[Byte]] =
Read from stdout: ^
        ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala:121: overriding method decode in class BaseN of type (text: String, enc: de.csmath.codec.Codec.Value, size: Long)scala.util.Try[Stream[Byte]];
Read from stdout: method decode needs `override' modifier
/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala:121: overriding method decode in class BaseN of type (text: String, enc: de.csmath.codec.Codec.Value, size: Long)scala.util.Try[Stream[Byte]];
 method decode needs `override' modifier
Read from stdout: def decode(text: String, enc: Codec.Value, size: Long): Try[Stream[Byte]] =
    def decode(text: String, enc: Codec.Value, size: Long): Try[Stream[Byte]] =
Read from stdout: ^
        ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala:137: overriding method decodeToString in class BaseN of type (data: Traversable[Byte], enc: de.csmath.codec.Codec.Value, size: Long)scala.util.Try[String];
Read from stdout: method decodeToString needs `override' modifier
/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala:137: overriding method decodeToString in class BaseN of type (data: Traversable[Byte], enc: de.csmath.codec.Codec.Value, size: Long)scala.util.Try[String];
 method decodeToString needs `override' modifier
Read from stdout: def decodeToString(data: Traversable[Byte], enc: Codec.Value, size: Long): Try[String] =
    def decodeToString(data: Traversable[Byte], enc: Codec.Value, size: Long): Try[String] =
Read from stdout: ^
        ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala:152: overriding method decodeToString in class BaseN of type (text: String, enc: de.csmath.codec.Codec.Value, size: Long)scala.util.Try[String];
Read from stdout: method decodeToString needs `override' modifier
/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala:152: overriding method decodeToString in class BaseN of type (text: String, enc: de.csmath.codec.Codec.Value, size: Long)scala.util.Try[String];
 method decodeToString needs `override' modifier
Read from stdout: def decodeToString(text: String, enc: Codec.Value, size: Long): Try[String] =
    def decodeToString(text: String, enc: Codec.Value, size: Long): Try[String] =
Read from stdout: ^
        ^
Read from stdout: 6 errors found
6 errors found
Compilation failed (CompilerInterface)
Read from stdout: (compile:compileIncremental) Compilation failed
(compile:compileIncremental) Compilation failed
Total time: 1 s, completed 31.05.2016 14:57:52
> server-post-command-error-handler
> server-post-command-cleanup
> server-handle-next-server-request
> compile
Evaluating tasks: compile:compile
Running task... Cancel: sbt.server.ServerTaskCancellation@1558bc38, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala)
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala)

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala)

Read from stdout: Compiling 1 Scala source to /Users/lpfeiler/develop/github/base64/target/scala-2.11/classes...
Compiling 1 Scala source to /Users/lpfeiler/develop/github/base64/target/scala-2.11/classes...
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Running cached compiler 76248251, interfacing (CompilerInterface) with Scala compiler version 2.11.7
Calling Scala compiler with arguments  (CompilerInterface):
	-bootclasspath
	/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/classes:/Users/lpfeiler/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.11.7.jar
	-classpath
	/Users/lpfeiler/develop/github/base64/target/scala-2.11/classes
Scala compilation took 0.647554902 s
Invalidating /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala...
Invalidating (transitively) by inheritance from /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala...
Initial set of included nodes: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala)
Invalidated by transitive inheritance dependency: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala)
The /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala source file has the following regular definitions changed:
	encode, decoder, decode, encodeToString, encoder, decodeToString, Base64.
All member reference dependencies will be considered within this context.
New invalidations:
	Set()
Initial set of included nodes: Set()
Previously invalidated, but (transitively) depend on new invalidations:
	Set()
All newly invalidated sources after taking into account (previously) recompiled sources:Set()
Total time: 1 s, completed 31.05.2016 14:59:41
> server-post-command-cleanup
> server-handle-next-server-request
> test
Evaluating tasks: test:test
Running task... Cancel: sbt.server.ServerTaskCancellation@2cb2b277, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set()
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set()

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set()

Copy resource mappings: 
	
The de.csmath.codec.Base16$ source file has the following regular definitions changed:
	base16Enc.
All member reference dependencies will be considered within this context.
Files invalidated by inheriting from (external) de.csmath.codec.Base16$: Set(); now invalidating by inheritance (internally).
Getting direct dependencies of all sources transitively invalidated by inheritance.
Getting sources that directly depend on (external) de.csmath.codec.Base16$.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/test/scala/Base16Spec.scala. This dependency is not being considered for invalidation.
The de.csmath.codec.Base32$ source file has the following regular definitions changed:
	encode$default$2, encode.
All member reference dependencies will be considered within this context.
Files invalidated by inheriting from (external) de.csmath.codec.Base32$: Set(); now invalidating by inheritance (internally).
Getting direct dependencies of all sources transitively invalidated by inheritance.
Getting sources that directly depend on (external) de.csmath.codec.Base32$.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/test/scala/Base32Spec.scala. This dependency is not being considered for invalidation.
The de.csmath.codec.Base64$ source file has the following regular definitions changed:
	encode, decoder, decode, encodeToString, encoder, decodeToString, Base64.
All member reference dependencies will be considered within this context.
Files invalidated by inheriting from (external) de.csmath.codec.Base64$: Set(); now invalidating by inheritance (internally).
Getting direct dependencies of all sources transitively invalidated by inheritance.
Getting sources that directly depend on (external) de.csmath.codec.Base64$.
The following modified names cause invalidation of /Users/lpfeiler/develop/github/base64/src/test/scala/Base64Spec.scala: Set(decode, encodeToString, decodeToString, Base64)

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set()
Removed products: Set()
External API changes: API Changes: Set(NamesChange(de.csmath.codec.Base16$,ModifiedNames(regularNames = base16Enc, implicitNames = )), NamesChange(de.csmath.codec.Base32$,ModifiedNames(regularNames = encode$default$2, encode, implicitNames = )), NamesChange(de.csmath.codec.Base64$,ModifiedNames(regularNames = encode, decoder, decode, encodeToString, encoder, decodeToString, Base64, implicitNames = )))
Modified binary dependencies: Set()
Initial directly invalidated sources: Set()

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/Base64Spec.scala)
All initially invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/Base64Spec.scala)

Read from stdout: Compiling 1 Scala source to /Users/lpfeiler/develop/github/base64/target/scala-2.11/test-classes...
Compiling 1 Scala source to /Users/lpfeiler/develop/github/base64/target/scala-2.11/test-classes...
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Running cached compiler 88d4143, interfacing (CompilerInterface) with Scala compiler version 2.11.7
Calling Scala compiler with arguments  (CompilerInterface):
	-bootclasspath
	/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/classes:/Users/lpfeiler/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.11.7.jar
	-classpath
	/Users/lpfeiler/develop/github/base64/target/scala-2.11/test-classes:/Users/lpfeiler/develop/github/base64/target/scala-2.11/classes:/Users/lpfeiler/develop/scala/activator-dist-1.3.6/repository/org.scalatest/scalatest_2.11/2.2.4/bundles/scalatest_2.11.jar:/Users/lpfeiler/develop/scala/activator-dist-1.3.6/repository/org.scala-lang/scala-reflect/2.11.2/jars/scala-reflect.jar:/Users/lpfeiler/develop/scala/activator-dist-1.3.6/repository/org.scala-lang.modules/scala-xml_2.11/1.0.2/bundles/scala-xml_2.11.jar
Scala compilation took 2.28919285 s
New invalidations:
	Set()
Initial set of included nodes: Set()
Previously invalidated, but (transitively) depend on new invalidations:
	Set()
All newly invalidated sources after taking into account (previously) recompiled sources:Set()
Copy resource mappings: 
	
Framework implementation 'org.scalacheck.ScalaCheckFramework' not present.
Framework implementation 'org.specs2.runner.Specs2Framework' not present.
Framework implementation 'org.specs2.runner.SpecsFramework' not present.
Framework implementation 'org.specs.runner.SpecsFramework' not present.
Framework implementation 'com.novocode.junit.JUnitFramework' not present.
Subclass fingerprints: List((org.scalatest.Suite,false,org.scalatest.tools.Framework$$anon$1@68a55d19))
Annotation fingerprints: List((org.scalatest.WrapWith,false,org.scalatest.tools.Framework$$anon$2@7f97bc25))
Running TaskDef(StreamCodecSpec, org.scalatest.tools.Framework$$anon$1@68a55d19, false, [SuiteSelector])
Running TaskDef(Base32Spec, org.scalatest.tools.Framework$$anon$1@68a55d19, false, [SuiteSelector])
Running TaskDef(Base64Spec, org.scalatest.tools.Framework$$anon$1@68a55d19, false, [SuiteSelector])
Running TaskDef(Base16Spec, org.scalatest.tools.Framework$$anon$1@68a55d19, false, [SuiteSelector])
Read from stdout: Base16Spec:
Read from stdout: Base16
Read from stdout: - should encode to BASE16
[32mBase16Spec:[0m
[32mBase16[0m
[32m- should encode to BASE16[0m
Read from stdout: StreamCodecSpec:
Read from stdout: StreamCodec
Read from stdout: - should create a ByteStream
Read from stdout: StreamCodec
Read from stdout: - should create a IntStream
Read from stdout: StreamCodec
Read from stdout: - should create a groupStream
Read from stdout: StreamCodec
Read from stdout: - should create a filledStream
Read from stdout: StreamCodec
Read from stdout: - should flatten a filledStream
[32mStreamCodecSpec:[0m
[32mStreamCodec[0m
[32m- should create a ByteStream[0m
[32mStreamCodec[0m
[32m- should create a IntStream[0m
[32mStreamCodec[0m
[32m- should create a groupStream[0m
[32mStreamCodec[0m
[32m- should create a filledStream[0m
[32mStreamCodec[0m
[32m- should flatten a filledStream[0m
Running TaskDef(StreamDecoderSpec, org.scalatest.tools.Framework$$anon$1@68a55d19, false, [SuiteSelector])
Read from stdout: StreamDecoderSpec:
Read from stdout: StreamDecoder
Read from stdout: - should check allowed bytes
[32mStreamDecoderSpec:[0m
[32mStreamDecoder[0m
[32m- should check allowed bytes[0m
Read from stdout: Base32Spec:
Read from stdout: Base32
Read from stdout: - should encode to BASE32
Read from stdout: Base32
Read from stdout: - should encode to BASE32NOPAD
Read from stdout: Base32
Read from stdout: - should encode to BASE32URL
Read from stdout: Base32
Read from stdout: - should encode to BASE32HEX
Read from stdout: Base32
Read from stdout: - should encode to BASE32HEXNOPAD
Read from stdout: Base32
Read from stdout: - should encode to BASE32HEXURL
Read from stdout: Base32
Read from stdout: - should decode from BASE32
Read from stdout: Base32
Read from stdout: - should decode from BASE32 w/o padding
[32mBase32Spec:[0m
[32mBase32[0m
[32m- should encode to BASE32[0m
[32mBase32[0m
[32m- should encode to BASE32NOPAD[0m
[32mBase32[0m
[32m- should encode to BASE32URL[0m
[32mBase32[0m
[32m- should encode to BASE32HEX[0m
[32mBase32[0m
[32m- should encode to BASE32HEXNOPAD[0m
[32mBase32[0m
[32m- should encode to BASE32HEXURL[0m
[32mBase32[0m
[32m- should decode from BASE32[0m
[32mBase32[0m
[32m- should decode from BASE32 w/o padding[0m
Read from stdout: Base64Spec:
Read from stdout: Base64
Read from stdout: - should encode to BASE64
Read from stdout: Base64
Read from stdout: - should encode to BASE64FILE
Read from stdout: Base64
Read from stdout: - should encode to BASE64URL
Read from stdout: Base64
Read from stdout: - should encode to BASE64NOPAD
Read from stdout: Base64
Read from stdout: - should encode to BASE64FILENOPAD
Read from stdout: Base64
Read from stdout: - should encode to BASE64URLNOPAD
Read from stdout: Base64
Read from stdout: - should decode from BASE64
Read from stdout: Base64
Read from stdout: - should decode from BASE64 w/o padding
Read from stdout: Base64
Read from stdout: - should fail with crap
Read from stdout: Base64
Read from stdout: - should decode from BASE64FILE
Read from stdout: Base64
Read from stdout: - should decode from BASE64FILE w/o padding
Read from stdout: Base64
Read from stdout: - should decode from BASE64URL
[32mBase64Spec:[0m
[32mBase64[0m
[32m- should encode to BASE64[0m
[32mBase64[0m
[32m- should encode to BASE64FILE[0m
[32mBase64[0m
[32m- should encode to BASE64URL[0m
[32mBase64[0m
[32m- should encode to BASE64NOPAD[0m
[32mBase64[0m
[32m- should encode to BASE64FILENOPAD[0m
[32mBase64[0m
[32m- should encode to BASE64URLNOPAD[0m
[32mBase64[0m
[32m- should decode from BASE64[0m
[32mBase64[0m
[32m- should decode from BASE64 w/o padding[0m
[32mBase64[0m
[32m- should fail with crap[0m
[32mBase64[0m
[32m- should decode from BASE64FILE[0m
[32mBase64[0m
[32m- should decode from BASE64FILE w/o padding[0m
[32mBase64[0m
[32m- should decode from BASE64URL[0m
Read from stdout: Run completed in 462 milliseconds.
Read from stdout: Total number of tests run: 27
Read from stdout: Suites: completed 5, aborted 0
Read from stdout: Tests: succeeded 27, failed 0, canceled 0, ignored 0, pending 0
Read from stdout: All tests passed.
Run completed in 462 milliseconds.
Total number of tests run: 27
Suites: completed 5, aborted 0
Tests: succeeded 27, failed 0, canceled 0, ignored 0, pending 0
All tests passed.
Passed tests:
	StreamCodecSpec
	Base64Spec
	StreamDecoderSpec
	Base32Spec
	Base16Spec
Total time: 3 s, completed 31.05.2016 14:59:44
> server-post-command-cleanup
> server-handle-next-server-request
> compile
Evaluating tasks: compile:compile
Running task... Cancel: sbt.server.ServerTaskCancellation@38282493, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala)
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala)

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala)

Read from stdout: Compiling 1 Scala source to /Users/lpfeiler/develop/github/base64/target/scala-2.11/classes...
Compiling 1 Scala source to /Users/lpfeiler/develop/github/base64/target/scala-2.11/classes...
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Running cached compiler 204c8221, interfacing (CompilerInterface) with Scala compiler version 2.11.7
Calling Scala compiler with arguments  (CompilerInterface):
	-bootclasspath
	/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/classes:/Users/lpfeiler/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.11.7.jar
	-classpath
	/Users/lpfeiler/develop/github/base64/target/scala-2.11/classes
Read from stdout: /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala:36: overriding method decode in class BaseN of type (data: Traversable[Byte], enc: de.csmath.codec.Codec.Value)scala.util.Try[Stream[Byte]];
Read from stdout: method decode needs `override' modifier
/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala:36: overriding method decode in class BaseN of type (data: Traversable[Byte], enc: de.csmath.codec.Codec.Value)scala.util.Try[Stream[Byte]];
 method decode needs `override' modifier
Read from stdout: def decode(data: Traversable[Byte], enc: Codec.Value): Try[Stream[Byte]] =
    def decode(data: Traversable[Byte], enc: Codec.Value): Try[Stream[Byte]] =
Read from stdout: ^
        ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala:39: overriding method decode in class BaseN of type (text: String, enc: de.csmath.codec.Codec.Value)scala.util.Try[Stream[Byte]];
Read from stdout: method decode needs `override' modifier
/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala:39: overriding method decode in class BaseN of type (text: String, enc: de.csmath.codec.Codec.Value)scala.util.Try[Stream[Byte]];
 method decode needs `override' modifier
Read from stdout: def decode(data: String, enc: Codec.Value): Try[Stream[Byte]] =
    def decode(data: String, enc: Codec.Value): Try[Stream[Byte]] =
Read from stdout: ^
        ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala:42: overriding method decodeToString in class BaseN of type (data: Traversable[Byte], enc: de.csmath.codec.Codec.Value)scala.util.Try[String];
Read from stdout: method decodeToString needs `override' modifier
/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala:42: overriding method decodeToString in class BaseN of type (data: Traversable[Byte], enc: de.csmath.codec.Codec.Value)scala.util.Try[String];
 method decodeToString needs `override' modifier
Read from stdout: def decodeToString(data: Traversable[Byte], enc: Codec.Value): Try[String] =
    def decodeToString(data: Traversable[Byte], enc: Codec.Value): Try[String] =
Read from stdout: ^
        ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala:45: overriding method decodeToString in class BaseN of type (text: String, enc: de.csmath.codec.Codec.Value)scala.util.Try[String];
Read from stdout: method decodeToString needs `override' modifier
/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala:45: overriding method decodeToString in class BaseN of type (text: String, enc: de.csmath.codec.Codec.Value)scala.util.Try[String];
 method decodeToString needs `override' modifier
Read from stdout: def decodeToString(data: String, enc: Codec.Value): Try[String] =
    def decodeToString(data: String, enc: Codec.Value): Try[String] =
Read from stdout: ^
        ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala:48: overriding method decode in class BaseN of type (data: Traversable[Byte], enc: de.csmath.codec.Codec.Value, size: Long)scala.util.Try[Stream[Byte]];
Read from stdout: method decode needs `override' modifier
/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala:48: overriding method decode in class BaseN of type (data: Traversable[Byte], enc: de.csmath.codec.Codec.Value, size: Long)scala.util.Try[Stream[Byte]];
 method decode needs `override' modifier
Read from stdout: def decode(data: Traversable[Byte], enc: Codec.Value, size: Long): Try[Stream[Byte]] =
    def decode(data: Traversable[Byte], enc: Codec.Value, size: Long): Try[Stream[Byte]] =
Read from stdout: ^
        ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala:51: overriding method decode in class BaseN of type (text: String, enc: de.csmath.codec.Codec.Value, size: Long)scala.util.Try[Stream[Byte]];
Read from stdout: method decode needs `override' modifier
/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala:51: overriding method decode in class BaseN of type (text: String, enc: de.csmath.codec.Codec.Value, size: Long)scala.util.Try[Stream[Byte]];
 method decode needs `override' modifier
Read from stdout: def decode(data: String, enc: Codec.Value, size: Long): Try[Stream[Byte]] =
    def decode(data: String, enc: Codec.Value, size: Long): Try[Stream[Byte]] =
Read from stdout: ^
        ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala:55: overriding method decodeToString in class BaseN of type (data: Traversable[Byte], enc: de.csmath.codec.Codec.Value, size: Long)scala.util.Try[String];
Read from stdout: method decodeToString needs `override' modifier
/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala:55: overriding method decodeToString in class BaseN of type (data: Traversable[Byte], enc: de.csmath.codec.Codec.Value, size: Long)scala.util.Try[String];
 method decodeToString needs `override' modifier
Read from stdout: def decodeToString(data: Traversable[Byte], enc: Codec.Value, size: Long): Try[String] =
    def decodeToString(data: Traversable[Byte], enc: Codec.Value, size: Long): Try[String] =
Read from stdout: ^
        ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala:58: overriding method decodeToString in class BaseN of type (text: String, enc: de.csmath.codec.Codec.Value, size: Long)scala.util.Try[String];
Read from stdout: method decodeToString needs `override' modifier
/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala:58: overriding method decodeToString in class BaseN of type (text: String, enc: de.csmath.codec.Codec.Value, size: Long)scala.util.Try[String];
 method decodeToString needs `override' modifier
Read from stdout: def decodeToString(data: String, enc: Codec.Value, size: Long): Try[String] =
    def decodeToString(data: String, enc: Codec.Value, size: Long): Try[String] =
Read from stdout: ^
        ^
Read from stdout: 8 errors found
8 errors found
Compilation failed (CompilerInterface)
Read from stdout: (compile:compileIncremental) Compilation failed
(compile:compileIncremental) Compilation failed
Total time: 1 s, completed 31.05.2016 15:02:28
> server-post-command-error-handler
> server-post-command-cleanup
> server-handle-next-server-request
> compile
Evaluating tasks: compile:compile
Running task... Cancel: sbt.server.ServerTaskCancellation@20b1b512, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala)
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala)

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala)

Read from stdout: Compiling 1 Scala source to /Users/lpfeiler/develop/github/base64/target/scala-2.11/classes...
Compiling 1 Scala source to /Users/lpfeiler/develop/github/base64/target/scala-2.11/classes...
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Running cached compiler 3f10fed6, interfacing (CompilerInterface) with Scala compiler version 2.11.7
Calling Scala compiler with arguments  (CompilerInterface):
	-bootclasspath
	/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/classes:/Users/lpfeiler/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.11.7.jar
	-classpath
	/Users/lpfeiler/develop/github/base64/target/scala-2.11/classes
Read from stdout: /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala:11: in object Base32, multiple overloaded alternatives of method decodeToString define default arguments.
/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala:11: in object Base32, multiple overloaded alternatives of method decodeToString define default arguments.
Read from stdout: object Base32 extends BaseN {
object Base32 extends BaseN {
Read from stdout: ^
       ^
Read from stdout: one error found
one error found
Compilation failed (CompilerInterface)
Read from stdout: (compile:compileIncremental) Compilation failed
(compile:compileIncremental) Compilation failed
Total time: 0 s, completed 31.05.2016 15:04:12
> server-post-command-error-handler
> server-post-command-cleanup
> server-handle-next-server-request
> compile
Evaluating tasks: compile:compile
Running task... Cancel: sbt.server.ServerTaskCancellation@29876d40, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala)
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala)

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala)

Read from stdout: Compiling 1 Scala source to /Users/lpfeiler/develop/github/base64/target/scala-2.11/classes...
Compiling 1 Scala source to /Users/lpfeiler/develop/github/base64/target/scala-2.11/classes...
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Running cached compiler 2a7d34d0, interfacing (CompilerInterface) with Scala compiler version 2.11.7
Calling Scala compiler with arguments  (CompilerInterface):
	-bootclasspath
	/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/classes:/Users/lpfeiler/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.11.7.jar
	-classpath
	/Users/lpfeiler/develop/github/base64/target/scala-2.11/classes
Scala compilation took 0.627725524 s
Invalidating /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala...
Invalidating (transitively) by inheritance from /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala...
Initial set of included nodes: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala)
Invalidated by transitive inheritance dependency: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala)
The /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala source file has the following regular definitions changed:
	encode, decoder, decodeToString$default$2, decode$default$2, decode, encodeToString, encoder, decodeToString, Base32.
All member reference dependencies will be considered within this context.
New invalidations:
	Set()
Initial set of included nodes: Set()
Previously invalidated, but (transitively) depend on new invalidations:
	Set()
All newly invalidated sources after taking into account (previously) recompiled sources:Set()
Total time: 1 s, completed 31.05.2016 15:05:07
> server-post-command-cleanup
> server-handle-next-server-request
> test
Evaluating tasks: test:test
Running task... Cancel: sbt.server.ServerTaskCancellation@1e64acd1, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set()
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set()

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set()

Copy resource mappings: 
	
The de.csmath.codec.Base16$ source file has the following regular definitions changed:
	base16Enc.
All member reference dependencies will be considered within this context.
Files invalidated by inheriting from (external) de.csmath.codec.Base16$: Set(); now invalidating by inheritance (internally).
Getting direct dependencies of all sources transitively invalidated by inheritance.
Getting sources that directly depend on (external) de.csmath.codec.Base16$.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/test/scala/Base16Spec.scala. This dependency is not being considered for invalidation.
The de.csmath.codec.Base32$ source file has the following regular definitions changed:
	encode, decoder, decodeToString$default$2, decode$default$2, decode, encodeToString, encoder, decodeToString, encode$default$2, Base32.
All member reference dependencies will be considered within this context.
Files invalidated by inheriting from (external) de.csmath.codec.Base32$: Set(); now invalidating by inheritance (internally).
Getting direct dependencies of all sources transitively invalidated by inheritance.
Getting sources that directly depend on (external) de.csmath.codec.Base32$.
The following modified names cause invalidation of /Users/lpfeiler/develop/github/base64/src/test/scala/Base32Spec.scala: Set(encodeToString, decodeToString, Base32)

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set()
Removed products: Set()
External API changes: API Changes: Set(NamesChange(de.csmath.codec.Base16$,ModifiedNames(regularNames = base16Enc, implicitNames = )), NamesChange(de.csmath.codec.Base32$,ModifiedNames(regularNames = encode, decoder, decodeToString$default$2, decode$default$2, decode, encodeToString, encoder, decodeToString, encode$default$2, Base32, implicitNames = )))
Modified binary dependencies: Set()
Initial directly invalidated sources: Set()

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/Base32Spec.scala)
All initially invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/Base32Spec.scala)

Read from stdout: Compiling 1 Scala source to /Users/lpfeiler/develop/github/base64/target/scala-2.11/test-classes...
Compiling 1 Scala source to /Users/lpfeiler/develop/github/base64/target/scala-2.11/test-classes...
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Running cached compiler 79b9c3b, interfacing (CompilerInterface) with Scala compiler version 2.11.7
Calling Scala compiler with arguments  (CompilerInterface):
	-bootclasspath
	/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/classes:/Users/lpfeiler/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.11.7.jar
	-classpath
	/Users/lpfeiler/develop/github/base64/target/scala-2.11/test-classes:/Users/lpfeiler/develop/github/base64/target/scala-2.11/classes:/Users/lpfeiler/develop/scala/activator-dist-1.3.6/repository/org.scalatest/scalatest_2.11/2.2.4/bundles/scalatest_2.11.jar:/Users/lpfeiler/develop/scala/activator-dist-1.3.6/repository/org.scala-lang/scala-reflect/2.11.2/jars/scala-reflect.jar:/Users/lpfeiler/develop/scala/activator-dist-1.3.6/repository/org.scala-lang.modules/scala-xml_2.11/1.0.2/bundles/scala-xml_2.11.jar
Scala compilation took 2.002959271 s
New invalidations:
	Set()
Initial set of included nodes: Set()
Previously invalidated, but (transitively) depend on new invalidations:
	Set()
All newly invalidated sources after taking into account (previously) recompiled sources:Set()
Copy resource mappings: 
	
Framework implementation 'org.scalacheck.ScalaCheckFramework' not present.
Framework implementation 'org.specs2.runner.Specs2Framework' not present.
Framework implementation 'org.specs2.runner.SpecsFramework' not present.
Framework implementation 'org.specs.runner.SpecsFramework' not present.
Framework implementation 'com.novocode.junit.JUnitFramework' not present.
Subclass fingerprints: List((org.scalatest.Suite,false,org.scalatest.tools.Framework$$anon$1@62855c61))
Annotation fingerprints: List((org.scalatest.WrapWith,false,org.scalatest.tools.Framework$$anon$2@4e30e3d2))
Running TaskDef(Base64Spec, org.scalatest.tools.Framework$$anon$1@62855c61, false, [SuiteSelector])
Running TaskDef(Base32Spec, org.scalatest.tools.Framework$$anon$1@62855c61, false, [SuiteSelector])
Running TaskDef(StreamCodecSpec, org.scalatest.tools.Framework$$anon$1@62855c61, false, [SuiteSelector])
Running TaskDef(StreamDecoderSpec, org.scalatest.tools.Framework$$anon$1@62855c61, false, [SuiteSelector])
Read from stdout: StreamDecoderSpec:
Read from stdout: StreamDecoder
Read from stdout: - should check allowed bytes
[32mStreamDecoderSpec:[0m
[32mStreamDecoder[0m
[32m- should check allowed bytes[0m
Read from stdout: StreamCodecSpec:
Read from stdout: StreamCodec
Read from stdout: - should create a ByteStream
Read from stdout: StreamCodec
Read from stdout: - should create a IntStream
Read from stdout: StreamCodec
Read from stdout: - should create a groupStream
Running TaskDef(Base16Spec, org.scalatest.tools.Framework$$anon$1@62855c61, false, [SuiteSelector])
Read from stdout: StreamCodec
Read from stdout: - should create a filledStream
Read from stdout: StreamCodec
Read from stdout: - should flatten a filledStream
[32mStreamCodecSpec:[0m
[32mStreamCodec[0m
[32m- should create a ByteStream[0m
[32mStreamCodec[0m
[32m- should create a IntStream[0m
[32mStreamCodec[0m
[32m- should create a groupStream[0m
[32mStreamCodec[0m
[32m- should create a filledStream[0m
[32mStreamCodec[0m
[32m- should flatten a filledStream[0m
Read from stdout: Base16Spec:
Read from stdout: Base16
Read from stdout: - should encode to BASE16
[32mBase16Spec:[0m
[32mBase16[0m
[32m- should encode to BASE16[0m
Read from stdout: Base32Spec:
Read from stdout: Base32
Read from stdout: - should encode to BASE32
Read from stdout: Base32
Read from stdout: - should encode to BASE32NOPAD
Read from stdout: Base32
Read from stdout: - should encode to BASE32URL
Read from stdout: Base32
Read from stdout: - should encode to BASE32HEX
Read from stdout: Base32
Read from stdout: - should encode to BASE32HEXNOPAD
Read from stdout: Base32
Read from stdout: - should encode to BASE32HEXURL
Read from stdout: Base32
Read from stdout: - should decode from BASE32
Read from stdout: Base32
Read from stdout: - should decode from BASE32 w/o padding
[32mBase32Spec:[0m
[32mBase32[0m
[32m- should encode to BASE32[0m
[32mBase32[0m
[32m- should encode to BASE32NOPAD[0m
[32mBase32[0m
[32m- should encode to BASE32URL[0m
[32mBase32[0m
[32m- should encode to BASE32HEX[0m
[32mBase32[0m
[32m- should encode to BASE32HEXNOPAD[0m
[32mBase32[0m
[32m- should encode to BASE32HEXURL[0m
[32mBase32[0m
[32m- should decode from BASE32[0m
[32mBase32[0m
[32m- should decode from BASE32 w/o padding[0m
Read from stdout: Base64Spec:
Read from stdout: Base64
Read from stdout: - should encode to BASE64
Read from stdout: Base64
Read from stdout: - should encode to BASE64FILE
Read from stdout: Base64
Read from stdout: - should encode to BASE64URL
Read from stdout: Base64
Read from stdout: - should encode to BASE64NOPAD
Read from stdout: Base64
Read from stdout: - should encode to BASE64FILENOPAD
Read from stdout: Base64
Read from stdout: - should encode to BASE64URLNOPAD
Read from stdout: Base64
Read from stdout: - should decode from BASE64
Read from stdout: Base64
Read from stdout: - should decode from BASE64 w/o padding
Read from stdout: Base64
Read from stdout: - should fail with crap
Read from stdout: Base64
Read from stdout: - should decode from BASE64FILE
Read from stdout: Base64
Read from stdout: - should decode from BASE64FILE w/o padding
Read from stdout: Base64
Read from stdout: - should decode from BASE64URL
[32mBase64Spec:[0m
[32mBase64[0m
[32m- should encode to BASE64[0m
[32mBase64[0m
[32m- should encode to BASE64FILE[0m
[32mBase64[0m
[32m- should encode to BASE64URL[0m
[32mBase64[0m
[32m- should encode to BASE64NOPAD[0m
[32mBase64[0m
[32m- should encode to BASE64FILENOPAD[0m
[32mBase64[0m
[32m- should encode to BASE64URLNOPAD[0m
[32mBase64[0m
[32m- should decode from BASE64[0m
[32mBase64[0m
[32m- should decode from BASE64 w/o padding[0m
[32mBase64[0m
[32m- should fail with crap[0m
[32mBase64[0m
[32m- should decode from BASE64FILE[0m
[32mBase64[0m
[32m- should decode from BASE64FILE w/o padding[0m
[32mBase64[0m
[32m- should decode from BASE64URL[0m
Read from stdout: Run completed in 668 milliseconds.
Read from stdout: Total number of tests run: 27
Read from stdout: Suites: completed 5, aborted 0
Read from stdout: Tests: succeeded 27, failed 0, canceled 0, ignored 0, pending 0
Read from stdout: All tests passed.
Run completed in 668 milliseconds.
Total number of tests run: 27
Suites: completed 5, aborted 0
Tests: succeeded 27, failed 0, canceled 0, ignored 0, pending 0
All tests passed.
Passed tests:
	StreamCodecSpec
	Base64Spec
	StreamDecoderSpec
	Base32Spec
	Base16Spec
Total time: 3 s, completed 31.05.2016 15:05:10
> server-post-command-cleanup
> server-handle-next-server-request
> compile
Evaluating tasks: compile:compile
Running task... Cancel: sbt.server.ServerTaskCancellation@5e6d83e3, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala)
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala)

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala)

Read from stdout: Compiling 1 Scala source to /Users/lpfeiler/develop/github/base64/target/scala-2.11/classes...
Compiling 1 Scala source to /Users/lpfeiler/develop/github/base64/target/scala-2.11/classes...
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Running cached compiler 7c7a8051, interfacing (CompilerInterface) with Scala compiler version 2.11.7
Calling Scala compiler with arguments  (CompilerInterface):
	-bootclasspath
	/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/classes:/Users/lpfeiler/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.11.7.jar
	-classpath
	/Users/lpfeiler/develop/github/base64/target/scala-2.11/classes
Scala compilation took 0.519225621 s
New invalidations:
	Set()
Initial set of included nodes: Set()
Previously invalidated, but (transitively) depend on new invalidations:
	Set()
All newly invalidated sources after taking into account (previously) recompiled sources:Set()
Total time: 1 s, completed 31.05.2016 15:06:07
> server-post-command-cleanup
> server-handle-next-server-request
> test
Evaluating tasks: test:test
Running task... Cancel: sbt.server.ServerTaskCancellation@321374bf, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set()
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set()

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set()

Copy resource mappings: 
	
The de.csmath.codec.Base16$ source file has the following regular definitions changed:
	base16Enc.
All member reference dependencies will be considered within this context.
Files invalidated by inheriting from (external) de.csmath.codec.Base16$: Set(); now invalidating by inheritance (internally).
Getting direct dependencies of all sources transitively invalidated by inheritance.
Getting sources that directly depend on (external) de.csmath.codec.Base16$.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/test/scala/Base16Spec.scala. This dependency is not being considered for invalidation.

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set()
Removed products: Set()
External API changes: API Changes: Set(NamesChange(de.csmath.codec.Base16$,ModifiedNames(regularNames = base16Enc, implicitNames = )))
Modified binary dependencies: Set()
Initial directly invalidated sources: Set()

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set()

Copy resource mappings: 
	
Framework implementation 'org.scalacheck.ScalaCheckFramework' not present.
Framework implementation 'org.specs2.runner.Specs2Framework' not present.
Framework implementation 'org.specs2.runner.SpecsFramework' not present.
Framework implementation 'org.specs.runner.SpecsFramework' not present.
Framework implementation 'com.novocode.junit.JUnitFramework' not present.
Subclass fingerprints: List((org.scalatest.Suite,false,org.scalatest.tools.Framework$$anon$1@655ca7d9))
Annotation fingerprints: List((org.scalatest.WrapWith,false,org.scalatest.tools.Framework$$anon$2@73a8cb44))
Running TaskDef(StreamCodecSpec, org.scalatest.tools.Framework$$anon$1@655ca7d9, false, [SuiteSelector])
Running TaskDef(Base16Spec, org.scalatest.tools.Framework$$anon$1@655ca7d9, false, [SuiteSelector])
Running TaskDef(StreamDecoderSpec, org.scalatest.tools.Framework$$anon$1@655ca7d9, false, [SuiteSelector])
Running TaskDef(Base64Spec, org.scalatest.tools.Framework$$anon$1@655ca7d9, false, [SuiteSelector])
Read from stdout: StreamDecoderSpec:
Read from stdout: StreamDecoder
Read from stdout: - should check allowed bytes
[32mStreamDecoderSpec:[0m
[32mStreamDecoder[0m
[32m- should check allowed bytes[0m
Running TaskDef(Base32Spec, org.scalatest.tools.Framework$$anon$1@655ca7d9, false, [SuiteSelector])
Read from stdout: StreamCodecSpec:
Read from stdout: StreamCodec
Read from stdout: - should create a ByteStream
Read from stdout: StreamCodec
Read from stdout: - should create a IntStream
Read from stdout: StreamCodec
Read from stdout: - should create a groupStream
Read from stdout: StreamCodec
Read from stdout: - should create a filledStream
Read from stdout: StreamCodec
Read from stdout: - should flatten a filledStream
[32mStreamCodecSpec:[0m
[32mStreamCodec[0m
[32m- should create a ByteStream[0m
[32mStreamCodec[0m
[32m- should create a IntStream[0m
[32mStreamCodec[0m
[32m- should create a groupStream[0m
[32mStreamCodec[0m
[32m- should create a filledStream[0m
[32mStreamCodec[0m
[32m- should flatten a filledStream[0m
Read from stdout: Base16Spec:
Read from stdout: Base16
Read from stdout: - should encode to BASE16
[32mBase16Spec:[0m
[32mBase16[0m
[32m- should encode to BASE16[0m
Read from stdout: Base32Spec:
Read from stdout: Base32
Read from stdout: - should encode to BASE32
Read from stdout: Base32
Read from stdout: - should encode to BASE32NOPAD
Read from stdout: Base32
Read from stdout: - should encode to BASE32URL
Read from stdout: Base32
Read from stdout: - should encode to BASE32HEX
Read from stdout: Base32
Read from stdout: - should encode to BASE32HEXNOPAD
Read from stdout: Base32
Read from stdout: - should encode to BASE32HEXURL
Read from stdout: Base32
Read from stdout: - should decode from BASE32
Read from stdout: Base32
Read from stdout: - should decode from BASE32 w/o padding
[32mBase32Spec:[0m
[32mBase32[0m
[32m- should encode to BASE32[0m
[32mBase32[0m
[32m- should encode to BASE32NOPAD[0m
[32mBase32[0m
[32m- should encode to BASE32URL[0m
[32mBase32[0m
[32m- should encode to BASE32HEX[0m
[32mBase32[0m
[32m- should encode to BASE32HEXNOPAD[0m
[32mBase32[0m
[32m- should encode to BASE32HEXURL[0m
[32mBase32[0m
[32m- should decode from BASE32[0m
[32mBase32[0m
[32m- should decode from BASE32 w/o padding[0m
Read from stdout: Base64Spec:
Read from stdout: Base64
Read from stdout: - should encode to BASE64
Read from stdout: Base64
Read from stdout: - should encode to BASE64FILE
Read from stdout: Base64
Read from stdout: - should encode to BASE64URL
Read from stdout: Base64
Read from stdout: - should encode to BASE64NOPAD
Read from stdout: Base64
Read from stdout: - should encode to BASE64FILENOPAD
Read from stdout: Base64
Read from stdout: - should encode to BASE64URLNOPAD
Read from stdout: Base64
Read from stdout: - should decode from BASE64
Read from stdout: Base64
Read from stdout: - should decode from BASE64 w/o padding
Read from stdout: Base64
Read from stdout: - should fail with crap
Read from stdout: Base64
Read from stdout: - should decode from BASE64FILE
Read from stdout: Base64
Read from stdout: - should decode from BASE64FILE w/o padding
Read from stdout: Base64
Read from stdout: - should decode from BASE64URL
[32mBase64Spec:[0m
[32mBase64[0m
[32m- should encode to BASE64[0m
[32mBase64[0m
[32m- should encode to BASE64FILE[0m
[32mBase64[0m
[32m- should encode to BASE64URL[0m
[32mBase64[0m
[32m- should encode to BASE64NOPAD[0m
[32mBase64[0m
[32m- should encode to BASE64FILENOPAD[0m
[32mBase64[0m
[32m- should encode to BASE64URLNOPAD[0m
[32mBase64[0m
[32m- should decode from BASE64[0m
[32mBase64[0m
[32m- should decode from BASE64 w/o padding[0m
[32mBase64[0m
[32m- should fail with crap[0m
[32mBase64[0m
[32m- should decode from BASE64FILE[0m
[32mBase64[0m
[32m- should decode from BASE64FILE w/o padding[0m
[32mBase64[0m
[32m- should decode from BASE64URL[0m
Read from stdout: Run completed in 480 milliseconds.
Read from stdout: Total number of tests run: 27
Read from stdout: Suites: completed 5, aborted 0
Read from stdout: Tests: succeeded 27, failed 0, canceled 0, ignored 0, pending 0
Read from stdout: All tests passed.
Run completed in 480 milliseconds.
Total number of tests run: 27
Suites: completed 5, aborted 0
Tests: succeeded 27, failed 0, canceled 0, ignored 0, pending 0
All tests passed.
Passed tests:
	StreamCodecSpec
	Base64Spec
	StreamDecoderSpec
	Base32Spec
	Base16Spec
Total time: 1 s, completed 31.05.2016 15:06:08
> server-post-command-cleanup
> server-handle-next-server-request
> compile
Evaluating tasks: compile:compile
Running task... Cancel: sbt.server.ServerTaskCancellation@742d3586, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala)
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala)

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala)

Read from stdout: Compiling 1 Scala source to /Users/lpfeiler/develop/github/base64/target/scala-2.11/classes...
Compiling 1 Scala source to /Users/lpfeiler/develop/github/base64/target/scala-2.11/classes...
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Running cached compiler 584d7a5b, interfacing (CompilerInterface) with Scala compiler version 2.11.7
Calling Scala compiler with arguments  (CompilerInterface):
	-bootclasspath
	/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/classes:/Users/lpfeiler/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.11.7.jar
	-classpath
	/Users/lpfeiler/develop/github/base64/target/scala-2.11/classes
Scala compilation took 0.429174124 s
New invalidations:
	Set()
Initial set of included nodes: Set()
Previously invalidated, but (transitively) depend on new invalidations:
	Set()
All newly invalidated sources after taking into account (previously) recompiled sources:Set()
Total time: 1 s, completed 31.05.2016 15:07:03
> server-post-command-cleanup
> server-handle-next-server-request
> test
Evaluating tasks: test:test
Running task... Cancel: sbt.server.ServerTaskCancellation@545d2bfe, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set()
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set()

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set()

Copy resource mappings: 
	
The de.csmath.codec.Base16$ source file has the following regular definitions changed:
	base16Enc.
All member reference dependencies will be considered within this context.
Files invalidated by inheriting from (external) de.csmath.codec.Base16$: Set(); now invalidating by inheritance (internally).
Getting direct dependencies of all sources transitively invalidated by inheritance.
Getting sources that directly depend on (external) de.csmath.codec.Base16$.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/test/scala/Base16Spec.scala. This dependency is not being considered for invalidation.

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set()
Removed products: Set()
External API changes: API Changes: Set(NamesChange(de.csmath.codec.Base16$,ModifiedNames(regularNames = base16Enc, implicitNames = )))
Modified binary dependencies: Set()
Initial directly invalidated sources: Set()

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set()

Copy resource mappings: 
	
Framework implementation 'org.scalacheck.ScalaCheckFramework' not present.
Framework implementation 'org.specs2.runner.Specs2Framework' not present.
Framework implementation 'org.specs2.runner.SpecsFramework' not present.
Framework implementation 'org.specs.runner.SpecsFramework' not present.
Framework implementation 'com.novocode.junit.JUnitFramework' not present.
Subclass fingerprints: List((org.scalatest.Suite,false,org.scalatest.tools.Framework$$anon$1@1ddfe668))
Annotation fingerprints: List((org.scalatest.WrapWith,false,org.scalatest.tools.Framework$$anon$2@a76c38b))
Running TaskDef(StreamDecoderSpec, org.scalatest.tools.Framework$$anon$1@1ddfe668, false, [SuiteSelector])
Running TaskDef(Base64Spec, org.scalatest.tools.Framework$$anon$1@1ddfe668, false, [SuiteSelector])
Running TaskDef(Base16Spec, org.scalatest.tools.Framework$$anon$1@1ddfe668, false, [SuiteSelector])
Running TaskDef(StreamCodecSpec, org.scalatest.tools.Framework$$anon$1@1ddfe668, false, [SuiteSelector])
Read from stdout: StreamDecoderSpec:
Read from stdout: StreamDecoder
Read from stdout: - should check allowed bytes
[32mStreamDecoderSpec:[0m
[32mStreamDecoder[0m
[32m- should check allowed bytes[0m
Read from stdout: StreamCodecSpec:
Read from stdout: StreamCodec
Read from stdout: - should create a ByteStream
Read from stdout: StreamCodec
Read from stdout: - should create a IntStream
Read from stdout: StreamCodec
Read from stdout: - should create a groupStream
Read from stdout: StreamCodec
Read from stdout: - should create a filledStream
Read from stdout: StreamCodec
Read from stdout: - should flatten a filledStream
[32mStreamCodecSpec:[0m
[32mStreamCodec[0m
[32m- should create a ByteStream[0m
[32mStreamCodec[0m
[32m- should create a IntStream[0m
[32mStreamCodec[0m
[32m- should create a groupStream[0m
[32mStreamCodec[0m
[32m- should create a filledStream[0m
[32mStreamCodec[0m
[32m- should flatten a filledStream[0m
Read from stdout: Base16Spec:
Read from stdout: Base16
Read from stdout: - should encode to BASE16
[32mBase16Spec:[0m
[32mBase16[0m
[32m- should encode to BASE16[0m
Running TaskDef(Base32Spec, org.scalatest.tools.Framework$$anon$1@1ddfe668, false, [SuiteSelector])
Read from stdout: Base32Spec:
Read from stdout: Base32
Read from stdout: - should encode to BASE32
Read from stdout: Base32
Read from stdout: - should encode to BASE32NOPAD
Read from stdout: Base32
Read from stdout: - should encode to BASE32URL
Read from stdout: Base32
Read from stdout: - should encode to BASE32HEX
Read from stdout: Base32
Read from stdout: - should encode to BASE32HEXNOPAD
Read from stdout: Base32
Read from stdout: - should encode to BASE32HEXURL
Read from stdout: Base32
Read from stdout: - should decode from BASE32
Read from stdout: Base32
Read from stdout: - should decode from BASE32 w/o padding
[32mBase32Spec:[0m
[32mBase32[0m
[32m- should encode to BASE32[0m
[32mBase32[0m
[32m- should encode to BASE32NOPAD[0m
[32mBase32[0m
[32m- should encode to BASE32URL[0m
[32mBase32[0m
[32m- should encode to BASE32HEX[0m
[32mBase32[0m
[32m- should encode to BASE32HEXNOPAD[0m
[32mBase32[0m
Read from stdout: Base64Spec:
Read from stdout: Base64
Read from stdout: - should encode to BASE64
Read from stdout: Base64
Read from stdout: - should encode to BASE64FILE
Read from stdout: Base64
Read from stdout: - should encode to BASE64URL
Read from stdout: Base64
[32m- should encode to BASE32HEXURL[0m
Read from stdout: - should encode to BASE64NOPAD
Read from stdout: Base64
Read from stdout: - should encode to BASE64FILENOPAD
Read from stdout: Base64
Read from stdout: - should encode to BASE64URLNOPAD
Read from stdout: Base64
Read from stdout: - should decode from BASE64
Read from stdout: Base64
[32mBase32[0m
Read from stdout: - should decode from BASE64 w/o padding
Read from stdout: Base64
[32m- should decode from BASE32[0m
Read from stdout: - should fail with crap
Read from stdout: Base64
Read from stdout: - should decode from BASE64FILE
[32mBase32[0m
Read from stdout: Base64
Read from stdout: - should decode from BASE64FILE w/o padding
Read from stdout: Base64
[32m- should decode from BASE32 w/o padding[0m
Read from stdout: - should decode from BASE64URL
[32mBase64Spec:[0m
[32mBase64[0m
[32m- should encode to BASE64[0m
[32mBase64[0m
[32m- should encode to BASE64FILE[0m
[32mBase64[0m
[32m- should encode to BASE64URL[0m
[32mBase64[0m
[32m- should encode to BASE64NOPAD[0m
[32mBase64[0m
[32m- should encode to BASE64FILENOPAD[0m
[32mBase64[0m
[32m- should encode to BASE64URLNOPAD[0m
[32mBase64[0m
[32m- should decode from BASE64[0m
[32mBase64[0m
[32m- should decode from BASE64 w/o padding[0m
[32mBase64[0m
[32m- should fail with crap[0m
[32mBase64[0m
[32m- should decode from BASE64FILE[0m
[32mBase64[0m
[32m- should decode from BASE64FILE w/o padding[0m
[32mBase64[0m
[32m- should decode from BASE64URL[0m
Read from stdout: Run completed in 514 milliseconds.
Read from stdout: Total number of tests run: 27
Read from stdout: Suites: completed 5, aborted 0
Read from stdout: Tests: succeeded 27, failed 0, canceled 0, ignored 0, pending 0
Read from stdout: All tests passed.
Run completed in 514 milliseconds.
Total number of tests run: 27
Suites: completed 5, aborted 0
Tests: succeeded 27, failed 0, canceled 0, ignored 0, pending 0
All tests passed.
Passed tests:
	StreamCodecSpec
	Base64Spec
	StreamDecoderSpec
	Base32Spec
	Base16Spec
Total time: 1 s, completed 31.05.2016 15:07:04
> server-post-command-cleanup
> server-handle-next-server-request
> compile
Evaluating tasks: compile:compile
Running task... Cancel: sbt.server.ServerTaskCancellation@16a90bc9, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala)
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala)

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala)

Read from stdout: Compiling 1 Scala source to /Users/lpfeiler/develop/github/base64/target/scala-2.11/classes...
Compiling 1 Scala source to /Users/lpfeiler/develop/github/base64/target/scala-2.11/classes...
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Running cached compiler 682efd83, interfacing (CompilerInterface) with Scala compiler version 2.11.7
Calling Scala compiler with arguments  (CompilerInterface):
	-bootclasspath
	/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/classes:/Users/lpfeiler/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.11.7.jar
	-classpath
	/Users/lpfeiler/develop/github/base64/target/scala-2.11/classes
Scala compilation took 0.568854965 s
New invalidations:
	Set()
Initial set of included nodes: Set()
Previously invalidated, but (transitively) depend on new invalidations:
	Set()
All newly invalidated sources after taking into account (previously) recompiled sources:Set()
Total time: 1 s, completed 31.05.2016 15:08:02
> server-post-command-cleanup
> server-handle-next-server-request
> test
Evaluating tasks: test:test
Running task... Cancel: sbt.server.ServerTaskCancellation@192fc690, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set()
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set()

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set()

Copy resource mappings: 
	
The de.csmath.codec.Base16$ source file has the following regular definitions changed:
	base16Enc.
All member reference dependencies will be considered within this context.
Files invalidated by inheriting from (external) de.csmath.codec.Base16$: Set(); now invalidating by inheritance (internally).
Getting direct dependencies of all sources transitively invalidated by inheritance.
Getting sources that directly depend on (external) de.csmath.codec.Base16$.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/test/scala/Base16Spec.scala. This dependency is not being considered for invalidation.

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set()
Removed products: Set()
External API changes: API Changes: Set(NamesChange(de.csmath.codec.Base16$,ModifiedNames(regularNames = base16Enc, implicitNames = )))
Modified binary dependencies: Set()
Initial directly invalidated sources: Set()

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set()

Copy resource mappings: 
	
Framework implementation 'org.scalacheck.ScalaCheckFramework' not present.
Framework implementation 'org.specs2.runner.Specs2Framework' not present.
Framework implementation 'org.specs2.runner.SpecsFramework' not present.
Framework implementation 'org.specs.runner.SpecsFramework' not present.
Framework implementation 'com.novocode.junit.JUnitFramework' not present.
Subclass fingerprints: List((org.scalatest.Suite,false,org.scalatest.tools.Framework$$anon$1@35b56849))
Annotation fingerprints: List((org.scalatest.WrapWith,false,org.scalatest.tools.Framework$$anon$2@3183f299))
Running TaskDef(StreamCodecSpec, org.scalatest.tools.Framework$$anon$1@35b56849, false, [SuiteSelector])
Running TaskDef(Base32Spec, org.scalatest.tools.Framework$$anon$1@35b56849, false, [SuiteSelector])
Running TaskDef(Base64Spec, org.scalatest.tools.Framework$$anon$1@35b56849, false, [SuiteSelector])
Running TaskDef(StreamDecoderSpec, org.scalatest.tools.Framework$$anon$1@35b56849, false, [SuiteSelector])
Read from stdout: StreamDecoderSpec:
Read from stdout: StreamDecoder
Read from stdout: - should check allowed bytes
[32mStreamDecoderSpec:[0m
[32mStreamDecoder[0m
[32m- should check allowed bytes[0m
Running TaskDef(Base16Spec, org.scalatest.tools.Framework$$anon$1@35b56849, false, [SuiteSelector])
Read from stdout: StreamCodecSpec:
Read from stdout: StreamCodec
Read from stdout: - should create a ByteStream
Read from stdout: StreamCodec
Read from stdout: - should create a IntStream
Read from stdout: StreamCodec
Read from stdout: - should create a groupStream
Read from stdout: StreamCodec
Read from stdout: - should create a filledStream
Read from stdout: StreamCodec
Read from stdout: - should flatten a filledStream
Read from stdout: Base16Spec:
Read from stdout: Base16
Read from stdout: - should encode to BASE16
[32mBase16Spec:[0m
[32mBase16[0m
[32m- should encode to BASE16[0m
[32mStreamCodecSpec:[0m
[32mStreamCodec[0m
[32m- should create a ByteStream[0m
[32mStreamCodec[0m
[32m- should create a IntStream[0m
[32mStreamCodec[0m
[32m- should create a groupStream[0m
[32mStreamCodec[0m
[32m- should create a filledStream[0m
[32mStreamCodec[0m
[32m- should flatten a filledStream[0m
Read from stdout: Base32Spec:
Read from stdout: Base32
Read from stdout: - should encode to BASE32
Read from stdout: Base32
Read from stdout: - should encode to BASE32NOPAD
Read from stdout: Base32
Read from stdout: - should encode to BASE32URL
Read from stdout: Base32
Read from stdout: - should encode to BASE32HEX
Read from stdout: Base32
Read from stdout: - should encode to BASE32HEXNOPAD
Read from stdout: Base32
Read from stdout: - should encode to BASE32HEXURL
Read from stdout: Base32
Read from stdout: - should decode from BASE32
Read from stdout: Base32
Read from stdout: - should decode from BASE32 w/o padding
[32mBase32Spec:[0m
[32mBase32[0m
[32m- should encode to BASE32[0m
[32mBase32[0m
[32m- should encode to BASE32NOPAD[0m
[32mBase32[0m
[32m- should encode to BASE32URL[0m
[32mBase32[0m
[32m- should encode to BASE32HEX[0m
[32mBase32[0m
[32m- should encode to BASE32HEXNOPAD[0m
[32mBase32[0m
[32m- should encode to BASE32HEXURL[0m
[32mBase32[0m
[32m- should decode from BASE32[0m
[32mBase32[0m
[32m- should decode from BASE32 w/o padding[0m
Read from stdout: Base64Spec:
Read from stdout: Base64
Read from stdout: - should encode to BASE64
Read from stdout: Base64
Read from stdout: - should encode to BASE64FILE
Read from stdout: Base64
Read from stdout: - should encode to BASE64URL
Read from stdout: Base64
Read from stdout: - should encode to BASE64NOPAD
Read from stdout: Base64
Read from stdout: - should encode to BASE64FILENOPAD
Read from stdout: Base64
Read from stdout: - should encode to BASE64URLNOPAD
Read from stdout: Base64
Read from stdout: - should decode from BASE64
Read from stdout: Base64
Read from stdout: - should decode from BASE64 w/o padding
Read from stdout: Base64
Read from stdout: - should fail with crap
Read from stdout: Base64
Read from stdout: - should decode from BASE64FILE
Read from stdout: Base64
Read from stdout: - should decode from BASE64FILE w/o padding
Read from stdout: Base64
Read from stdout: - should decode from BASE64URL
[32mBase64Spec:[0m
[32mBase64[0m
[32m- should encode to BASE64[0m
[32mBase64[0m
[32m- should encode to BASE64FILE[0m
[32mBase64[0m
[32m- should encode to BASE64URL[0m
[32mBase64[0m
[32m- should encode to BASE64NOPAD[0m
[32mBase64[0m
[32m- should encode to BASE64FILENOPAD[0m
[32mBase64[0m
[32m- should encode to BASE64URLNOPAD[0m
[32mBase64[0m
[32m- should decode from BASE64[0m
[32mBase64[0m
[32m- should decode from BASE64 w/o padding[0m
[32mBase64[0m
[32m- should fail with crap[0m
[32mBase64[0m
[32m- should decode from BASE64FILE[0m
[32mBase64[0m
[32m- should decode from BASE64FILE w/o padding[0m
[32mBase64[0m
[32m- should decode from BASE64URL[0m
Read from stdout: Run completed in 433 milliseconds.
Read from stdout: Total number of tests run: 27
Read from stdout: Suites: completed 5, aborted 0
Read from stdout: Tests: succeeded 27, failed 0, canceled 0, ignored 0, pending 0
Read from stdout: All tests passed.
Run completed in 433 milliseconds.
Total number of tests run: 27
Suites: completed 5, aborted 0
Tests: succeeded 27, failed 0, canceled 0, ignored 0, pending 0
All tests passed.
Passed tests:
	StreamCodecSpec
	Base64Spec
	StreamDecoderSpec
	Base32Spec
	Base16Spec
Total time: 1 s, completed 31.05.2016 15:08:02
> server-post-command-cleanup
> server-handle-next-server-request
> compile
Evaluating tasks: compile:compile
Running task... Cancel: sbt.server.ServerTaskCancellation@61da79dd, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala)
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala)

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala)

Read from stdout: Compiling 1 Scala source to /Users/lpfeiler/develop/github/base64/target/scala-2.11/classes...
Compiling 1 Scala source to /Users/lpfeiler/develop/github/base64/target/scala-2.11/classes...
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Running cached compiler 25a68fbf, interfacing (CompilerInterface) with Scala compiler version 2.11.7
Calling Scala compiler with arguments  (CompilerInterface):
	-bootclasspath
	/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/classes:/Users/lpfeiler/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.11.7.jar
	-classpath
	/Users/lpfeiler/develop/github/base64/target/scala-2.11/classes
Scala compilation took 0.495240884 s
New invalidations:
	Set()
Initial set of included nodes: Set()
Previously invalidated, but (transitively) depend on new invalidations:
	Set()
All newly invalidated sources after taking into account (previously) recompiled sources:Set()
Total time: 1 s, completed 31.05.2016 15:09:35
> server-post-command-cleanup
> server-handle-next-server-request
> test
Evaluating tasks: test:test
Running task... Cancel: sbt.server.ServerTaskCancellation@2c4a48f0, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set()
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set()

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set()

Copy resource mappings: 
	
The de.csmath.codec.Base16$ source file has the following regular definitions changed:
	base16Enc.
All member reference dependencies will be considered within this context.
Files invalidated by inheriting from (external) de.csmath.codec.Base16$: Set(); now invalidating by inheritance (internally).
Getting direct dependencies of all sources transitively invalidated by inheritance.
Getting sources that directly depend on (external) de.csmath.codec.Base16$.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/test/scala/Base16Spec.scala. This dependency is not being considered for invalidation.

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set()
Removed products: Set()
External API changes: API Changes: Set(NamesChange(de.csmath.codec.Base16$,ModifiedNames(regularNames = base16Enc, implicitNames = )))
Modified binary dependencies: Set()
Initial directly invalidated sources: Set()

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set()

Copy resource mappings: 
	
Framework implementation 'org.scalacheck.ScalaCheckFramework' not present.
Framework implementation 'org.specs2.runner.Specs2Framework' not present.
Framework implementation 'org.specs2.runner.SpecsFramework' not present.
Framework implementation 'org.specs.runner.SpecsFramework' not present.
Framework implementation 'com.novocode.junit.JUnitFramework' not present.
Subclass fingerprints: List((org.scalatest.Suite,false,org.scalatest.tools.Framework$$anon$1@2ff8ab22))
Annotation fingerprints: List((org.scalatest.WrapWith,false,org.scalatest.tools.Framework$$anon$2@3e05442b))
Running TaskDef(Base64Spec, org.scalatest.tools.Framework$$anon$1@2ff8ab22, false, [SuiteSelector])
Running TaskDef(Base16Spec, org.scalatest.tools.Framework$$anon$1@2ff8ab22, false, [SuiteSelector])
Running TaskDef(StreamDecoderSpec, org.scalatest.tools.Framework$$anon$1@2ff8ab22, false, [SuiteSelector])
Running TaskDef(StreamCodecSpec, org.scalatest.tools.Framework$$anon$1@2ff8ab22, false, [SuiteSelector])
Read from stdout: StreamDecoderSpec:
Read from stdout: StreamDecoder
Read from stdout: - should check allowed bytes
Read from stdout: Base16Spec:
[32mStreamDecoderSpec:[0m
[32mStreamDecoder[0m
[32m- should check allowed bytes[0m
Read from stdout: Base16
Running TaskDef(Base32Spec, org.scalatest.tools.Framework$$anon$1@2ff8ab22, false, [SuiteSelector])
Read from stdout: - should encode to BASE16
[32mBase16Spec:[0m
[32mBase16[0m
[32m- should encode to BASE16[0m
Read from stdout: StreamCodecSpec:
Read from stdout: StreamCodec
Read from stdout: - should create a ByteStream
Read from stdout: StreamCodec
Read from stdout: - should create a IntStream
Read from stdout: StreamCodec
Read from stdout: - should create a groupStream
Read from stdout: StreamCodec
Read from stdout: - should create a filledStream
Read from stdout: StreamCodec
Read from stdout: - should flatten a filledStream
[32mStreamCodecSpec:[0m
[32mStreamCodec[0m
[32m- should create a ByteStream[0m
[32mStreamCodec[0m
[32m- should create a IntStream[0m
[32mStreamCodec[0m
[32m- should create a groupStream[0m
[32mStreamCodec[0m
[32m- should create a filledStream[0m
[32mStreamCodec[0m
[32m- should flatten a filledStream[0m
Read from stdout: Base32Spec:
Read from stdout: Base32
Read from stdout: - should encode to BASE32
Read from stdout: Base32
Read from stdout: - should encode to BASE32NOPAD
Read from stdout: Base32
Read from stdout: - should encode to BASE32URL
Read from stdout: Base32
Read from stdout: - should encode to BASE32HEX
Read from stdout: Base32
Read from stdout: - should encode to BASE32HEXNOPAD
Read from stdout: Base32
Read from stdout: - should encode to BASE32HEXURL
Read from stdout: Base32
Read from stdout: - should decode from BASE32
Read from stdout: Base32
Read from stdout: - should decode from BASE32 w/o padding
[32mBase32Spec:[0m
[32mBase32[0m
[32m- should encode to BASE32[0m
[32mBase32[0m
[32m- should encode to BASE32NOPAD[0m
[32mBase32[0m
[32m- should encode to BASE32URL[0m
[32mBase32[0m
[32m- should encode to BASE32HEX[0m
[32mBase32[0m
[32m- should encode to BASE32HEXNOPAD[0m
[32mBase32[0m
[32m- should encode to BASE32HEXURL[0m
[32mBase32[0m
[32m- should decode from BASE32[0m
[32mBase32[0m
[32m- should decode from BASE32 w/o padding[0m
Read from stdout: Base64Spec:
Read from stdout: Base64
Read from stdout: - should encode to BASE64
Read from stdout: Base64
Read from stdout: - should encode to BASE64FILE
Read from stdout: Base64
Read from stdout: - should encode to BASE64URL
Read from stdout: Base64
Read from stdout: - should encode to BASE64NOPAD
Read from stdout: Base64
Read from stdout: - should encode to BASE64FILENOPAD
Read from stdout: Base64
Read from stdout: - should encode to BASE64URLNOPAD
Read from stdout: Base64
Read from stdout: - should decode from BASE64
Read from stdout: Base64
Read from stdout: - should decode from BASE64 w/o padding
Read from stdout: Base64
Read from stdout: - should fail with crap
Read from stdout: Base64
Read from stdout: - should decode from BASE64FILE
Read from stdout: Base64
Read from stdout: - should decode from BASE64FILE w/o padding
Read from stdout: Base64
Read from stdout: - should decode from BASE64URL
[32mBase64Spec:[0m
[32mBase64[0m
[32m- should encode to BASE64[0m
[32mBase64[0m
[32m- should encode to BASE64FILE[0m
[32mBase64[0m
[32m- should encode to BASE64URL[0m
[32mBase64[0m
[32m- should encode to BASE64NOPAD[0m
[32mBase64[0m
[32m- should encode to BASE64FILENOPAD[0m
[32mBase64[0m
[32m- should encode to BASE64URLNOPAD[0m
[32mBase64[0m
[32m- should decode from BASE64[0m
[32mBase64[0m
[32m- should decode from BASE64 w/o padding[0m
[32mBase64[0m
[32m- should fail with crap[0m
[32mBase64[0m
[32m- should decode from BASE64FILE[0m
[32mBase64[0m
[32m- should decode from BASE64FILE w/o padding[0m
[32mBase64[0m
[32m- should decode from BASE64URL[0m
Read from stdout: Run completed in 384 milliseconds.
Read from stdout: Total number of tests run: 27
Read from stdout: Suites: completed 5, aborted 0
Read from stdout: Tests: succeeded 27, failed 0, canceled 0, ignored 0, pending 0
Read from stdout: All tests passed.
Run completed in 384 milliseconds.
Total number of tests run: 27
Suites: completed 5, aborted 0
Tests: succeeded 27, failed 0, canceled 0, ignored 0, pending 0
All tests passed.
Passed tests:
	StreamCodecSpec
	Base64Spec
	StreamDecoderSpec
	Base32Spec
	Base16Spec
Total time: 1 s, completed 31.05.2016 15:09:36
> server-post-command-cleanup
> server-handle-next-server-request
> compile
Evaluating tasks: compile:compile
Running task... Cancel: sbt.server.ServerTaskCancellation@70dd09d1, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala)
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala)

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala)

Read from stdout: Compiling 1 Scala source to /Users/lpfeiler/develop/github/base64/target/scala-2.11/classes...
Compiling 1 Scala source to /Users/lpfeiler/develop/github/base64/target/scala-2.11/classes...
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Running cached compiler c0335f4, interfacing (CompilerInterface) with Scala compiler version 2.11.7
Calling Scala compiler with arguments  (CompilerInterface):
	-bootclasspath
	/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/classes:/Users/lpfeiler/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.11.7.jar
	-classpath
	/Users/lpfeiler/develop/github/base64/target/scala-2.11/classes
Scala compilation took 0.922725115 s
New invalidations:
	Set()
Initial set of included nodes: Set()
Previously invalidated, but (transitively) depend on new invalidations:
	Set()
All newly invalidated sources after taking into account (previously) recompiled sources:Set()
Total time: 1 s, completed 31.05.2016 15:09:49
> server-post-command-cleanup
> server-handle-next-server-request
> test
Evaluating tasks: test:test
Running task... Cancel: sbt.server.ServerTaskCancellation@19f237f0, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set()
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set()

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set()

Copy resource mappings: 
	
The de.csmath.codec.Base16$ source file has the following regular definitions changed:
	base16Enc.
All member reference dependencies will be considered within this context.
Files invalidated by inheriting from (external) de.csmath.codec.Base16$: Set(); now invalidating by inheritance (internally).
Getting direct dependencies of all sources transitively invalidated by inheritance.
Getting sources that directly depend on (external) de.csmath.codec.Base16$.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/test/scala/Base16Spec.scala. This dependency is not being considered for invalidation.

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set()
Removed products: Set()
External API changes: API Changes: Set(NamesChange(de.csmath.codec.Base16$,ModifiedNames(regularNames = base16Enc, implicitNames = )))
Modified binary dependencies: Set()
Initial directly invalidated sources: Set()

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set()

Copy resource mappings: 
	
Framework implementation 'org.scalacheck.ScalaCheckFramework' not present.
Framework implementation 'org.specs2.runner.Specs2Framework' not present.
Framework implementation 'org.specs2.runner.SpecsFramework' not present.
Framework implementation 'org.specs.runner.SpecsFramework' not present.
Framework implementation 'com.novocode.junit.JUnitFramework' not present.
Subclass fingerprints: List((org.scalatest.Suite,false,org.scalatest.tools.Framework$$anon$1@6631465b))
Annotation fingerprints: List((org.scalatest.WrapWith,false,org.scalatest.tools.Framework$$anon$2@323edb25))
Running TaskDef(StreamCodecSpec, org.scalatest.tools.Framework$$anon$1@6631465b, false, [SuiteSelector])
Running TaskDef(Base16Spec, org.scalatest.tools.Framework$$anon$1@6631465b, false, [SuiteSelector])
Running TaskDef(Base32Spec, org.scalatest.tools.Framework$$anon$1@6631465b, false, [SuiteSelector])
Running TaskDef(StreamDecoderSpec, org.scalatest.tools.Framework$$anon$1@6631465b, false, [SuiteSelector])
Read from stdout: Base16Spec:
Read from stdout: Base16
Read from stdout: - should encode to BASE16
[32mBase16Spec:[0m
[32mBase16[0m
[32m- should encode to BASE16[0m
Running TaskDef(Base64Spec, org.scalatest.tools.Framework$$anon$1@6631465b, false, [SuiteSelector])
Read from stdout: StreamDecoderSpec:
Read from stdout: StreamDecoder
Read from stdout: - should check allowed bytes
[32mStreamDecoderSpec:[0m
[32mStreamDecoder[0m
[32m- should check allowed bytes[0m
Read from stdout: StreamCodecSpec:
Read from stdout: StreamCodec
Read from stdout: - should create a ByteStream
Read from stdout: StreamCodec
Read from stdout: - should create a IntStream
Read from stdout: StreamCodec
Read from stdout: - should create a groupStream
Read from stdout: StreamCodec
Read from stdout: - should create a filledStream
Read from stdout: StreamCodec
Read from stdout: - should flatten a filledStream
[32mStreamCodecSpec:[0m
[32mStreamCodec[0m
[32m- should create a ByteStream[0m
[32mStreamCodec[0m
[32m- should create a IntStream[0m
[32mStreamCodec[0m
[32m- should create a groupStream[0m
[32mStreamCodec[0m
[32m- should create a filledStream[0m
[32mStreamCodec[0m
[32m- should flatten a filledStream[0m
Read from stdout: Base32Spec:
Read from stdout: Base32
Read from stdout: - should encode to BASE32
Read from stdout: Base32
Read from stdout: - should encode to BASE32NOPAD
Read from stdout: Base32
Read from stdout: - should encode to BASE32URL
Read from stdout: Base32
Read from stdout: - should encode to BASE32HEX
Read from stdout: Base32
Read from stdout: - should encode to BASE32HEXNOPAD
Read from stdout: Base32
Read from stdout: - should encode to BASE32HEXURL
Read from stdout: Base32
Read from stdout: - should decode from BASE32
Read from stdout: Base32
Read from stdout: - should decode from BASE32 w/o padding
[32mBase32Spec:[0m
[32mBase32[0m
[32m- should encode to BASE32[0m
[32mBase32[0m
[32m- should encode to BASE32NOPAD[0m
[32mBase32[0m
[32m- should encode to BASE32URL[0m
[32mBase32[0m
[32m- should encode to BASE32HEX[0m
[32mBase32[0m
[32m- should encode to BASE32HEXNOPAD[0m
[32mBase32[0m
[32m- should encode to BASE32HEXURL[0m
[32mBase32[0m
[32m- should decode from BASE32[0m
[32mBase32[0m
[32m- should decode from BASE32 w/o padding[0m
Read from stdout: Base64Spec:
Read from stdout: Base64
Read from stdout: - should encode to BASE64
Read from stdout: Base64
Read from stdout: - should encode to BASE64FILE
Read from stdout: Base64
Read from stdout: - should encode to BASE64URL
Read from stdout: Base64
Read from stdout: - should encode to BASE64NOPAD
Read from stdout: Base64
Read from stdout: - should encode to BASE64FILENOPAD
Read from stdout: Base64
Read from stdout: - should encode to BASE64URLNOPAD
Read from stdout: Base64
Read from stdout: - should decode from BASE64
Read from stdout: Base64
Read from stdout: - should decode from BASE64 w/o padding
Read from stdout: Base64
Read from stdout: - should fail with crap
Read from stdout: Base64
Read from stdout: - should decode from BASE64FILE
Read from stdout: Base64
Read from stdout: - should decode from BASE64FILE w/o padding
Read from stdout: Base64
Read from stdout: - should decode from BASE64URL
[32mBase64Spec:[0m
[32mBase64[0m
[32m- should encode to BASE64[0m
[32mBase64[0m
[32m- should encode to BASE64FILE[0m
[32mBase64[0m
[32m- should encode to BASE64URL[0m
[32mBase64[0m
[32m- should encode to BASE64NOPAD[0m
[32mBase64[0m
[32m- should encode to BASE64FILENOPAD[0m
[32mBase64[0m
[32m- should encode to BASE64URLNOPAD[0m
[32mBase64[0m
[32m- should decode from BASE64[0m
[32mBase64[0m
[32m- should decode from BASE64 w/o padding[0m
[32mBase64[0m
[32m- should fail with crap[0m
[32mBase64[0m
[32m- should decode from BASE64FILE[0m
[32mBase64[0m
[32m- should decode from BASE64FILE w/o padding[0m
[32mBase64[0m
[32m- should decode from BASE64URL[0m
Read from stdout: Run completed in 504 milliseconds.
Read from stdout: Total number of tests run: 27
Read from stdout: Suites: completed 5, aborted 0
Read from stdout: Tests: succeeded 27, failed 0, canceled 0, ignored 0, pending 0
Read from stdout: All tests passed.
Run completed in 504 milliseconds.
Total number of tests run: 27
Suites: completed 5, aborted 0
Tests: succeeded 27, failed 0, canceled 0, ignored 0, pending 0
All tests passed.
Passed tests:
	StreamCodecSpec
	Base64Spec
	StreamDecoderSpec
	Base32Spec
	Base16Spec
Total time: 1 s, completed 31.05.2016 15:09:50
> server-post-command-cleanup
> server-handle-next-server-request
> compile
Evaluating tasks: compile:compile
Running task... Cancel: sbt.server.ServerTaskCancellation@30dfcf4c, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base16.scala)
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base16.scala)

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base16.scala)

Read from stdout: Compiling 1 Scala source to /Users/lpfeiler/develop/github/base64/target/scala-2.11/classes...
Compiling 1 Scala source to /Users/lpfeiler/develop/github/base64/target/scala-2.11/classes...
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Running cached compiler 79d63e18, interfacing (CompilerInterface) with Scala compiler version 2.11.7
Calling Scala compiler with arguments  (CompilerInterface):
	-bootclasspath
	/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/classes:/Users/lpfeiler/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.11.7.jar
	-classpath
	/Users/lpfeiler/develop/github/base64/target/scala-2.11/classes
Read from stdout: /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base16.scala:6: object creation impossible, since method decoder in class BaseN of type (enc: de.csmath.codec.Codec.Value)de.csmath.codec.BaseNDecoder is not defined
/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base16.scala:6: object creation impossible, since method decoder in class BaseN of type (enc: de.csmath.codec.Codec.Value)de.csmath.codec.BaseNDecoder is not defined
Read from stdout: object Base16 extends BaseN {
object Base16 extends BaseN {
Read from stdout: ^
       ^
Read from stdout: one error found
one error found
Compilation failed (CompilerInterface)
Read from stdout: (compile:compileIncremental) Compilation failed
(compile:compileIncremental) Compilation failed
Total time: 0 s, completed 31.05.2016 15:11:06
> server-post-command-error-handler
> server-post-command-cleanup
> server-handle-next-server-request
> compile
Evaluating tasks: compile:compile
Running task... Cancel: sbt.server.ServerTaskCancellation@268406a4, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base16.scala)
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base16.scala)

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base16.scala)

Read from stdout: Compiling 1 Scala source to /Users/lpfeiler/develop/github/base64/target/scala-2.11/classes...
Compiling 1 Scala source to /Users/lpfeiler/develop/github/base64/target/scala-2.11/classes...
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Running cached compiler 1828fba1, interfacing (CompilerInterface) with Scala compiler version 2.11.7
Calling Scala compiler with arguments  (CompilerInterface):
	-bootclasspath
	/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/classes:/Users/lpfeiler/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.11.7.jar
	-classpath
	/Users/lpfeiler/develop/github/base64/target/scala-2.11/classes
Read from stdout: /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base16.scala:11: object creation impossible, since method decoder in class BaseN of type (enc: de.csmath.codec.Codec.Value)de.csmath.codec.BaseNDecoder is not defined
/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base16.scala:11: object creation impossible, since method decoder in class BaseN of type (enc: de.csmath.codec.Codec.Value)de.csmath.codec.BaseNDecoder is not defined
Read from stdout: object Base16 extends BaseN {
object Base16 extends BaseN {
Read from stdout: ^
       ^
Read from stdout: one error found
one error found
Compilation failed (CompilerInterface)
Read from stdout: (compile:compileIncremental) Compilation failed
(compile:compileIncremental) Compilation failed
Total time: 0 s, completed 31.05.2016 15:11:30
> server-post-command-error-handler
> server-post-command-cleanup
> server-handle-next-server-request
> compile
Evaluating tasks: compile:compile
Running task... Cancel: sbt.server.ServerTaskCancellation@62243646, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base16.scala)
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base16.scala)

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base16.scala)

Read from stdout: Compiling 1 Scala source to /Users/lpfeiler/develop/github/base64/target/scala-2.11/classes...
Compiling 1 Scala source to /Users/lpfeiler/develop/github/base64/target/scala-2.11/classes...
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Running cached compiler 4518dae0, interfacing (CompilerInterface) with Scala compiler version 2.11.7
Calling Scala compiler with arguments  (CompilerInterface):
	-bootclasspath
	/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/classes:/Users/lpfeiler/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.11.7.jar
	-classpath
	/Users/lpfeiler/develop/github/base64/target/scala-2.11/classes
Read from stdout: /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base16.scala:11: object creation impossible, since method decoder in class BaseN of type (enc: de.csmath.codec.Codec.Value)de.csmath.codec.BaseNDecoder is not defined
/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base16.scala:11: object creation impossible, since method decoder in class BaseN of type (enc: de.csmath.codec.Codec.Value)de.csmath.codec.BaseNDecoder is not defined
Read from stdout: object Base16 extends BaseN {
object Base16 extends BaseN {
Read from stdout: ^
       ^
Read from stdout: one error found
one error found
Compilation failed (CompilerInterface)
Read from stdout: (compile:compileIncremental) Compilation failed
(compile:compileIncremental) Compilation failed
Total time: 0 s, completed 31.05.2016 15:15:04
> server-post-command-error-handler
> server-post-command-cleanup
> server-handle-next-server-request
> compile
Evaluating tasks: compile:compile
Running task... Cancel: sbt.server.ServerTaskCancellation@4167757f, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base16.scala)
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base16.scala)

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base16.scala)

Read from stdout: Compiling 1 Scala source to /Users/lpfeiler/develop/github/base64/target/scala-2.11/classes...
Compiling 1 Scala source to /Users/lpfeiler/develop/github/base64/target/scala-2.11/classes...
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Running cached compiler 7aff2e86, interfacing (CompilerInterface) with Scala compiler version 2.11.7
Calling Scala compiler with arguments  (CompilerInterface):
	-bootclasspath
	/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/classes:/Users/lpfeiler/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.11.7.jar
	-classpath
	/Users/lpfeiler/develop/github/base64/target/scala-2.11/classes
Read from stdout: /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base16.scala:11: object creation impossible, since method decoder in class BaseN of type (enc: de.csmath.codec.Codec.Value)de.csmath.codec.BaseNDecoder is not defined
/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base16.scala:11: object creation impossible, since method decoder in class BaseN of type (enc: de.csmath.codec.Codec.Value)de.csmath.codec.BaseNDecoder is not defined
Read from stdout: object Base16 extends BaseN {
object Base16 extends BaseN {
Read from stdout: ^
       ^
Read from stdout: one error found
one error found
Compilation failed (CompilerInterface)
Read from stdout: (compile:compileIncremental) Compilation failed
(compile:compileIncremental) Compilation failed
Total time: 0 s, completed 31.05.2016 15:15:29
> server-post-command-error-handler
> server-post-command-cleanup
> server-handle-next-server-request
> compile
Evaluating tasks: compile:compile
Running task... Cancel: sbt.server.ServerTaskCancellation@6ea58b68, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base16.scala)
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base16.scala)

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base16.scala)

Read from stdout: Compiling 1 Scala source to /Users/lpfeiler/develop/github/base64/target/scala-2.11/classes...
Compiling 1 Scala source to /Users/lpfeiler/develop/github/base64/target/scala-2.11/classes...
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Running cached compiler 35898c40, interfacing (CompilerInterface) with Scala compiler version 2.11.7
Calling Scala compiler with arguments  (CompilerInterface):
	-bootclasspath
	/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/classes:/Users/lpfeiler/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.11.7.jar
	-classpath
	/Users/lpfeiler/develop/github/base64/target/scala-2.11/classes
Read from stdout: /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base16.scala:52: 'case' expected but '}' found.
/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base16.scala:52: 'case' expected but '}' found.
Read from stdout: }
    }
Read from stdout: ^
    ^
Read from stdout: one error found
one error found
Compilation failed (CompilerInterface)
Read from stdout: (compile:compileIncremental) Compilation failed
(compile:compileIncremental) Compilation failed
Total time: 0 s, completed 31.05.2016 15:16:47
> server-post-command-error-handler
> server-post-command-cleanup
> server-handle-next-server-request
> compile
Evaluating tasks: compile:compile
Running task... Cancel: sbt.server.ServerTaskCancellation@af676b1, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base16.scala)
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base16.scala)

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base16.scala)

Read from stdout: Compiling 1 Scala source to /Users/lpfeiler/develop/github/base64/target/scala-2.11/classes...
Compiling 1 Scala source to /Users/lpfeiler/develop/github/base64/target/scala-2.11/classes...
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Running cached compiler 1b614b7d, interfacing (CompilerInterface) with Scala compiler version 2.11.7
Calling Scala compiler with arguments  (CompilerInterface):
	-bootclasspath
	/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/classes:/Users/lpfeiler/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.11.7.jar
	-classpath
	/Users/lpfeiler/develop/github/base64/target/scala-2.11/classes
Scala compilation took 0.375952501 s
Invalidating /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base16.scala...
Invalidating (transitively) by inheritance from /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base16.scala...
Initial set of included nodes: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base16.scala)
Invalidated by transitive inheritance dependency: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base16.scala)
The /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base16.scala source file has the following regular definitions changed:
	encode, decoder, encodeToString$default$2, decode, encodeToString, encoder, Base16, decodeToString, encode$default$2.
All member reference dependencies will be considered within this context.
New invalidations:
	Set()
Initial set of included nodes: Set()
Previously invalidated, but (transitively) depend on new invalidations:
	Set()
All newly invalidated sources after taking into account (previously) recompiled sources:Set()
Total time: 1 s, completed 31.05.2016 15:17:34
> server-post-command-cleanup
> server-handle-next-server-request
> test
Evaluating tasks: test:test
Running task... Cancel: sbt.server.ServerTaskCancellation@25a3bf8c, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set()
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set()

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set()

Copy resource mappings: 
	
The de.csmath.codec.Base16$ source file has the following regular definitions changed:
	encode, decoder, encodeToString$default$2, decode, encodeToString, base16Enc, encoder, Base16, decodeToString, encode$default$2.
All member reference dependencies will be considered within this context.
Files invalidated by inheriting from (external) de.csmath.codec.Base16$: Set(); now invalidating by inheritance (internally).
Getting direct dependencies of all sources transitively invalidated by inheritance.
Getting sources that directly depend on (external) de.csmath.codec.Base16$.
The following modified names cause invalidation of /Users/lpfeiler/develop/github/base64/src/test/scala/Base16Spec.scala: Set(encodeToString, Base16)

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set()
Removed products: Set()
External API changes: API Changes: Set(NamesChange(de.csmath.codec.Base16$,ModifiedNames(regularNames = encode, decoder, encodeToString$default$2, decode, encodeToString, base16Enc, encoder, Base16, decodeToString, encode$default$2, implicitNames = )))
Modified binary dependencies: Set()
Initial directly invalidated sources: Set()

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/Base16Spec.scala)
All initially invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/Base16Spec.scala)

Read from stdout: Compiling 1 Scala source to /Users/lpfeiler/develop/github/base64/target/scala-2.11/test-classes...
Compiling 1 Scala source to /Users/lpfeiler/develop/github/base64/target/scala-2.11/test-classes...
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Running cached compiler 64b9dbe1, interfacing (CompilerInterface) with Scala compiler version 2.11.7
Calling Scala compiler with arguments  (CompilerInterface):
	-bootclasspath
	/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/classes:/Users/lpfeiler/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.11.7.jar
	-classpath
	/Users/lpfeiler/develop/github/base64/target/scala-2.11/test-classes:/Users/lpfeiler/develop/github/base64/target/scala-2.11/classes:/Users/lpfeiler/develop/scala/activator-dist-1.3.6/repository/org.scalatest/scalatest_2.11/2.2.4/bundles/scalatest_2.11.jar:/Users/lpfeiler/develop/scala/activator-dist-1.3.6/repository/org.scala-lang/scala-reflect/2.11.2/jars/scala-reflect.jar:/Users/lpfeiler/develop/scala/activator-dist-1.3.6/repository/org.scala-lang.modules/scala-xml_2.11/1.0.2/bundles/scala-xml_2.11.jar
Scala compilation took 1.274878543 s
New invalidations:
	Set()
Initial set of included nodes: Set()
Previously invalidated, but (transitively) depend on new invalidations:
	Set()
All newly invalidated sources after taking into account (previously) recompiled sources:Set()
Copy resource mappings: 
	
Framework implementation 'org.scalacheck.ScalaCheckFramework' not present.
Framework implementation 'org.specs2.runner.Specs2Framework' not present.
Framework implementation 'org.specs2.runner.SpecsFramework' not present.
Framework implementation 'org.specs.runner.SpecsFramework' not present.
Framework implementation 'com.novocode.junit.JUnitFramework' not present.
Subclass fingerprints: List((org.scalatest.Suite,false,org.scalatest.tools.Framework$$anon$1@149213ca))
Annotation fingerprints: List((org.scalatest.WrapWith,false,org.scalatest.tools.Framework$$anon$2@11d3395e))
Running TaskDef(Base32Spec, org.scalatest.tools.Framework$$anon$1@149213ca, false, [SuiteSelector])
Running TaskDef(Base16Spec, org.scalatest.tools.Framework$$anon$1@149213ca, false, [SuiteSelector])
Running TaskDef(StreamCodecSpec, org.scalatest.tools.Framework$$anon$1@149213ca, false, [SuiteSelector])
Running TaskDef(Base64Spec, org.scalatest.tools.Framework$$anon$1@149213ca, false, [SuiteSelector])
Read from stdout: Base16Spec:
Read from stdout: Base16
Read from stdout: - should encode to BASE16
[32mBase16Spec:[0m
Read from stdout: StreamCodecSpec:
[32mBase16[0m
Read from stdout: StreamCodec
[32m- should encode to BASE16[0m
Read from stdout: - should create a ByteStream
Read from stdout: StreamCodec
Read from stdout: - should create a IntStream
Read from stdout: StreamCodec
Read from stdout: - should create a groupStream
Read from stdout: StreamCodec
Read from stdout: - should create a filledStream
Read from stdout: StreamCodec
Read from stdout: - should flatten a filledStream
[32mStreamCodecSpec:[0m
[32mStreamCodec[0m
[32m- should create a ByteStream[0m
[32mStreamCodec[0m
Running TaskDef(StreamDecoderSpec, org.scalatest.tools.Framework$$anon$1@149213ca, false, [SuiteSelector])
[32m- should create a IntStream[0m
[32mStreamCodec[0m
[32m- should create a groupStream[0m
[32mStreamCodec[0m
[32m- should create a filledStream[0m
[32mStreamCodec[0m
[32m- should flatten a filledStream[0m
Read from stdout: StreamDecoderSpec:
Read from stdout: StreamDecoder
Read from stdout: - should check allowed bytes
[32mStreamDecoderSpec:[0m
[32mStreamDecoder[0m
[32m- should check allowed bytes[0m
Read from stdout: Base32Spec:
Read from stdout: Base32
Read from stdout: - should encode to BASE32
Read from stdout: Base32
Read from stdout: - should encode to BASE32NOPAD
Read from stdout: Base32
Read from stdout: - should encode to BASE32URL
Read from stdout: Base32
Read from stdout: - should encode to BASE32HEX
Read from stdout: Base32
Read from stdout: - should encode to BASE32HEXNOPAD
Read from stdout: Base32
Read from stdout: - should encode to BASE32HEXURL
Read from stdout: Base32
Read from stdout: - should decode from BASE32
Read from stdout: Base32
Read from stdout: - should decode from BASE32 w/o padding
[32mBase32Spec:[0m
[32mBase32[0m
[32m- should encode to BASE32[0m
[32mBase32[0m
[32m- should encode to BASE32NOPAD[0m
[32mBase32[0m
[32m- should encode to BASE32URL[0m
[32mBase32[0m
[32m- should encode to BASE32HEX[0m
[32mBase32[0m
[32m- should encode to BASE32HEXNOPAD[0m
[32mBase32[0m
[32m- should encode to BASE32HEXURL[0m
[32mBase32[0m
[32m- should decode from BASE32[0m
[32mBase32[0m
[32m- should decode from BASE32 w/o padding[0m
Read from stdout: Base64Spec:
Read from stdout: Base64
Read from stdout: - should encode to BASE64
Read from stdout: Base64
Read from stdout: - should encode to BASE64FILE
Read from stdout: Base64
Read from stdout: - should encode to BASE64URL
Read from stdout: Base64
Read from stdout: - should encode to BASE64NOPAD
Read from stdout: Base64
Read from stdout: - should encode to BASE64FILENOPAD
Read from stdout: Base64
Read from stdout: - should encode to BASE64URLNOPAD
Read from stdout: Base64
Read from stdout: - should decode from BASE64
Read from stdout: Base64
Read from stdout: - should decode from BASE64 w/o padding
Read from stdout: Base64
Read from stdout: - should fail with crap
Read from stdout: Base64
Read from stdout: - should decode from BASE64FILE
Read from stdout: Base64
Read from stdout: - should decode from BASE64FILE w/o padding
Read from stdout: Base64
Read from stdout: - should decode from BASE64URL
[32mBase64Spec:[0m
[32mBase64[0m
[32m- should encode to BASE64[0m
[32mBase64[0m
[32m- should encode to BASE64FILE[0m
[32mBase64[0m
[32m- should encode to BASE64URL[0m
[32mBase64[0m
[32m- should encode to BASE64NOPAD[0m
[32mBase64[0m
[32m- should encode to BASE64FILENOPAD[0m
[32mBase64[0m
[32m- should encode to BASE64URLNOPAD[0m
[32mBase64[0m
[32m- should decode from BASE64[0m
[32mBase64[0m
[32m- should decode from BASE64 w/o padding[0m
[32mBase64[0m
[32m- should fail with crap[0m
[32mBase64[0m
[32m- should decode from BASE64FILE[0m
[32mBase64[0m
[32m- should decode from BASE64FILE w/o padding[0m
[32mBase64[0m
[32m- should decode from BASE64URL[0m
Read from stdout: Run completed in 449 milliseconds.
Read from stdout: Total number of tests run: 27
Read from stdout: Suites: completed 5, aborted 0
Read from stdout: Tests: succeeded 27, failed 0, canceled 0, ignored 0, pending 0
Read from stdout: All tests passed.
Run completed in 449 milliseconds.
Total number of tests run: 27
Suites: completed 5, aborted 0
Tests: succeeded 27, failed 0, canceled 0, ignored 0, pending 0
All tests passed.
Passed tests:
	StreamCodecSpec
	Base64Spec
	StreamDecoderSpec
	Base32Spec
	Base16Spec
Total time: 2 s, completed 31.05.2016 15:17:36
> server-post-command-cleanup
> server-handle-next-server-request
> compile
Evaluating tasks: compile:compile
Running task... Cancel: sbt.server.ServerTaskCancellation@424f96e1, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base16.scala)
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base16.scala)

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base16.scala)

Read from stdout: Compiling 1 Scala source to /Users/lpfeiler/develop/github/base64/target/scala-2.11/classes...
Compiling 1 Scala source to /Users/lpfeiler/develop/github/base64/target/scala-2.11/classes...
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Running cached compiler 8a3a149, interfacing (CompilerInterface) with Scala compiler version 2.11.7
Calling Scala compiler with arguments  (CompilerInterface):
	-bootclasspath
	/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/classes:/Users/lpfeiler/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.11.7.jar
	-classpath
	/Users/lpfeiler/develop/github/base64/target/scala-2.11/classes
Scala compilation took 0.41940382 s
New invalidations:
	Set()
Initial set of included nodes: Set()
Previously invalidated, but (transitively) depend on new invalidations:
	Set()
All newly invalidated sources after taking into account (previously) recompiled sources:Set()
Total time: 1 s, completed 31.05.2016 15:17:53
> server-post-command-cleanup
> server-handle-next-server-request
> test
Evaluating tasks: test:test
Running task... Cancel: sbt.server.ServerTaskCancellation@2ac3b740, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set()
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set()

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set()

Copy resource mappings: 
	

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set()
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set()

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set()

Copy resource mappings: 
	
Framework implementation 'org.scalacheck.ScalaCheckFramework' not present.
Framework implementation 'org.specs2.runner.Specs2Framework' not present.
Framework implementation 'org.specs2.runner.SpecsFramework' not present.
Framework implementation 'org.specs.runner.SpecsFramework' not present.
Framework implementation 'com.novocode.junit.JUnitFramework' not present.
Subclass fingerprints: List((org.scalatest.Suite,false,org.scalatest.tools.Framework$$anon$1@1b3615ec))
Annotation fingerprints: List((org.scalatest.WrapWith,false,org.scalatest.tools.Framework$$anon$2@345e9130))
Running TaskDef(StreamDecoderSpec, org.scalatest.tools.Framework$$anon$1@1b3615ec, false, [SuiteSelector])
Running TaskDef(StreamCodecSpec, org.scalatest.tools.Framework$$anon$1@1b3615ec, false, [SuiteSelector])
Running TaskDef(Base64Spec, org.scalatest.tools.Framework$$anon$1@1b3615ec, false, [SuiteSelector])
Running TaskDef(Base32Spec, org.scalatest.tools.Framework$$anon$1@1b3615ec, false, [SuiteSelector])
Read from stdout: StreamDecoderSpec:
Read from stdout: StreamDecoder
Read from stdout: - should check allowed bytes
[32mStreamDecoderSpec:[0m
[32mStreamDecoder[0m
[32m- should check allowed bytes[0m
Running TaskDef(Base16Spec, org.scalatest.tools.Framework$$anon$1@1b3615ec, false, [SuiteSelector])
Read from stdout: Base16Spec:
Read from stdout: Base16
Read from stdout: - should encode to BASE16
[32mBase16Spec:[0m
[32mBase16[0m
[32m- should encode to BASE16[0m
Read from stdout: StreamCodecSpec:
Read from stdout: StreamCodec
Read from stdout: - should create a ByteStream
Read from stdout: StreamCodec
Read from stdout: - should create a IntStream
Read from stdout: StreamCodec
Read from stdout: - should create a groupStream
Read from stdout: StreamCodec
Read from stdout: - should create a filledStream
Read from stdout: StreamCodec
Read from stdout: - should flatten a filledStream
[32mStreamCodecSpec:[0m
[32mStreamCodec[0m
[32m- should create a ByteStream[0m
[32mStreamCodec[0m
[32m- should create a IntStream[0m
[32mStreamCodec[0m
[32m- should create a groupStream[0m
[32mStreamCodec[0m
[32m- should create a filledStream[0m
[32mStreamCodec[0m
[32m- should flatten a filledStream[0m
Read from stdout: Base32Spec:
Read from stdout: Base32
Read from stdout: - should encode to BASE32
Read from stdout: Base32
Read from stdout: - should encode to BASE32NOPAD
Read from stdout: Base32
Read from stdout: - should encode to BASE32URL
Read from stdout: Base32
Read from stdout: - should encode to BASE32HEX
Read from stdout: Base32
Read from stdout: - should encode to BASE32HEXNOPAD
Read from stdout: Base32
Read from stdout: - should encode to BASE32HEXURL
Read from stdout: Base32
Read from stdout: - should decode from BASE32
Read from stdout: Base32
Read from stdout: - should decode from BASE32 w/o padding
[32mBase32Spec:[0m
[32mBase32[0m
[32m- should encode to BASE32[0m
[32mBase32[0m
[32m- should encode to BASE32NOPAD[0m
[32mBase32[0m
[32m- should encode to BASE32URL[0m
[32mBase32[0m
[32m- should encode to BASE32HEX[0m
[32mBase32[0m
[32m- should encode to BASE32HEXNOPAD[0m
[32mBase32[0m
[32m- should encode to BASE32HEXURL[0m
[32mBase32[0m
[32m- should decode from BASE32[0m
[32mBase32[0m
[32m- should decode from BASE32 w/o padding[0m
Read from stdout: Base64Spec:
Read from stdout: Base64
Read from stdout: - should encode to BASE64
Read from stdout: Base64
Read from stdout: - should encode to BASE64FILE
Read from stdout: Base64
Read from stdout: - should encode to BASE64URL
Read from stdout: Base64
Read from stdout: - should encode to BASE64NOPAD
Read from stdout: Base64
Read from stdout: - should encode to BASE64FILENOPAD
Read from stdout: Base64
Read from stdout: - should encode to BASE64URLNOPAD
Read from stdout: Base64
Read from stdout: - should decode from BASE64
Read from stdout: Base64
Read from stdout: - should decode from BASE64 w/o padding
Read from stdout: Base64
Read from stdout: - should fail with crap
Read from stdout: Base64
Read from stdout: - should decode from BASE64FILE
Read from stdout: Base64
Read from stdout: - should decode from BASE64FILE w/o padding
Read from stdout: Base64
Read from stdout: - should decode from BASE64URL
[32mBase64Spec:[0m
[32mBase64[0m
[32m- should encode to BASE64[0m
[32mBase64[0m
[32m- should encode to BASE64FILE[0m
[32mBase64[0m
[32m- should encode to BASE64URL[0m
[32mBase64[0m
[32m- should encode to BASE64NOPAD[0m
[32mBase64[0m
[32m- should encode to BASE64FILENOPAD[0m
[32mBase64[0m
[32m- should encode to BASE64URLNOPAD[0m
[32mBase64[0m
[32m- should decode from BASE64[0m
[32mBase64[0m
[32m- should decode from BASE64 w/o padding[0m
[32mBase64[0m
[32m- should fail with crap[0m
[32mBase64[0m
[32m- should decode from BASE64FILE[0m
[32mBase64[0m
[32m- should decode from BASE64FILE w/o padding[0m
[32mBase64[0m
[32m- should decode from BASE64URL[0m
Read from stdout: Run completed in 585 milliseconds.
Read from stdout: Total number of tests run: 27
Read from stdout: Suites: completed 5, aborted 0
Read from stdout: Tests: succeeded 27, failed 0, canceled 0, ignored 0, pending 0
Read from stdout: All tests passed.
Run completed in 585 milliseconds.
Total number of tests run: 27
Suites: completed 5, aborted 0
Tests: succeeded 27, failed 0, canceled 0, ignored 0, pending 0
All tests passed.
Passed tests:
	StreamCodecSpec
	Base64Spec
	StreamDecoderSpec
	Base32Spec
	Base16Spec
Total time: 1 s, completed 31.05.2016 15:17:54
> server-post-command-cleanup
> server-handle-next-server-request
> compile
Evaluating tasks: compile:compile
Running task... Cancel: sbt.server.ServerTaskCancellation@71c405c1, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNEncoder.scala)
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNEncoder.scala)

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNEncoder.scala)

Read from stdout: Compiling 1 Scala source to /Users/lpfeiler/develop/github/base64/target/scala-2.11/classes...
Compiling 1 Scala source to /Users/lpfeiler/develop/github/base64/target/scala-2.11/classes...
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Running cached compiler 1628729e, interfacing (CompilerInterface) with Scala compiler version 2.11.7
Calling Scala compiler with arguments  (CompilerInterface):
	-bootclasspath
	/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/classes:/Users/lpfeiler/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.11.7.jar
	-classpath
	/Users/lpfeiler/develop/github/base64/target/scala-2.11/classes
Read from stdout: there were two feature warnings; re-run with -feature for details
there were two feature warnings; re-run with -feature for details
Read from stdout: one warning found
one warning found
Scala compilation took 0.70738318 s
New invalidations:
	Set()
Initial set of included nodes: Set()
Previously invalidated, but (transitively) depend on new invalidations:
	Set()
All newly invalidated sources after taking into account (previously) recompiled sources:Set()
Total time: 1 s, completed 31.05.2016 15:20:46
> server-post-command-cleanup
> server-handle-next-server-request
> compile
Evaluating tasks: compile:compile
Running task... Cancel: sbt.server.ServerTaskCancellation@664668f2, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNEncoder.scala)
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNEncoder.scala)

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNEncoder.scala)

Read from stdout: Compiling 1 Scala source to /Users/lpfeiler/develop/github/base64/target/scala-2.11/classes...
Compiling 1 Scala source to /Users/lpfeiler/develop/github/base64/target/scala-2.11/classes...
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Running cached compiler a5f5b59, interfacing (CompilerInterface) with Scala compiler version 2.11.7
Calling Scala compiler with arguments  (CompilerInterface):
	-bootclasspath
	/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/classes:/Users/lpfeiler/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.11.7.jar
	-classpath
	/Users/lpfeiler/develop/github/base64/target/scala-2.11/classes
Read from stdout: there were two feature warnings; re-run with -feature for details
there were two feature warnings; re-run with -feature for details
Read from stdout: one warning found
one warning found
Scala compilation took 0.469130652 s
New invalidations:
	Set()
Initial set of included nodes: Set()
Previously invalidated, but (transitively) depend on new invalidations:
	Set()
All newly invalidated sources after taking into account (previously) recompiled sources:Set()
Total time: 1 s, completed 31.05.2016 15:20:53
> server-post-command-cleanup
> server-handle-next-server-request
