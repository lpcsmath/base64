New log file opened at Mon May 30 11:44:43 CEST 2016 by 2606@Lothars-MacBook-Pro.fritz.box
jvm 2606@Lothars-MacBook-Pro.fritz.box
jvm vmName=Java HotSpot(TM) 64-Bit Server VM vmVendor=Oracle Corporation vmVersion=25.60-b23
jvm specName=Java Virtual Machine Specification specVendor=Oracle Corporation specVersion=1.8
jvm arguments: [-Xms256m, -Xmx1024m, -XX:MetaspaceSize=64m, -XX:MaxMetaspaceSize=256m]
Starting event engine
Starting sbt command engine
Waiting for sbt command engine
Command engine arguments=List()
Command engine baseDirectory=/Users/lpfeiler/develop/github/base64
Command engine initial remaining commands List(--initialize, onFailure load-failed, boot, server-send-ready-for-request, server-handle-next-server-request)
> --initialize
> initialize
> onFailure load-failed
> boot
> reload
[Loading] Scanning directory /Users/lpfeiler/develop/github/base64/project
[Loading] Found non-root projects 
[Loading] Done in /Users/lpfeiler/develop/github/base64/project, returning: ()
deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))))
  :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.JUnitXmlReportPlugin)
sorting: ns: List(sbt.plugins.CorePlugin, sbt.plugins.IvyPlugin, sbt.plugins.JvmPlugin, sbt.plugins.JUnitXmlReportPlugin)
  :: sorting:: found: List(sbt.plugins.CorePlugin) not found List(sbt.plugins.IvyPlugin, sbt.plugins.JvmPlugin, sbt.plugins.JUnitXmlReportPlugin)
  :: sorting:: found: List(sbt.plugins.CorePlugin, sbt.plugins.IvyPlugin) not found List(sbt.plugins.JvmPlugin, sbt.plugins.JUnitXmlReportPlugin)
  :: sorting:: found: List(sbt.plugins.CorePlugin, sbt.plugins.IvyPlugin, sbt.plugins.JvmPlugin) not found List(sbt.plugins.JUnitXmlReportPlugin)
  :: sorting:: found: List(sbt.plugins.CorePlugin, sbt.plugins.IvyPlugin, sbt.plugins.JvmPlugin, sbt.plugins.JUnitXmlReportPlugin) not found List()
  :: sorted deduced result: List(sbt.plugins.CorePlugin, sbt.plugins.IvyPlugin, sbt.plugins.JvmPlugin, sbt.plugins.JUnitXmlReportPlugin)
[Loading] Done in /Users/lpfeiler/develop/github/base64/project, returning: (base64-build)
Loading project definition from /Users/lpfeiler/develop/github/base64/project
Running task... Cancel: sbt.TaskCancellationStrategy$Null$@68110296, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set()
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set()

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set()

Copy resource mappings: 
	
[Loading] Scanning directory /Users/lpfeiler/develop/github/base64
[Loading] Found non-root projects 
[Loading] Done in /Users/lpfeiler/develop/github/base64, returning: ()
deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.BackgroundRunPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.BackgroundRunPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.InteractionServicePlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.SendEventServicePlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.SerializersPlugin)))))
  :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.SerializersPlugin,sbt.plugins.SendEventServicePlugin,sbt.plugins.InteractionServicePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.BackgroundRunPlugin,sbt.plugins.JUnitXmlReportPlugin)
sorting: ns: List(sbt.plugins.CorePlugin, sbt.plugins.SerializersPlugin, sbt.plugins.SendEventServicePlugin, sbt.plugins.InteractionServicePlugin, sbt.plugins.IvyPlugin, sbt.plugins.JvmPlugin, sbt.plugins.BackgroundRunPlugin, sbt.plugins.JUnitXmlReportPlugin)
  :: sorting:: found: List(sbt.plugins.CorePlugin) not found List(sbt.plugins.SerializersPlugin, sbt.plugins.SendEventServicePlugin, sbt.plugins.InteractionServicePlugin, sbt.plugins.IvyPlugin, sbt.plugins.JvmPlugin, sbt.plugins.BackgroundRunPlugin, sbt.plugins.JUnitXmlReportPlugin)
  :: sorting:: found: List(sbt.plugins.CorePlugin, sbt.plugins.SerializersPlugin, sbt.plugins.SendEventServicePlugin, sbt.plugins.InteractionServicePlugin, sbt.plugins.IvyPlugin) not found List(sbt.plugins.JvmPlugin, sbt.plugins.BackgroundRunPlugin, sbt.plugins.JUnitXmlReportPlugin)
  :: sorting:: found: List(sbt.plugins.CorePlugin, sbt.plugins.SerializersPlugin, sbt.plugins.SendEventServicePlugin, sbt.plugins.InteractionServicePlugin, sbt.plugins.IvyPlugin, sbt.plugins.JvmPlugin) not found List(sbt.plugins.BackgroundRunPlugin, sbt.plugins.JUnitXmlReportPlugin)
  :: sorting:: found: List(sbt.plugins.CorePlugin, sbt.plugins.SerializersPlugin, sbt.plugins.SendEventServicePlugin, sbt.plugins.InteractionServicePlugin, sbt.plugins.IvyPlugin, sbt.plugins.JvmPlugin, sbt.plugins.BackgroundRunPlugin, sbt.plugins.JUnitXmlReportPlugin) not found List()
  :: sorted deduced result: List(sbt.plugins.CorePlugin, sbt.plugins.SerializersPlugin, sbt.plugins.SendEventServicePlugin, sbt.plugins.InteractionServicePlugin, sbt.plugins.IvyPlugin, sbt.plugins.JvmPlugin, sbt.plugins.BackgroundRunPlugin, sbt.plugins.JUnitXmlReportPlugin)
[Loading] Done in /Users/lpfeiler/develop/github/base64, returning: (base64)
Set current project to base64 (in build file:/Users/lpfeiler/develop/github/base64/)
Reapplying settings...
Set current project to base64 (in build file:/Users/lpfeiler/develop/github/base64/)
> iflast shell
> server-send-ready-for-request
> server-handle-next-server-request
> compile
Evaluating tasks: compile:compile
Running task... Cancel: sbt.server.ServerTaskCancellation@68d7abc2, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala)
	modified: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/PercentDecoder.scala)
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/PercentDecoder.scala)

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/PercentDecoder.scala)

Read from stdout: Compiling 3 Scala sources to /Users/lpfeiler/develop/github/base64/target/scala-2.11/classes...
Compiling 3 Scala sources to /Users/lpfeiler/develop/github/base64/target/scala-2.11/classes...
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Running cached compiler 5e1402f, interfacing (CompilerInterface) with Scala compiler version 2.11.7
Calling Scala compiler with arguments  (CompilerInterface):
	-bootclasspath
	/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/classes:/Users/lpfeiler/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.11.7.jar
	-classpath
	/Users/lpfeiler/develop/github/base64/target/scala-2.11/classes
Scala compilation took 3.981715331 s
Invalidating /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala...
Invalidating (transitively) by inheritance from /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala...
Initial set of included nodes: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala)
Invalidated by transitive inheritance dependency: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala)
The /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala source file has the following regular definitions changed:
	percentDecode, decodeAndApply.
All member reference dependencies will be considered within this context.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
Invalidating /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala...
Invalidating (transitively) by inheritance from /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala...
Initial set of included nodes: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala)
Invalidated by transitive inheritance dependency: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala)
The /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala source file has the following regular definitions changed:
	.
All member reference dependencies will be considered within this context.
Invalidating /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/PercentDecoder.scala...
Invalidating (transitively) by inheritance from /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/PercentDecoder.scala...
Initial set of included nodes: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/PercentDecoder.scala)
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/PercentDecoder.scala
Invalidated by transitive inheritance dependency: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/PercentDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala)
The /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/PercentDecoder.scala source file has the following regular definitions changed:
	percentDecode, decodeAndApply.
All member reference dependencies will be considered within this context.
The following modified names cause invalidation of /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala: Set(percentDecode)
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
New invalidations:
	Set()
Initial set of included nodes: Set()
Previously invalidated, but (transitively) depend on new invalidations:
	Set()
All newly invalidated sources after taking into account (previously) recompiled sources:Set()
Total time: 6 s, completed 30.05.2016 11:44:58
> server-post-command-cleanup
> server-handle-next-server-request
> {file:/Users/lpfeiler/develop/github/base64/}base64/compile:discoveredMainClasses
Evaluating tasks: compile:discoveredMainClasses
Running task... Cancel: sbt.server.ServerTaskCancellation@705e2726, check cycles: false
Received TaskFinished for a task we don't know about TaskFinished(2,115,None,true,None)
Received TaskFinished for a task we don't know about TaskFinished(2,115,None,true,None)
Use 'last' for the full log.
> server-post-command-error-handler
> server-post-command-cleanup
> server-handle-next-server-request
> {file:/Users/lpfeiler/develop/github/base64/}base64/compile:mainClass
Evaluating tasks: compile:mainClass
Running task... Cancel: sbt.server.ServerTaskCancellation@7f35a7e5, check cycles: false
registered more than once? Task((triggeredBy: List(Task((taskDefinitionKey: ScopedKey(Scope(Select(ProjectRef(file:/Users/lpfeiler/develop/github/base64/,base64)),Select(ConfigKey(compile)),Global,Global),compile)))), taskDefinitionKey: ScopedKey(Scope(Select(ProjectRef(file:/Users/lpfeiler/develop/github/base64/,base64)),Select(ConfigKey(compile)),Global,Global),discoveredMainClasses)))
registered more than once? Task((triggeredBy: List(Task((taskDefinitionKey: ScopedKey(Scope(Select(ProjectRef(file:/Users/lpfeiler/develop/github/base64/,base64)),Select(ConfigKey(compile)),Global,Global),compile)))), taskDefinitionKey: ScopedKey(Scope(Select(ProjectRef(file:/Users/lpfeiler/develop/github/base64/,base64)),Select(ConfigKey(compile)),Global,Global),discoveredMainClasses)))
Use 'last' for the full log.
> server-post-command-error-handler
> server-post-command-cleanup
> server-handle-next-server-request
> test
Evaluating tasks: test:test
Running task... Cancel: sbt.server.ServerTaskCancellation@90997d0, check cycles: false
registered more than once? streams-manager
registered more than once? streams-manager
Use 'last' for the full log.
> server-post-command-error-handler
> server-post-command-cleanup
> server-handle-next-server-request
> {file:/Users/lpfeiler/develop/github/base64/}base64/compile:discoveredMainClasses
Evaluating tasks: compile:discoveredMainClasses
Running task... Cancel: sbt.server.ServerTaskCancellation@1ad04f3a, check cycles: false
registered more than once? Task((triggeredBy: List(Task((taskDefinitionKey: ScopedKey(Scope(Select(ProjectRef(file:/Users/lpfeiler/develop/github/base64/,base64)),Select(ConfigKey(compile)),Global,Global),compile)))), taskDefinitionKey: ScopedKey(Scope(Select(ProjectRef(file:/Users/lpfeiler/develop/github/base64/,base64)),Select(ConfigKey(compile)),Global,Global),discoveredMainClasses)))
registered more than once? Task((triggeredBy: List(Task((taskDefinitionKey: ScopedKey(Scope(Select(ProjectRef(file:/Users/lpfeiler/develop/github/base64/,base64)),Select(ConfigKey(compile)),Global,Global),compile)))), taskDefinitionKey: ScopedKey(Scope(Select(ProjectRef(file:/Users/lpfeiler/develop/github/base64/,base64)),Select(ConfigKey(compile)),Global,Global),discoveredMainClasses)))
Use 'last' for the full log.
> server-post-command-error-handler
> server-post-command-cleanup
> server-handle-next-server-request
