New log file opened at Fri Jun 03 09:33:05 CEST 2016 by 14506@Lothars-MacBook-Pro.fritz.box
jvm 14506@Lothars-MacBook-Pro.fritz.box
jvm vmName=Java HotSpot(TM) 64-Bit Server VM vmVendor=Oracle Corporation vmVersion=25.60-b23
jvm specName=Java Virtual Machine Specification specVendor=Oracle Corporation specVersion=1.8
jvm arguments: [-Xms256m, -Xmx1024m, -XX:MetaspaceSize=64m, -XX:MaxMetaspaceSize=256m]
Starting event engine
Starting sbt command engine
Command engine arguments=List()
Command engine baseDirectory=/Users/lpfeiler/develop/github/base64
Waiting for sbt command engine
Command engine initial remaining commands List(--initialize, onFailure load-failed, boot, server-send-ready-for-request, server-handle-next-server-request)
> --initialize
> initialize
> onFailure load-failed
> boot
> reload
[Loading] Scanning directory /Users/lpfeiler/develop/github/base64/project
[Loading] Found non-root projects 
[Loading] Done in /Users/lpfeiler/develop/github/base64/project, returning: ()
deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))))
  :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.JUnitXmlReportPlugin)
sorting: ns: List(sbt.plugins.CorePlugin, sbt.plugins.IvyPlugin, sbt.plugins.JvmPlugin, sbt.plugins.JUnitXmlReportPlugin)
  :: sorting:: found: List(sbt.plugins.CorePlugin) not found List(sbt.plugins.IvyPlugin, sbt.plugins.JvmPlugin, sbt.plugins.JUnitXmlReportPlugin)
  :: sorting:: found: List(sbt.plugins.CorePlugin, sbt.plugins.IvyPlugin) not found List(sbt.plugins.JvmPlugin, sbt.plugins.JUnitXmlReportPlugin)
  :: sorting:: found: List(sbt.plugins.CorePlugin, sbt.plugins.IvyPlugin, sbt.plugins.JvmPlugin) not found List(sbt.plugins.JUnitXmlReportPlugin)
  :: sorting:: found: List(sbt.plugins.CorePlugin, sbt.plugins.IvyPlugin, sbt.plugins.JvmPlugin, sbt.plugins.JUnitXmlReportPlugin) not found List()
  :: sorted deduced result: List(sbt.plugins.CorePlugin, sbt.plugins.IvyPlugin, sbt.plugins.JvmPlugin, sbt.plugins.JUnitXmlReportPlugin)
[Loading] Done in /Users/lpfeiler/develop/github/base64/project, returning: (base64-build)
Loading project definition from /Users/lpfeiler/develop/github/base64/project
Running task... Cancel: sbt.TaskCancellationStrategy$Null$@2de6ad23, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set()
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set()

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set()

Copy resource mappings: 
	
[Loading] Scanning directory /Users/lpfeiler/develop/github/base64
[Loading] Found non-root projects 
[Loading] Done in /Users/lpfeiler/develop/github/base64, returning: ()
deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.BackgroundRunPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.BackgroundRunPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.InteractionServicePlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.SendEventServicePlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.SerializersPlugin)))))
  :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.SerializersPlugin,sbt.plugins.SendEventServicePlugin,sbt.plugins.InteractionServicePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.BackgroundRunPlugin,sbt.plugins.JUnitXmlReportPlugin)
sorting: ns: List(sbt.plugins.CorePlugin, sbt.plugins.SerializersPlugin, sbt.plugins.SendEventServicePlugin, sbt.plugins.InteractionServicePlugin, sbt.plugins.IvyPlugin, sbt.plugins.JvmPlugin, sbt.plugins.BackgroundRunPlugin, sbt.plugins.JUnitXmlReportPlugin)
  :: sorting:: found: List(sbt.plugins.CorePlugin) not found List(sbt.plugins.SerializersPlugin, sbt.plugins.SendEventServicePlugin, sbt.plugins.InteractionServicePlugin, sbt.plugins.IvyPlugin, sbt.plugins.JvmPlugin, sbt.plugins.BackgroundRunPlugin, sbt.plugins.JUnitXmlReportPlugin)
  :: sorting:: found: List(sbt.plugins.CorePlugin, sbt.plugins.SerializersPlugin, sbt.plugins.SendEventServicePlugin, sbt.plugins.InteractionServicePlugin, sbt.plugins.IvyPlugin) not found List(sbt.plugins.JvmPlugin, sbt.plugins.BackgroundRunPlugin, sbt.plugins.JUnitXmlReportPlugin)
  :: sorting:: found: List(sbt.plugins.CorePlugin, sbt.plugins.SerializersPlugin, sbt.plugins.SendEventServicePlugin, sbt.plugins.InteractionServicePlugin, sbt.plugins.IvyPlugin, sbt.plugins.JvmPlugin) not found List(sbt.plugins.BackgroundRunPlugin, sbt.plugins.JUnitXmlReportPlugin)
  :: sorting:: found: List(sbt.plugins.CorePlugin, sbt.plugins.SerializersPlugin, sbt.plugins.SendEventServicePlugin, sbt.plugins.InteractionServicePlugin, sbt.plugins.IvyPlugin, sbt.plugins.JvmPlugin, sbt.plugins.BackgroundRunPlugin, sbt.plugins.JUnitXmlReportPlugin) not found List()
  :: sorted deduced result: List(sbt.plugins.CorePlugin, sbt.plugins.SerializersPlugin, sbt.plugins.SendEventServicePlugin, sbt.plugins.InteractionServicePlugin, sbt.plugins.IvyPlugin, sbt.plugins.JvmPlugin, sbt.plugins.BackgroundRunPlugin, sbt.plugins.JUnitXmlReportPlugin)
[Loading] Done in /Users/lpfeiler/develop/github/base64, returning: (base64)
Set current project to base64 (in build file:/Users/lpfeiler/develop/github/base64/)
Reapplying settings...
Set current project to base64 (in build file:/Users/lpfeiler/develop/github/base64/)
> iflast shell
> server-send-ready-for-request
> server-handle-next-server-request
> compile
Evaluating tasks: compile:compile
Running task... Cancel: sbt.server.ServerTaskCancellation@281dd783, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala)
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala)

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala)

Read from stdout: Compiling 2 Scala sources to /Users/lpfeiler/develop/github/base64/target/scala-2.11/classes...
Compiling 2 Scala sources to /Users/lpfeiler/develop/github/base64/target/scala-2.11/classes...
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Running cached compiler 2763712, interfacing (CompilerInterface) with Scala compiler version 2.11.7
Calling Scala compiler with arguments  (CompilerInterface):
	-bootclasspath
	/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/classes:/Users/lpfeiler/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.11.7.jar
	-classpath
	/Users/lpfeiler/develop/github/base64/target/scala-2.11/classes
Read from stdout: /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala:223: missing arguments for method chars in class BaseNDecoder;
Read from stdout: follow this method with `_' if you want to treat it as a partially applied function
/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala:223: missing arguments for method chars in class BaseNDecoder;
follow this method with `_' if you want to treat it as a partially applied function
Read from stdout: protected def allowedByte(b: Byte) = chars.keySet contains b
    protected def allowedByte(b: Byte) = chars.keySet contains b
Read from stdout: ^
                                         ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala:242: missing arguments for method chars in class BaseNDecoder;
Read from stdout: follow this method with `_' if you want to treat it as a partially applied function
/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala:242: missing arguments for method chars in class BaseNDecoder;
follow this method with `_' if you want to treat it as a partially applied function
Read from stdout: else chars get s.head match {
        else chars get s.head match {
Read from stdout: ^
             ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala:243: type mismatch;
Read from stdout: found   : Any
Read from stdout: required: Byte
/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala:243: type mismatch;
 found   : Any
 required: Byte
Read from stdout: case Some(x) => x #:: invertBytes(s.tail)
            case Some(x) => x #:: invertBytes(s.tail)
Read from stdout: ^
                              ^
Read from stdout: three errors found
three errors found
Compilation failed (CompilerInterface)
Read from stdout: (compile:compileIncremental) Compilation failed
(compile:compileIncremental) Compilation failed
Total time: 6 s, completed 03.06.2016 09:33:14
> server-post-command-error-handler
> server-post-command-cleanup
> server-handle-next-server-request
> {file:/Users/lpfeiler/develop/github/base64/}base64/compile:discoveredMainClasses
Evaluating tasks: compile:discoveredMainClasses
Running task... Cancel: sbt.server.ServerTaskCancellation@5210cfff, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala)
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala)

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala)

Read from stdout: Compiling 2 Scala sources to /Users/lpfeiler/develop/github/base64/target/scala-2.11/classes...
Compiling 2 Scala sources to /Users/lpfeiler/develop/github/base64/target/scala-2.11/classes...
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Running cached compiler 258f2128, interfacing (CompilerInterface) with Scala compiler version 2.11.7
Calling Scala compiler with arguments  (CompilerInterface):
	-bootclasspath
	/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/classes:/Users/lpfeiler/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.11.7.jar
	-classpath
	/Users/lpfeiler/develop/github/base64/target/scala-2.11/classes
Read from stdout: /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala:223: missing arguments for method chars in class BaseNDecoder;
Read from stdout: follow this method with `_' if you want to treat it as a partially applied function
/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala:223: missing arguments for method chars in class BaseNDecoder;
follow this method with `_' if you want to treat it as a partially applied function
Read from stdout: protected def allowedByte(b: Byte) = chars.keySet contains b
    protected def allowedByte(b: Byte) = chars.keySet contains b
Read from stdout: ^
                                         ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala:242: missing arguments for method chars in class BaseNDecoder;
Read from stdout: follow this method with `_' if you want to treat it as a partially applied function
/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala:242: missing arguments for method chars in class BaseNDecoder;
follow this method with `_' if you want to treat it as a partially applied function
Read from stdout: else chars get s.head match {
        else chars get s.head match {
Read from stdout: ^
             ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala:243: type mismatch;
Read from stdout: found   : Any
Read from stdout: required: Byte
/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala:243: type mismatch;
 found   : Any
 required: Byte
Read from stdout: case Some(x) => x #:: invertBytes(s.tail)
            case Some(x) => x #:: invertBytes(s.tail)
Read from stdout: ^
                              ^
Read from stdout: three errors found
three errors found
Compilation failed (CompilerInterface)
Read from stdout: (compile:compileIncremental) Compilation failed
(compile:compileIncremental) Compilation failed
Total time: 2 s, completed 03.06.2016 09:33:17
> server-post-command-error-handler
> server-post-command-cleanup
> server-handle-next-server-request
> {file:/Users/lpfeiler/develop/github/base64/}base64/compile:mainClass
Evaluating tasks: compile:mainClass
Running task... Cancel: sbt.server.ServerTaskCancellation@34609f25, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala)
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala)

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala)

Read from stdout: Compiling 2 Scala sources to /Users/lpfeiler/develop/github/base64/target/scala-2.11/classes...
Compiling 2 Scala sources to /Users/lpfeiler/develop/github/base64/target/scala-2.11/classes...
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Running cached compiler 2c6cc1c0, interfacing (CompilerInterface) with Scala compiler version 2.11.7
Calling Scala compiler with arguments  (CompilerInterface):
	-bootclasspath
	/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/classes:/Users/lpfeiler/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.11.7.jar
	-classpath
	/Users/lpfeiler/develop/github/base64/target/scala-2.11/classes
Read from stdout: /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala:223: missing arguments for method chars in class BaseNDecoder;
Read from stdout: follow this method with `_' if you want to treat it as a partially applied function
/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala:223: missing arguments for method chars in class BaseNDecoder;
follow this method with `_' if you want to treat it as a partially applied function
Read from stdout: protected def allowedByte(b: Byte) = chars.keySet contains b
    protected def allowedByte(b: Byte) = chars.keySet contains b
Read from stdout: ^
                                         ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala:242: missing arguments for method chars in class BaseNDecoder;
Read from stdout: follow this method with `_' if you want to treat it as a partially applied function
/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala:242: missing arguments for method chars in class BaseNDecoder;
follow this method with `_' if you want to treat it as a partially applied function
Read from stdout: else chars get s.head match {
        else chars get s.head match {
Read from stdout: ^
             ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala:243: type mismatch;
Read from stdout: found   : Any
Read from stdout: required: Byte
/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala:243: type mismatch;
 found   : Any
 required: Byte
Read from stdout: case Some(x) => x #:: invertBytes(s.tail)
            case Some(x) => x #:: invertBytes(s.tail)
Read from stdout: ^
                              ^
Read from stdout: three errors found
three errors found
Compilation failed (CompilerInterface)
Read from stdout: (compile:compileIncremental) Compilation failed
(compile:compileIncremental) Compilation failed
Total time: 2 s, completed 03.06.2016 09:33:19
> server-post-command-error-handler
> server-post-command-cleanup
> server-handle-next-server-request
> compile
Evaluating tasks: compile:compile
Running task... Cancel: sbt.server.ServerTaskCancellation@2e382895, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala)
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala)

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala)

Read from stdout: Compiling 2 Scala sources to /Users/lpfeiler/develop/github/base64/target/scala-2.11/classes...
Compiling 2 Scala sources to /Users/lpfeiler/develop/github/base64/target/scala-2.11/classes...
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Running cached compiler 609c5bec, interfacing (CompilerInterface) with Scala compiler version 2.11.7
Calling Scala compiler with arguments  (CompilerInterface):
	-bootclasspath
	/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/classes:/Users/lpfeiler/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.11.7.jar
	-classpath
	/Users/lpfeiler/develop/github/base64/target/scala-2.11/classes
Read from stdout: /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala:223: missing arguments for method chars in class BaseNDecoder;
Read from stdout: follow this method with `_' if you want to treat it as a partially applied function
/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala:223: missing arguments for method chars in class BaseNDecoder;
follow this method with `_' if you want to treat it as a partially applied function
Read from stdout: protected def allowedByte(b: Byte) = chars.keySet contains b
    protected def allowedByte(b: Byte) = chars.keySet contains b
Read from stdout: ^
                                         ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala:242: missing arguments for method chars in class BaseNDecoder;
Read from stdout: follow this method with `_' if you want to treat it as a partially applied function
/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala:242: missing arguments for method chars in class BaseNDecoder;
follow this method with `_' if you want to treat it as a partially applied function
Read from stdout: else chars get s.head match {
        else chars get s.head match {
Read from stdout: ^
             ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala:243: type mismatch;
Read from stdout: found   : Any
Read from stdout: required: Byte
/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala:243: type mismatch;
 found   : Any
 required: Byte
Read from stdout: case Some(x) => x #:: invertBytes(s.tail)
            case Some(x) => x #:: invertBytes(s.tail)
Read from stdout: ^
                              ^
Read from stdout: three errors found
three errors found
Compilation failed (CompilerInterface)
Read from stdout: (compile:compileIncremental) Compilation failed
(compile:compileIncremental) Compilation failed
Total time: 1 s, completed 03.06.2016 09:34:14
> server-post-command-error-handler
> server-post-command-cleanup
> server-handle-next-server-request
> compile
Evaluating tasks: compile:compile
Running task... Cancel: sbt.server.ServerTaskCancellation@310d8b55, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala)
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala)

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala)

Read from stdout: Compiling 2 Scala sources to /Users/lpfeiler/develop/github/base64/target/scala-2.11/classes...
Compiling 2 Scala sources to /Users/lpfeiler/develop/github/base64/target/scala-2.11/classes...
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Running cached compiler 57526eb0, interfacing (CompilerInterface) with Scala compiler version 2.11.7
Calling Scala compiler with arguments  (CompilerInterface):
	-bootclasspath
	/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/classes:/Users/lpfeiler/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.11.7.jar
	-classpath
	/Users/lpfeiler/develop/github/base64/target/scala-2.11/classes
Read from stdout: /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala:15: `abstract' modifier can be used only for classes; it should be omitted for abstract members
/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala:15: `abstract' modifier can be used only for classes; it should be omitted for abstract members
Read from stdout: abstract def chars(x: Byte): Byte
    abstract def chars(x: Byte): Byte
Read from stdout: ^
                 ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala:223: missing arguments for method chars in class BaseNDecoder;
Read from stdout: follow this method with `_' if you want to treat it as a partially applied function
/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala:223: missing arguments for method chars in class BaseNDecoder;
follow this method with `_' if you want to treat it as a partially applied function
Read from stdout: protected def allowedByte(b: Byte) = chars.keySet contains b
    protected def allowedByte(b: Byte) = chars.keySet contains b
Read from stdout: ^
                                         ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala:242: missing arguments for method chars in class BaseNDecoder;
Read from stdout: follow this method with `_' if you want to treat it as a partially applied function
/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala:242: missing arguments for method chars in class BaseNDecoder;
follow this method with `_' if you want to treat it as a partially applied function
Read from stdout: else chars get s.head match {
        else chars get s.head match {
Read from stdout: ^
             ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala:243: type mismatch;
Read from stdout: found   : Any
Read from stdout: required: Byte
/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala:243: type mismatch;
 found   : Any
 required: Byte
Read from stdout: case Some(x) => x #:: invertBytes(s.tail)
            case Some(x) => x #:: invertBytes(s.tail)
Read from stdout: ^
                              ^
Read from stdout: four errors found
four errors found
Compilation failed (CompilerInterface)
Read from stdout: (compile:compileIncremental) Compilation failed
(compile:compileIncremental) Compilation failed
Total time: 2 s, completed 03.06.2016 09:34:48
> server-post-command-error-handler
> server-post-command-cleanup
> server-handle-next-server-request
> compile
Evaluating tasks: compile:compile
Running task... Cancel: sbt.server.ServerTaskCancellation@1857dede, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala)
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala)

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala)

Read from stdout: Compiling 2 Scala sources to /Users/lpfeiler/develop/github/base64/target/scala-2.11/classes...
Compiling 2 Scala sources to /Users/lpfeiler/develop/github/base64/target/scala-2.11/classes...
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Running cached compiler 543e09bc, interfacing (CompilerInterface) with Scala compiler version 2.11.7
Calling Scala compiler with arguments  (CompilerInterface):
	-bootclasspath
	/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/classes:/Users/lpfeiler/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.11.7.jar
	-classpath
	/Users/lpfeiler/develop/github/base64/target/scala-2.11/classes
Read from stdout: /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala:223: missing arguments for method chars in class BaseNDecoder;
Read from stdout: follow this method with `_' if you want to treat it as a partially applied function
/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala:223: missing arguments for method chars in class BaseNDecoder;
follow this method with `_' if you want to treat it as a partially applied function
Read from stdout: protected def allowedByte(b: Byte) = chars.keySet contains b
    protected def allowedByte(b: Byte) = chars.keySet contains b
Read from stdout: ^
                                         ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala:242: missing arguments for method chars in class BaseNDecoder;
Read from stdout: follow this method with `_' if you want to treat it as a partially applied function
/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala:242: missing arguments for method chars in class BaseNDecoder;
follow this method with `_' if you want to treat it as a partially applied function
Read from stdout: else chars get s.head match {
        else chars get s.head match {
Read from stdout: ^
             ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala:243: type mismatch;
Read from stdout: found   : Any
Read from stdout: required: Byte
/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala:243: type mismatch;
 found   : Any
 required: Byte
Read from stdout: case Some(x) => x #:: invertBytes(s.tail)
            case Some(x) => x #:: invertBytes(s.tail)
Read from stdout: ^
                              ^
Read from stdout: three errors found
three errors found
Compilation failed (CompilerInterface)
Read from stdout: (compile:compileIncremental) Compilation failed
(compile:compileIncremental) Compilation failed
Total time: 2 s, completed 03.06.2016 09:35:12
> server-post-command-error-handler
> server-post-command-cleanup
> server-handle-next-server-request
> compile
Evaluating tasks: compile:compile
Running task... Cancel: sbt.server.ServerTaskCancellation@21c8b752, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNEncoder.scala)
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNEncoder.scala)

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNEncoder.scala)

Read from stdout: Compiling 1 Scala source to /Users/lpfeiler/develop/github/base64/target/scala-2.11/classes...
Compiling 1 Scala source to /Users/lpfeiler/develop/github/base64/target/scala-2.11/classes...
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Running cached compiler 52d4b36f, interfacing (CompilerInterface) with Scala compiler version 2.11.7
Calling Scala compiler with arguments  (CompilerInterface):
	-bootclasspath
	/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/classes:/Users/lpfeiler/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.11.7.jar
	-classpath
	/Users/lpfeiler/develop/github/base64/target/scala-2.11/classes
Read from stdout: there were two feature warnings; re-run with -feature for details
there were two feature warnings; re-run with -feature for details
Read from stdout: one warning found
one warning found
Scala compilation took 2.59451376 s
Invalidating /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNEncoder.scala...
Invalidating (transitively) by inheritance from /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNEncoder.scala...
Initial set of included nodes: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNEncoder.scala)
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Encoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNEncoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileEncoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Encoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlEncoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileEncoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base16Encoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNEncoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Encoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNEncoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlEncoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Encoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexEncoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Encoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlEncoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexEncoder.scala
Invalidated by transitive inheritance dependency: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Encoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base16Encoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Encoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexEncoder.scala)
The /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNEncoder.scala source file has the following regular definitions changed:
	chars.
All member reference dependencies will be considered within this context.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
The following modified names cause invalidation of /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileEncoder.scala: Set(chars)
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
The following modified names cause invalidation of /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Encoder.scala: Set(chars)
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseN.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
The following modified names cause invalidation of /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base16Encoder.scala: Set(chars)
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base16.scala. This dependency is not being considered for invalidation.
The following modified names cause invalidation of /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Encoder.scala: Set(chars)
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base16.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlEncoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlEncoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
The following modified names cause invalidation of /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexEncoder.scala: Set(chars)
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlEncoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
New invalidations:
	Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Encoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base16Encoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Encoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexEncoder.scala)
Initial set of included nodes: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Encoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base16Encoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Encoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexEncoder.scala)
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Encoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileEncoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Encoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlEncoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileEncoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlEncoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base16.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base16Encoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexEncoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Encoder.scala
Previously invalidated, but (transitively) depend on new invalidations:
	Set()
All newly invalidated sources after taking into account (previously) recompiled sources:Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Encoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base16Encoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Encoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexEncoder.scala)
Read from stdout: Compiling 8 Scala sources to /Users/lpfeiler/develop/github/base64/target/scala-2.11/classes...
Compiling 8 Scala sources to /Users/lpfeiler/develop/github/base64/target/scala-2.11/classes...
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Running cached compiler 56b1e0ec, interfacing (CompilerInterface) with Scala compiler version 2.11.7
Calling Scala compiler with arguments  (CompilerInterface):
	-bootclasspath
	/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/classes:/Users/lpfeiler/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.11.7.jar
	-classpath
	/Users/lpfeiler/develop/github/base64/target/scala-2.11/classes
Read from stdout: /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base16Encoder.scala:10: class Base16Encoder needs to be abstract, since method chars in class BaseNEncoder of type (x: Byte)Byte is not defined
/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base16Encoder.scala:10: class Base16Encoder needs to be abstract, since method chars in class BaseNEncoder of type (x: Byte)Byte is not defined
Read from stdout: class Base16Encoder extends BaseNEncoder {
class Base16Encoder extends BaseNEncoder {
Read from stdout: ^
      ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base16Encoder.scala:20: value chars overrides nothing.
Read from stdout: Note: the super classes of class Base16Encoder contain the following, non final members named chars:
Read from stdout: protected def chars(x: Byte): Byte
/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base16Encoder.scala:20: value chars overrides nothing.
Note: the super classes of class Base16Encoder contain the following, non final members named chars:
protected def chars(x: Byte): Byte
Read from stdout: override val chars = Vector() ++ (((48 to 57) map (_.toByte)) ++
    override val chars = Vector() ++ (((48 to 57) map (_.toByte)) ++
Read from stdout: ^
                                  ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Encoder.scala:10: class Base32Encoder needs to be abstract, since method chars in class BaseNEncoder of type (x: Byte)Byte is not defined
/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Encoder.scala:10: class Base32Encoder needs to be abstract, since method chars in class BaseNEncoder of type (x: Byte)Byte is not defined
Read from stdout: class Base32Encoder extends BaseNEncoder {
class Base32Encoder extends BaseNEncoder {
Read from stdout: ^
      ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Encoder.scala:20: value chars overrides nothing.
Read from stdout: Note: the super classes of class Base32Encoder contain the following, non final members named chars:
Read from stdout: protected def chars(x: Byte): Byte
/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Encoder.scala:20: value chars overrides nothing.
Note: the super classes of class Base32Encoder contain the following, non final members named chars:
protected def chars(x: Byte): Byte
Read from stdout: override val chars = Vector() ++ (((65 to 90) map (_.toByte)) ++
    override val chars = Vector() ++ (((65 to 90) map (_.toByte)) ++
Read from stdout: ^
                                  ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexEncoder.scala:10: class Base32HexEncoder needs to be abstract, since method chars in class BaseNEncoder of type (x: Byte)Byte is not defined
/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexEncoder.scala:10: class Base32HexEncoder needs to be abstract, since method chars in class BaseNEncoder of type (x: Byte)Byte is not defined
Read from stdout: class Base32HexEncoder extends Base32Encoder {
class Base32HexEncoder extends Base32Encoder {
Read from stdout: ^
      ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlEncoder.scala:10: class Base32HexUrlEncoder needs to be abstract, since method chars in class BaseNEncoder of type (x: Byte)Byte is not defined
/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlEncoder.scala:10: class Base32HexUrlEncoder needs to be abstract, since method chars in class BaseNEncoder of type (x: Byte)Byte is not defined
Read from stdout: class Base32HexUrlEncoder extends Base32HexEncoder with UrlPadding { }
class Base32HexUrlEncoder extends Base32HexEncoder with UrlPadding { }
Read from stdout: ^
      ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlEncoder.scala:10: class Base32UrlEncoder needs to be abstract, since method chars in class BaseNEncoder of type (x: Byte)Byte is not defined
/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlEncoder.scala:10: class Base32UrlEncoder needs to be abstract, since method chars in class BaseNEncoder of type (x: Byte)Byte is not defined
Read from stdout: class Base32UrlEncoder extends Base32Encoder with UrlPadding { }
class Base32UrlEncoder extends Base32Encoder with UrlPadding { }
Read from stdout: ^
      ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Encoder.scala:10: class Base64Encoder needs to be abstract, since method chars in class BaseNEncoder of type (x: Byte)Byte is not defined
/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Encoder.scala:10: class Base64Encoder needs to be abstract, since method chars in class BaseNEncoder of type (x: Byte)Byte is not defined
Read from stdout: class Base64Encoder extends BaseNEncoder {
class Base64Encoder extends BaseNEncoder {
Read from stdout: ^
      ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Encoder.scala:20: value chars overrides nothing.
Read from stdout: Note: the super classes of class Base64Encoder contain the following, non final members named chars:
Read from stdout: protected def chars(x: Byte): Byte
/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Encoder.scala:20: value chars overrides nothing.
Note: the super classes of class Base64Encoder contain the following, non final members named chars:
protected def chars(x: Byte): Byte
Read from stdout: override val chars = Vector() ++ (((65 to 90) map (_.toByte)) ++
    override val chars = Vector() ++ (((65 to 90) map (_.toByte)) ++
Read from stdout: ^
                                  ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileEncoder.scala:10: class Base64FileEncoder needs to be abstract, since method chars in class BaseNEncoder of type (x: Byte)Byte is not defined
/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileEncoder.scala:10: class Base64FileEncoder needs to be abstract, since method chars in class BaseNEncoder of type (x: Byte)Byte is not defined
Read from stdout: class Base64FileEncoder extends Base64Encoder {
class Base64FileEncoder extends Base64Encoder {
Read from stdout: ^
      ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlEncoder.scala:10: class Base64UrlEncoder needs to be abstract, since method chars in class BaseNEncoder of type (x: Byte)Byte is not defined
/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlEncoder.scala:10: class Base64UrlEncoder needs to be abstract, since method chars in class BaseNEncoder of type (x: Byte)Byte is not defined
Read from stdout: class Base64UrlEncoder extends Base64FileEncoder with UrlPadding { }
class Base64UrlEncoder extends Base64FileEncoder with UrlPadding { }
Read from stdout: ^
      ^
Read from stdout: 11 errors found
11 errors found
Compilation failed (CompilerInterface)
Read from stdout: (compile:compileIncremental) Compilation failed
(compile:compileIncremental) Compilation failed
Total time: 5 s, completed 03.06.2016 09:37:01
> server-post-command-error-handler
> server-post-command-cleanup
> server-handle-next-server-request
> compile
Evaluating tasks: compile:compile
Running task... Cancel: sbt.server.ServerTaskCancellation@1b9c563f, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set()
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set()

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set()

Total time: 0 s, completed 03.06.2016 09:37:29
> server-post-command-cleanup
> server-handle-next-server-request
> {file:/Users/lpfeiler/develop/github/base64/}base64/compile:discoveredMainClasses
Evaluating tasks: compile:discoveredMainClasses
Running task... Cancel: sbt.server.ServerTaskCancellation@7ec0f13b, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set()
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set()

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set()

Total time: 0 s, completed 03.06.2016 09:37:30
> server-post-command-cleanup
> server-handle-next-server-request
> {file:/Users/lpfeiler/develop/github/base64/}base64/compile:mainClass
Evaluating tasks: compile:mainClass
Running task... Cancel: sbt.server.ServerTaskCancellation@675a5b0d, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set()
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set()

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set()

Total time: 0 s, completed 03.06.2016 09:37:30
> server-post-command-cleanup
> server-handle-next-server-request
> test
Evaluating tasks: test:test
Running task... Cancel: sbt.server.ServerTaskCancellation@30894c9e, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set()
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set()

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set()

Copy resource mappings: 
	
The de.csmath.codec.Codec$ source file has the following regular definitions changed:
	BASE32URLNOPAD.
All member reference dependencies will be considered within this context.
Files invalidated by inheriting from (external) de.csmath.codec.Codec$: Set(); now invalidating by inheritance (internally).
Getting direct dependencies of all sources transitively invalidated by inheritance.
Getting sources that directly depend on (external) de.csmath.codec.Codec$.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/test/scala/Base16Spec.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/test/scala/Base32Spec.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/test/scala/Base64Spec.scala. This dependency is not being considered for invalidation.

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set()
Removed products: Set()
External API changes: API Changes: Set(NamesChange(de.csmath.codec.Codec$,ModifiedNames(regularNames = BASE32URLNOPAD, implicitNames = )))
Modified binary dependencies: Set()
Initial directly invalidated sources: Set()

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set()

Copy resource mappings: 
	
Framework implementation 'org.scalacheck.ScalaCheckFramework' not present.
Framework implementation 'org.specs2.runner.Specs2Framework' not present.
Framework implementation 'org.specs2.runner.SpecsFramework' not present.
Framework implementation 'org.specs.runner.SpecsFramework' not present.
Framework implementation 'com.novocode.junit.JUnitFramework' not present.
Subclass fingerprints: List((org.scalatest.Suite,false,org.scalatest.tools.Framework$$anon$1@3883994))
Annotation fingerprints: List((org.scalatest.WrapWith,false,org.scalatest.tools.Framework$$anon$2@1a752df4))
Running TaskDef(Base32Spec, org.scalatest.tools.Framework$$anon$1@3883994, false, [SuiteSelector])
Running TaskDef(StreamDecoderSpec, org.scalatest.tools.Framework$$anon$1@3883994, false, [SuiteSelector])
Running TaskDef(StreamEncoderSpec, org.scalatest.tools.Framework$$anon$1@3883994, false, [SuiteSelector])
Running TaskDef(Base16Spec, org.scalatest.tools.Framework$$anon$1@3883994, false, [SuiteSelector])
Read from stdout: StreamDecoderSpec:
Read from stdout: StreamDecoder
Read from stdout: - should check allowed bytes
Read from stdout: StreamEncoderSpec:
[32mStreamDecoderSpec:[0m
[32mStreamDecoder[0m
[32m- should check allowed bytes[0m
Read from stdout: StreamEncoder
Read from stdout: - should create a IntStream
[32mStreamEncoderSpec:[0m
[32mStreamEncoder[0m
Read from stdout: Base16Spec:
Read from stdout: Base16
[32m- should create a IntStream[0m
Read from stdout: - should encode to BASE16
Read from stdout: Base16
Read from stdout: - should decode from BASE16
Read from stdout: Base16
Read from stdout: - should decode from BASE16 with known size
Read from stdout: Base32Spec:
Read from stdout: Base32
Read from stdout: - should encode to BASE32
Read from stdout: Base32
Read from stdout: - should encode to BASE32NOPAD
Read from stdout: Base32
Read from stdout: - should encode to BASE32URL
Read from stdout: Base32
Read from stdout: - should encode to BASE32HEX
Read from stdout: Base32
Running TaskDef(Base64Spec, org.scalatest.tools.Framework$$anon$1@3883994, false, [SuiteSelector])
Read from stdout: - should encode to BASE32HEXNOPAD
Read from stdout: Base32
Read from stdout: - should encode to BASE32HEXURL
Read from stdout: Base32
[32mBase16Spec:[0m
[32mBase16[0m
[32m- should encode to BASE16[0m
Running TaskDef(StreamCodecSpec, org.scalatest.tools.Framework$$anon$1@3883994, false, [SuiteSelector])
[32mBase16[0m
[32m- should decode from BASE16[0m
[32mBase16[0m
[32m- should decode from BASE16 with known size[0m
Read from stdout: - should decode from BASE32
Read from stdout: Base32
Read from stdout: - should decode from BASE32 w/o padding
Read from stdout: Base32
Read from stdout: - should decode from BASE32URL
Read from stdout: Base32
Read from stdout: - should decode from BASE32HEX
Read from stdout: Base32
Read from stdout: - should decode from BASE32HEX w/o padding
Read from stdout: Base32
Read from stdout: - should decode from BASE32HEXURL
[32mBase32Spec:[0m
[32mBase32[0m
[32m- should encode to BASE32[0m
[32mBase32[0m
[32m- should encode to BASE32NOPAD[0m
[32mBase32[0m
[32m- should encode to BASE32URL[0m
[32mBase32[0m
[32m- should encode to BASE32HEX[0m
[32mBase32[0m
[32m- should encode to BASE32HEXNOPAD[0m
[32mBase32[0m
[32m- should encode to BASE32HEXURL[0m
[32mBase32[0m
[32m- should decode from BASE32[0m
[32mBase32[0m
[32m- should decode from BASE32 w/o padding[0m
[32mBase32[0m
[32m- should decode from BASE32URL[0m
[32mBase32[0m
[32m- should decode from BASE32HEX[0m
[32mBase32[0m
[32m- should decode from BASE32HEX w/o padding[0m
[32mBase32[0m
[32m- should decode from BASE32HEXURL[0m
Read from stdout: StreamCodecSpec:
Read from stdout: StreamCodec
Read from stdout: - should create a ByteStream
Read from stdout: StreamCodec
Read from stdout: - should create a groupStream
Read from stdout: StreamCodec
Read from stdout: - should create a filledStream
Read from stdout: StreamCodec
Read from stdout: - should flatten a filledStream
[32mStreamCodecSpec:[0m
[32mStreamCodec[0m
[32m- should create a ByteStream[0m
[32mStreamCodec[0m
Read from stdout: Base64Spec:
[32m- should create a groupStream[0m
[32mStreamCodec[0m
[32m- should create a filledStream[0m
[32mStreamCodec[0m
Read from stdout: Base64
Read from stdout: - should encode to BASE64
Read from stdout: Base64
Read from stdout: - should encode to BASE64FILE
Read from stdout: Base64
Read from stdout: - should encode to BASE64URL
Read from stdout: Base64
Read from stdout: - should encode to BASE64NOPAD
Read from stdout: Base64
Read from stdout: - should encode to BASE64FILENOPAD
Read from stdout: Base64
Read from stdout: - should encode to BASE64URLNOPAD
Read from stdout: Base64
Read from stdout: - should decode from BASE64
Read from stdout: Base64
Read from stdout: - should decode from BASE64 w/o padding
Read from stdout: Base64
Read from stdout: - should fail with crap
Read from stdout: Base64
Read from stdout: - should decode from BASE64FILE
Read from stdout: Base64
Read from stdout: - should decode from BASE64FILE w/o padding
Read from stdout: Base64
Read from stdout: - should decode from BASE64URL
[32mBase64Spec:[0m
[32mBase64[0m
[32m- should encode to BASE64[0m
[32mBase64[0m
[32m- should encode to BASE64FILE[0m
[32mBase64[0m
[32m- should encode to BASE64URL[0m
[32mBase64[0m
[32m- should encode to BASE64NOPAD[0m
[32mBase64[0m
[32m- should encode to BASE64FILENOPAD[0m
[32mBase64[0m
[32m- should encode to BASE64URLNOPAD[0m
[32mBase64[0m
[32m- should decode from BASE64[0m
[32mBase64[0m
[32m- should decode from BASE64 w/o padding[0m
[32mBase64[0m
[32m- should fail with crap[0m
[32mBase64[0m
[32m- should flatten a filledStream[0m
[32m- should decode from BASE64FILE[0m
[32mBase64[0m
[32m- should decode from BASE64FILE w/o padding[0m
[32mBase64[0m
[32m- should decode from BASE64URL[0m
Read from stdout: Run completed in 1 second, 130 milliseconds.
Read from stdout: Total number of tests run: 33
Read from stdout: Suites: completed 6, aborted 0
Read from stdout: Tests: succeeded 33, failed 0, canceled 0, ignored 0, pending 0
Read from stdout: All tests passed.
Run completed in 1 second, 130 milliseconds.
Total number of tests run: 33
Suites: completed 6, aborted 0
Tests: succeeded 33, failed 0, canceled 0, ignored 0, pending 0
All tests passed.
Passed tests:
	StreamEncoderSpec
	StreamCodecSpec
	Base64Spec
	StreamDecoderSpec
	Base32Spec
	Base16Spec
Total time: 2 s, completed 03.06.2016 09:37:32
> server-post-command-cleanup
> server-handle-next-server-request
