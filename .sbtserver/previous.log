New log file opened at Tue May 31 21:45:02 CEST 2016 by 7285@Lothars-MBP.fritz.box
jvm 7285@Lothars-MBP.fritz.box
jvm vmName=Java HotSpot(TM) 64-Bit Server VM vmVendor=Oracle Corporation vmVersion=25.60-b23
jvm specName=Java Virtual Machine Specification specVendor=Oracle Corporation specVersion=1.8
jvm arguments: [-Xms256m, -Xmx1024m, -XX:MetaspaceSize=64m, -XX:MaxMetaspaceSize=256m]
Starting event engine
Starting sbt command engine
Waiting for sbt command engine
Command engine arguments=List()
Command engine baseDirectory=/Users/lpfeiler/develop/github/base64
Command engine initial remaining commands List(--initialize, onFailure load-failed, boot, server-send-ready-for-request, server-handle-next-server-request)
> --initialize
> initialize
> onFailure load-failed
> boot
> reload
[Loading] Scanning directory /Users/lpfeiler/develop/github/base64/project
[Loading] Found non-root projects 
[Loading] Done in /Users/lpfeiler/develop/github/base64/project, returning: ()
deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))))
  :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.JUnitXmlReportPlugin)
sorting: ns: List(sbt.plugins.CorePlugin, sbt.plugins.IvyPlugin, sbt.plugins.JvmPlugin, sbt.plugins.JUnitXmlReportPlugin)
  :: sorting:: found: List(sbt.plugins.CorePlugin) not found List(sbt.plugins.IvyPlugin, sbt.plugins.JvmPlugin, sbt.plugins.JUnitXmlReportPlugin)
  :: sorting:: found: List(sbt.plugins.CorePlugin, sbt.plugins.IvyPlugin) not found List(sbt.plugins.JvmPlugin, sbt.plugins.JUnitXmlReportPlugin)
  :: sorting:: found: List(sbt.plugins.CorePlugin, sbt.plugins.IvyPlugin, sbt.plugins.JvmPlugin) not found List(sbt.plugins.JUnitXmlReportPlugin)
  :: sorting:: found: List(sbt.plugins.CorePlugin, sbt.plugins.IvyPlugin, sbt.plugins.JvmPlugin, sbt.plugins.JUnitXmlReportPlugin) not found List()
  :: sorted deduced result: List(sbt.plugins.CorePlugin, sbt.plugins.IvyPlugin, sbt.plugins.JvmPlugin, sbt.plugins.JUnitXmlReportPlugin)
[Loading] Done in /Users/lpfeiler/develop/github/base64/project, returning: (base64-build)
Loading project definition from /Users/lpfeiler/develop/github/base64/project
Running task... Cancel: sbt.TaskCancellationStrategy$Null$@5ea7a523, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set()
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set()

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set()

Copy resource mappings: 
	
[Loading] Scanning directory /Users/lpfeiler/develop/github/base64
[Loading] Found non-root projects 
[Loading] Done in /Users/lpfeiler/develop/github/base64, returning: ()
deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.BackgroundRunPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.BackgroundRunPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.InteractionServicePlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.SendEventServicePlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.SerializersPlugin)))))
  :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.SerializersPlugin,sbt.plugins.SendEventServicePlugin,sbt.plugins.InteractionServicePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.BackgroundRunPlugin,sbt.plugins.JUnitXmlReportPlugin)
sorting: ns: List(sbt.plugins.CorePlugin, sbt.plugins.SerializersPlugin, sbt.plugins.SendEventServicePlugin, sbt.plugins.InteractionServicePlugin, sbt.plugins.IvyPlugin, sbt.plugins.JvmPlugin, sbt.plugins.BackgroundRunPlugin, sbt.plugins.JUnitXmlReportPlugin)
  :: sorting:: found: List(sbt.plugins.CorePlugin) not found List(sbt.plugins.SerializersPlugin, sbt.plugins.SendEventServicePlugin, sbt.plugins.InteractionServicePlugin, sbt.plugins.IvyPlugin, sbt.plugins.JvmPlugin, sbt.plugins.BackgroundRunPlugin, sbt.plugins.JUnitXmlReportPlugin)
  :: sorting:: found: List(sbt.plugins.CorePlugin, sbt.plugins.SerializersPlugin, sbt.plugins.SendEventServicePlugin, sbt.plugins.InteractionServicePlugin, sbt.plugins.IvyPlugin) not found List(sbt.plugins.JvmPlugin, sbt.plugins.BackgroundRunPlugin, sbt.plugins.JUnitXmlReportPlugin)
  :: sorting:: found: List(sbt.plugins.CorePlugin, sbt.plugins.SerializersPlugin, sbt.plugins.SendEventServicePlugin, sbt.plugins.InteractionServicePlugin, sbt.plugins.IvyPlugin, sbt.plugins.JvmPlugin) not found List(sbt.plugins.BackgroundRunPlugin, sbt.plugins.JUnitXmlReportPlugin)
  :: sorting:: found: List(sbt.plugins.CorePlugin, sbt.plugins.SerializersPlugin, sbt.plugins.SendEventServicePlugin, sbt.plugins.InteractionServicePlugin, sbt.plugins.IvyPlugin, sbt.plugins.JvmPlugin, sbt.plugins.BackgroundRunPlugin, sbt.plugins.JUnitXmlReportPlugin) not found List()
  :: sorted deduced result: List(sbt.plugins.CorePlugin, sbt.plugins.SerializersPlugin, sbt.plugins.SendEventServicePlugin, sbt.plugins.InteractionServicePlugin, sbt.plugins.IvyPlugin, sbt.plugins.JvmPlugin, sbt.plugins.BackgroundRunPlugin, sbt.plugins.JUnitXmlReportPlugin)
[Loading] Done in /Users/lpfeiler/develop/github/base64, returning: (base64)
Set current project to base64 (in build file:/Users/lpfeiler/develop/github/base64/)
Reapplying settings...
Set current project to base64 (in build file:/Users/lpfeiler/develop/github/base64/)
> iflast shell
> server-send-ready-for-request
> server-handle-next-server-request
> {file:/Users/lpfeiler/develop/github/base64/}base64/compile:discoveredMainClasses
Evaluating tasks: compile:discoveredMainClasses
Running task... Cancel: sbt.server.ServerTaskCancellation@459178ef, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set()
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set()

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set()

Total time: 1 s, completed 31.05.2016 21:45:07
> server-post-command-cleanup
> server-handle-next-server-request
> {file:/Users/lpfeiler/develop/github/base64/}base64/compile:mainClass
Evaluating tasks: compile:mainClass
Running task... Cancel: sbt.server.ServerTaskCancellation@307a6c2f, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set()
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set()

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set()

Total time: 1 s, completed 31.05.2016 21:45:08
> server-post-command-cleanup
> server-handle-next-server-request
> {file:/Users/lpfeiler/develop/github/base64/}base64/compile:discoveredMainClasses
Evaluating tasks: compile:discoveredMainClasses
Running task... Cancel: sbt.server.ServerTaskCancellation@3644b9dc, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set()
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set()

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set()

Total time: 1 s, completed 31.05.2016 21:45:08
> server-post-command-cleanup
> server-handle-next-server-request
> {file:/Users/lpfeiler/develop/github/base64/}base64/compile:mainClass
Evaluating tasks: compile:mainClass
Running task... Cancel: sbt.server.ServerTaskCancellation@490c24de, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set()
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set()

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set()

Total time: 0 s, completed 31.05.2016 21:45:09
> server-post-command-cleanup
> server-handle-next-server-request
> compile
Evaluating tasks: compile:compile
Running task... Cancel: sbt.server.ServerTaskCancellation@7618e123, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamCodec.scala)
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamCodec.scala)

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamCodec.scala)

Read from stdout: Compiling 1 Scala source to /Users/lpfeiler/develop/github/base64/target/scala-2.11/classes...
Compiling 1 Scala source to /Users/lpfeiler/develop/github/base64/target/scala-2.11/classes...
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Running cached compiler 7778b0a3, interfacing (CompilerInterface) with Scala compiler version 2.11.7
Calling Scala compiler with arguments  (CompilerInterface):
	-bootclasspath
	/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/classes:/Users/lpfeiler/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.11.7.jar
	-classpath
	/Users/lpfeiler/develop/github/base64/target/scala-2.11/classes
Read from stdout: there was one feature warning; re-run with -feature for details
there was one feature warning; re-run with -feature for details
Read from stdout: one warning found
one warning found
Scala compilation took 4.493767444 s
Invalidating /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamCodec.scala...
Invalidating (transitively) by inheritance from /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamCodec.scala...
Initial set of included nodes: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamCodec.scala)
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNEncoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamCodec.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Encoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNEncoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileEncoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Encoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlEncoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileEncoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base16Encoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNEncoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Encoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNEncoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlEncoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Encoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexEncoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Encoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlEncoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexEncoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamCodec.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Decoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Decoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala
Invalidated by transitive inheritance dependency: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Encoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Decoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamCodec.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base16Encoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Encoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexEncoder.scala)
The /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamCodec.scala source file has the following regular definitions changed:
	flatten, filledStream, intStream, groupStreamAux, groupStream, groupBStreamAux, groupBStream, byteStream.
All member reference dependencies will be considered within this context.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileEncoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
The following modified names cause invalidation of /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNEncoder.scala: Set(flatten, filledStream, intStream, groupStream)
The following modified names cause invalidation of /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala: Set(flatten, groupBStream)
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Encoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseN.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base16Encoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base16.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Encoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base16.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlEncoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlEncoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexEncoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseN.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Decoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlEncoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
New invalidations:
	Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Encoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Decoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base16Encoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Encoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexEncoder.scala)
Initial set of included nodes: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Encoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Decoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base16Encoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Encoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexEncoder.scala)
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Encoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileEncoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Encoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlEncoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileEncoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Decoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlEncoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseN.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNEncoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base16.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseN.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base16Encoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNEncoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Encoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNEncoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlEncoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Encoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexEncoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Encoder.scala
Previously invalidated, but (transitively) depend on new invalidations:
	Set()
All newly invalidated sources after taking into account (previously) recompiled sources:Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Encoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Decoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base16Encoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Encoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexEncoder.scala)
Recompiling all 26 sources: invalidated sources (17) exceeded 50.0% of all sources
Read from stdout: Compiling 26 Scala sources to /Users/lpfeiler/develop/github/base64/target/scala-2.11/classes...
Compiling 26 Scala sources to /Users/lpfeiler/develop/github/base64/target/scala-2.11/classes...
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Running cached compiler 433380db, interfacing (CompilerInterface) with Scala compiler version 2.11.7
Calling Scala compiler with arguments  (CompilerInterface):
	-bootclasspath
	/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/classes:/Users/lpfeiler/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.11.7.jar
	-classpath
	/Users/lpfeiler/develop/github/base64/target/scala-2.11/classes
Read from stdout: there were four feature warnings; re-run with -feature for details
there were four feature warnings; re-run with -feature for details
Read from stdout: one warning found
one warning found
Scala compilation took 5.089527058 s
Invalidating /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala...
Invalidating (transitively) by inheritance from /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala...
Initial set of included nodes: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala)
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala
Invalidated by transitive inheritance dependency: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala)
The /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala source file has the following regular definitions changed:
	flatten, filledStream, intStream, groupStreamAux, groupStream, groupBStreamAux, groupBStream, byteStream.
All member reference dependencies will be considered within this context.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
Invalidating /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Encoder.scala...
Invalidating (transitively) by inheritance from /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Encoder.scala...
Initial set of included nodes: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Encoder.scala)
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileEncoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Encoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlEncoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileEncoder.scala
Invalidated by transitive inheritance dependency: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Encoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlEncoder.scala)
The /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Encoder.scala source file has the following regular definitions changed:
	flatten, filledStream, intStream, groupStreamAux, groupStream, groupBStreamAux, groupBStream, byteStream.
All member reference dependencies will be considered within this context.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlEncoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileEncoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
Invalidating /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlEncoder.scala...
Invalidating (transitively) by inheritance from /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlEncoder.scala...
Initial set of included nodes: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlEncoder.scala)
Invalidated by transitive inheritance dependency: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlEncoder.scala)
The /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlEncoder.scala source file has the following regular definitions changed:
	flatten, filledStream, intStream, groupStreamAux, groupStream, groupBStreamAux, groupBStream, byteStream.
All member reference dependencies will be considered within this context.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
Invalidating /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNEncoder.scala...
Invalidating (transitively) by inheritance from /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNEncoder.scala...
Initial set of included nodes: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNEncoder.scala)
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Encoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNEncoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlEncoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Encoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexEncoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Encoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlEncoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexEncoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base16Encoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNEncoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Encoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNEncoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileEncoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Encoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlEncoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileEncoder.scala
Invalidated by transitive inheritance dependency: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Encoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base16Encoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Encoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexEncoder.scala)
The /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNEncoder.scala source file has the following regular definitions changed:
	flatten, filledStream, intStream, groupStreamAux, groupStream, groupBStreamAux, groupBStream, byteStream.
All member reference dependencies will be considered within this context.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileEncoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Encoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseN.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base16Encoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base16.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Encoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base16.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlEncoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlEncoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexEncoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlEncoder.scala. This dependency is not being considered for invalidation.
Invalidating /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala...
Invalidating (transitively) by inheritance from /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala...
Initial set of included nodes: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala)
Invalidated by transitive inheritance dependency: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala)
The /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala source file has the following regular definitions changed:
	flatten, filledStream, intStream, groupStreamAux, groupStream, groupBStreamAux, groupBStream, byteStream.
All member reference dependencies will be considered within this context.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
Invalidating /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala...
Invalidating (transitively) by inheritance from /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala...
Initial set of included nodes: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala)
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala
Invalidated by transitive inheritance dependency: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala)
The /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala source file has the following regular definitions changed:
	flatten, filledStream, intStream, groupStreamAux, groupStream, groupBStreamAux, groupBStream, byteStream.
All member reference dependencies will be considered within this context.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
Invalidating /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileEncoder.scala...
Invalidating (transitively) by inheritance from /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileEncoder.scala...
Initial set of included nodes: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileEncoder.scala)
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlEncoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileEncoder.scala
Invalidated by transitive inheritance dependency: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlEncoder.scala)
The /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileEncoder.scala source file has the following regular definitions changed:
	flatten, filledStream, intStream, groupStreamAux, groupStream, groupBStreamAux, groupBStream, byteStream.
All member reference dependencies will be considered within this context.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlEncoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
Invalidating /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlEncoder.scala...
Invalidating (transitively) by inheritance from /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlEncoder.scala...
Initial set of included nodes: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlEncoder.scala)
Invalidated by transitive inheritance dependency: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlEncoder.scala)
The /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlEncoder.scala source file has the following regular definitions changed:
	flatten, filledStream, intStream, groupStreamAux, groupStream, groupBStreamAux, groupBStream, byteStream.
All member reference dependencies will be considered within this context.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
Invalidating /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala...
Invalidating (transitively) by inheritance from /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala...
Initial set of included nodes: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala)
Invalidated by transitive inheritance dependency: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala)
The /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala source file has the following regular definitions changed:
	flatten, filledStream, intStream, groupStreamAux, groupStream, groupBStreamAux, groupBStream, byteStream.
All member reference dependencies will be considered within this context.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
Invalidating /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Decoder.scala...
Invalidating (transitively) by inheritance from /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Decoder.scala...
Initial set of included nodes: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Decoder.scala)
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Decoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala
Invalidated by transitive inheritance dependency: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Decoder.scala)
The /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Decoder.scala source file has the following regular definitions changed:
	flatten, filledStream, intStream, groupStreamAux, groupStream, groupBStreamAux, groupBStream, byteStream.
All member reference dependencies will be considered within this context.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
Invalidating /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base16Encoder.scala...
Invalidating (transitively) by inheritance from /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base16Encoder.scala...
Initial set of included nodes: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base16Encoder.scala)
Invalidated by transitive inheritance dependency: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base16Encoder.scala)
The /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base16Encoder.scala source file has the following regular definitions changed:
	flatten, filledStream, intStream, groupStreamAux, groupStream, groupBStreamAux, groupBStream, byteStream.
All member reference dependencies will be considered within this context.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base16.scala. This dependency is not being considered for invalidation.
Invalidating /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlEncoder.scala...
Invalidating (transitively) by inheritance from /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlEncoder.scala...
Initial set of included nodes: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlEncoder.scala)
Invalidated by transitive inheritance dependency: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlEncoder.scala)
The /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlEncoder.scala source file has the following regular definitions changed:
	flatten, filledStream, intStream, groupStreamAux, groupStream, groupBStreamAux, groupBStream, byteStream.
All member reference dependencies will be considered within this context.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
Invalidating /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala...
Invalidating (transitively) by inheritance from /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala...
Initial set of included nodes: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala)
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala
Invalidated by transitive inheritance dependency: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala)
The /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala source file has the following regular definitions changed:
	flatten, filledStream, intStream, groupStreamAux, groupStream, groupBStreamAux, groupBStream, byteStream.
All member reference dependencies will be considered within this context.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
Invalidating /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexEncoder.scala...
Invalidating (transitively) by inheritance from /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexEncoder.scala...
Initial set of included nodes: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexEncoder.scala)
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlEncoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexEncoder.scala
Invalidated by transitive inheritance dependency: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlEncoder.scala)
The /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexEncoder.scala source file has the following regular definitions changed:
	flatten, filledStream, intStream, groupStreamAux, groupStream, groupBStreamAux, groupBStream, byteStream.
All member reference dependencies will be considered within this context.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlEncoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
Invalidating /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Encoder.scala...
Invalidating (transitively) by inheritance from /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Encoder.scala...
Initial set of included nodes: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Encoder.scala)
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlEncoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Encoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexEncoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Encoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlEncoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexEncoder.scala
Invalidated by transitive inheritance dependency: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Encoder.scala)
The /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Encoder.scala source file has the following regular definitions changed:
	flatten, filledStream, intStream, groupStreamAux, groupStream, groupBStreamAux, groupBStream, byteStream.
All member reference dependencies will be considered within this context.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlEncoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlEncoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexEncoder.scala. This dependency is not being considered for invalidation.
Invalidating /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala...
Invalidating (transitively) by inheritance from /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala...
Initial set of included nodes: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala)
Invalidated by transitive inheritance dependency: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala)
The /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala source file has the following regular definitions changed:
	flatten, filledStream, intStream, groupStreamAux, groupStream, groupBStreamAux, groupBStream, byteStream.
All member reference dependencies will be considered within this context.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
Invalidating /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala...
Invalidating (transitively) by inheritance from /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala...
Initial set of included nodes: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala)
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Decoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Decoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala
Invalidated by transitive inheritance dependency: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Decoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala)
The /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala source file has the following regular definitions changed:
	flatten, filledStream, intStream, groupStreamAux, groupStream, groupBStreamAux, groupBStream, byteStream.
All member reference dependencies will be considered within this context.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseN.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Decoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala. This dependency is not being considered for invalidation.
New invalidations:
	Set()
Initial set of included nodes: Set()
Previously invalidated, but (transitively) depend on new invalidations:
	Set()
All newly invalidated sources after taking into account (previously) recompiled sources:Set()
Total time: 10 s, completed 31.05.2016 22:04:40
> server-post-command-cleanup
> server-handle-next-server-request
> compile
Evaluating tasks: compile:compile
Running task... Cancel: sbt.server.ServerTaskCancellation@370d535, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamDecoder.scala)
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamDecoder.scala)

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamDecoder.scala)

Read from stdout: Compiling 1 Scala source to /Users/lpfeiler/develop/github/base64/target/scala-2.11/classes...
Compiling 1 Scala source to /Users/lpfeiler/develop/github/base64/target/scala-2.11/classes...
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Running cached compiler 6150133c, interfacing (CompilerInterface) with Scala compiler version 2.11.7
Calling Scala compiler with arguments  (CompilerInterface):
	-bootclasspath
	/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/classes:/Users/lpfeiler/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.11.7.jar
	-classpath
	/Users/lpfeiler/develop/github/base64/target/scala-2.11/classes
Scala compilation took 0.593394257 s
Invalidating /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamDecoder.scala...
Invalidating (transitively) by inheritance from /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamDecoder.scala...
Initial set of included nodes: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamDecoder.scala)
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamDecoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Decoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Decoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/PercentDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamDecoder.scala
Invalidated by transitive inheritance dependency: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Decoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/PercentDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala)
The /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamDecoder.scala source file has the following regular definitions changed:
	filteredStream, checkedByteStream.
All member reference dependencies will be considered within this context.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
The following modified names cause invalidation of /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala: Set(filteredStream, checkedByteStream)
The following modified names cause invalidation of /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/PercentDecoder.scala: Set(checkedByteStream)
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseN.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Decoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala. This dependency is not being considered for invalidation.
New invalidations:
	Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Decoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/PercentDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala)
Initial set of included nodes: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Decoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/PercentDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala)
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Decoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseN.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base16.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseN.scala
Previously invalidated, but (transitively) depend on new invalidations:
	Set()
All newly invalidated sources after taking into account (previously) recompiled sources:Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Decoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/PercentDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala)
Read from stdout: Compiling 9 Scala sources to /Users/lpfeiler/develop/github/base64/target/scala-2.11/classes...
Compiling 9 Scala sources to /Users/lpfeiler/develop/github/base64/target/scala-2.11/classes...
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Running cached compiler 2d50341e, interfacing (CompilerInterface) with Scala compiler version 2.11.7
Calling Scala compiler with arguments  (CompilerInterface):
	-bootclasspath
	/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/classes:/Users/lpfeiler/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.11.7.jar
	-classpath
	/Users/lpfeiler/develop/github/base64/target/scala-2.11/classes
Scala compilation took 2.258740618 s
Invalidating /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala...
Invalidating (transitively) by inheritance from /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala...
Initial set of included nodes: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala)
Invalidated by transitive inheritance dependency: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala)
The /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala source file has the following regular definitions changed:
	checkedByteStream, filteredStream.
All member reference dependencies will be considered within this context.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
Invalidating /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala...
Invalidating (transitively) by inheritance from /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala...
Initial set of included nodes: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala)
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala
Invalidated by transitive inheritance dependency: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala)
The /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala source file has the following regular definitions changed:
	checkedByteStream, filteredStream.
All member reference dependencies will be considered within this context.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
Invalidating /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/PercentDecoder.scala...
Invalidating (transitively) by inheritance from /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/PercentDecoder.scala...
Initial set of included nodes: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/PercentDecoder.scala)
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/PercentDecoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/PercentDecoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/PercentDecoder.scala
Invalidated by transitive inheritance dependency: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/PercentDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala)
The /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/PercentDecoder.scala source file has the following regular definitions changed:
	filteredStream, checkedByteStream.
All member reference dependencies will be considered within this context.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
Invalidating /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala...
Invalidating (transitively) by inheritance from /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala...
Initial set of included nodes: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala)
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Decoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Decoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala
Invalidated by transitive inheritance dependency: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Decoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala)
The /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala source file has the following regular definitions changed:
	checkedByteStream, filteredStream.
All member reference dependencies will be considered within this context.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseN.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Decoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala. This dependency is not being considered for invalidation.
Invalidating /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Decoder.scala...
Invalidating (transitively) by inheritance from /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Decoder.scala...
Initial set of included nodes: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Decoder.scala)
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Decoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala
Invalidated by transitive inheritance dependency: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Decoder.scala)
The /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Decoder.scala source file has the following regular definitions changed:
	filteredStream, checkedByteStream.
All member reference dependencies will be considered within this context.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
Invalidating /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala...
Invalidating (transitively) by inheritance from /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala...
Initial set of included nodes: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala)
Invalidated by transitive inheritance dependency: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala)
The /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala source file has the following regular definitions changed:
	checkedByteStream, filteredStream.
All member reference dependencies will be considered within this context.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
Invalidating /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala...
Invalidating (transitively) by inheritance from /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala...
Initial set of included nodes: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala)
Invalidated by transitive inheritance dependency: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala)
The /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala source file has the following regular definitions changed:
	filteredStream, checkedByteStream.
All member reference dependencies will be considered within this context.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
Invalidating /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala...
Invalidating (transitively) by inheritance from /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala...
Initial set of included nodes: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala)
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala
Invalidated by transitive inheritance dependency: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala)
The /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala source file has the following regular definitions changed:
	filteredStream, checkedByteStream.
All member reference dependencies will be considered within this context.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
Invalidating /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala...
Invalidating (transitively) by inheritance from /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala...
Initial set of included nodes: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala)
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala
Invalidated by transitive inheritance dependency: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala)
The /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala source file has the following regular definitions changed:
	checkedByteStream, filteredStream.
All member reference dependencies will be considered within this context.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
New invalidations:
	Set()
Initial set of included nodes: Set()
Previously invalidated, but (transitively) depend on new invalidations:
	Set()
All newly invalidated sources after taking into account (previously) recompiled sources:Set()
Total time: 3 s, completed 31.05.2016 22:06:07
> server-post-command-cleanup
> server-handle-next-server-request
> test
Evaluating tasks: test:test
Running task... Cancel: sbt.server.ServerTaskCancellation@1181626, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set()
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set()

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set()

Copy resource mappings: 
	
The de.csmath.codec.Codec$ source file has the following regular definitions changed:
	needPads.
All member reference dependencies will be considered within this context.
Files invalidated by inheriting from (external) de.csmath.codec.Codec$: Set(); now invalidating by inheritance (internally).
Getting direct dependencies of all sources transitively invalidated by inheritance.
Getting sources that directly depend on (external) de.csmath.codec.Codec$.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/test/scala/Base16Spec.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/test/scala/Base32Spec.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/test/scala/Base64Spec.scala. This dependency is not being considered for invalidation.
The de.csmath.codec.StreamDecoder source file has the following regular definitions changed:
	filteredStream, checkedByteStream.
All member reference dependencies will be considered within this context.
Files invalidated by inheriting from (external) de.csmath.codec.StreamDecoder: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala); now invalidating by inheritance (internally).
Invalidating (transitively) by inheritance from /Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala...
Initial set of included nodes: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala)
Invalidated by transitive inheritance dependency: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala)
Getting direct dependencies of all sources transitively invalidated by inheritance.
Getting sources that directly depend on (external) de.csmath.codec.StreamDecoder.
The following modified names cause invalidation of /Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala: Set(checkedByteStream)
The de.csmath.codec.StreamCodec source file has the following regular definitions changed:
	flatten, filledStream, intStream, groupStreamAux, groupStream, groupBStreamAux, groupBStream, byteStream.
All member reference dependencies will be considered within this context.
Files invalidated by inheriting from (external) de.csmath.codec.StreamCodec: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala); now invalidating by inheritance (internally).
Invalidating (transitively) by inheritance from /Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala...
Initial set of included nodes: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala)
Invalidated by transitive inheritance dependency: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala)
Getting direct dependencies of all sources transitively invalidated by inheritance.
Getting sources that directly depend on (external) de.csmath.codec.StreamCodec.
The following modified names cause invalidation of /Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala: Set(flatten, filledStream, intStream, groupStream, groupBStream, byteStream)

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set()
Removed products: Set()
External API changes: API Changes: Set(NamesChange(de.csmath.codec.Codec$,ModifiedNames(regularNames = needPads, implicitNames = )), NamesChange(de.csmath.codec.StreamDecoder,ModifiedNames(regularNames = filteredStream, checkedByteStream, implicitNames = )), NamesChange(de.csmath.codec.StreamCodec,ModifiedNames(regularNames = flatten, filledStream, intStream, groupStreamAux, groupStream, groupBStreamAux, groupBStream, byteStream, implicitNames = )))
Modified binary dependencies: Set()
Initial directly invalidated sources: Set()

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala, /Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala)
All initially invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala, /Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala)

Read from stdout: Compiling 2 Scala sources to /Users/lpfeiler/develop/github/base64/target/scala-2.11/test-classes...
Compiling 2 Scala sources to /Users/lpfeiler/develop/github/base64/target/scala-2.11/test-classes...
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Running cached compiler 557e7a8b, interfacing (CompilerInterface) with Scala compiler version 2.11.7
Calling Scala compiler with arguments  (CompilerInterface):
	-bootclasspath
	/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/classes:/Users/lpfeiler/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.11.7.jar
	-classpath
	/Users/lpfeiler/develop/github/base64/target/scala-2.11/test-classes:/Users/lpfeiler/develop/github/base64/target/scala-2.11/classes:/Users/lpfeiler/develop/scala/activator-dist-1.3.6/repository/org.scalatest/scalatest_2.11/2.2.4/bundles/scalatest_2.11.jar:/Users/lpfeiler/develop/scala/activator-dist-1.3.6/repository/org.scala-lang/scala-reflect/2.11.2/jars/scala-reflect.jar:/Users/lpfeiler/develop/scala/activator-dist-1.3.6/repository/org.scala-lang.modules/scala-xml_2.11/1.0.2/bundles/scala-xml_2.11.jar
Read from stdout: /Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala:11: method byteStream in trait StreamCodec cannot be accessed in de.csmath.codec.StreamCodec
Read from stdout: Access to protected method byteStream not permitted because
Read from stdout: enclosing class StreamCodecSpec is not a subclass of 
Read from stdout: trait StreamCodec in package codec where target is defined
/Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala:11: method byteStream in trait StreamCodec cannot be accessed in de.csmath.codec.StreamCodec
 Access to protected method byteStream not permitted because
 enclosing class StreamCodecSpec is not a subclass of 
 trait StreamCodec in package codec where target is defined
Read from stdout: val s = sc.byteStream(list)
      val s = sc.byteStream(list)
Read from stdout: ^
                 ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala:23: method intStream in trait StreamCodec cannot be accessed in de.csmath.codec.StreamCodec
Read from stdout: Access to protected method intStream not permitted because
Read from stdout: enclosing class StreamCodecSpec is not a subclass of 
Read from stdout: trait StreamCodec in package codec where target is defined
/Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala:23: method intStream in trait StreamCodec cannot be accessed in de.csmath.codec.StreamCodec
 Access to protected method intStream not permitted because
 enclosing class StreamCodecSpec is not a subclass of 
 trait StreamCodec in package codec where target is defined
Read from stdout: val s = sc.intStream(list)
      val s = sc.intStream(list)
Read from stdout: ^
                 ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala:35: method intStream in trait StreamCodec cannot be accessed in de.csmath.codec.StreamCodec
Read from stdout: Access to protected method intStream not permitted because
Read from stdout: enclosing class StreamCodecSpec is not a subclass of 
Read from stdout: trait StreamCodec in package codec where target is defined
/Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala:35: method intStream in trait StreamCodec cannot be accessed in de.csmath.codec.StreamCodec
 Access to protected method intStream not permitted because
 enclosing class StreamCodecSpec is not a subclass of 
 trait StreamCodec in package codec where target is defined
Read from stdout: val s = sc.intStream(list)
      val s = sc.intStream(list)
Read from stdout: ^
                 ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala:36: method groupStream in trait StreamCodec cannot be accessed in de.csmath.codec.StreamCodec
Read from stdout: Access to protected method groupStream not permitted because
Read from stdout: enclosing class StreamCodecSpec is not a subclass of 
Read from stdout: trait StreamCodec in package codec where target is defined
/Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala:36: method groupStream in trait StreamCodec cannot be accessed in de.csmath.codec.StreamCodec
 Access to protected method groupStream not permitted because
 enclosing class StreamCodecSpec is not a subclass of 
 trait StreamCodec in package codec where target is defined
Read from stdout: val g = sc.groupStream(2,s)
      val g = sc.groupStream(2,s)
Read from stdout: ^
                 ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala:47: method intStream in trait StreamCodec cannot be accessed in de.csmath.codec.StreamCodec
Read from stdout: Access to protected method intStream not permitted because
Read from stdout: enclosing class StreamCodecSpec is not a subclass of 
Read from stdout: trait StreamCodec in package codec where target is defined
/Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala:47: method intStream in trait StreamCodec cannot be accessed in de.csmath.codec.StreamCodec
 Access to protected method intStream not permitted because
 enclosing class StreamCodecSpec is not a subclass of 
 trait StreamCodec in package codec where target is defined
Read from stdout: val s = sc.intStream(list)
      val s = sc.intStream(list)
Read from stdout: ^
                 ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala:48: method groupStream in trait StreamCodec cannot be accessed in de.csmath.codec.StreamCodec
Read from stdout: Access to protected method groupStream not permitted because
Read from stdout: enclosing class StreamCodecSpec is not a subclass of 
Read from stdout: trait StreamCodec in package codec where target is defined
/Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala:48: method groupStream in trait StreamCodec cannot be accessed in de.csmath.codec.StreamCodec
 Access to protected method groupStream not permitted because
 enclosing class StreamCodecSpec is not a subclass of 
 trait StreamCodec in package codec where target is defined
Read from stdout: val g = sc.groupStream(2,s)
      val g = sc.groupStream(2,s)
Read from stdout: ^
                 ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala:49: method filledStream in trait StreamCodec cannot be accessed in de.csmath.codec.StreamCodec
Read from stdout: Access to protected method filledStream not permitted because
Read from stdout: enclosing class StreamCodecSpec is not a subclass of 
Read from stdout: trait StreamCodec in package codec where target is defined
/Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala:49: method filledStream in trait StreamCodec cannot be accessed in de.csmath.codec.StreamCodec
 Access to protected method filledStream not permitted because
 enclosing class StreamCodecSpec is not a subclass of 
 trait StreamCodec in package codec where target is defined
Read from stdout: val f = sc.filledStream(2,g)
      val f = sc.filledStream(2,g)
Read from stdout: ^
                 ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala:62: method byteStream in trait StreamCodec cannot be accessed in de.csmath.codec.StreamCodec
Read from stdout: Access to protected method byteStream not permitted because
Read from stdout: enclosing class StreamCodecSpec is not a subclass of 
Read from stdout: trait StreamCodec in package codec where target is defined
/Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala:62: method byteStream in trait StreamCodec cannot be accessed in de.csmath.codec.StreamCodec
 Access to protected method byteStream not permitted because
 enclosing class StreamCodecSpec is not a subclass of 
 trait StreamCodec in package codec where target is defined
Read from stdout: val s = sc.byteStream(list)
      val s = sc.byteStream(list)
Read from stdout: ^
                 ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala:63: method groupBStream in trait StreamCodec cannot be accessed in de.csmath.codec.StreamCodec
Read from stdout: Access to protected method groupBStream not permitted because
Read from stdout: enclosing class StreamCodecSpec is not a subclass of 
Read from stdout: trait StreamCodec in package codec where target is defined
/Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala:63: method groupBStream in trait StreamCodec cannot be accessed in de.csmath.codec.StreamCodec
 Access to protected method groupBStream not permitted because
 enclosing class StreamCodecSpec is not a subclass of 
 trait StreamCodec in package codec where target is defined
Read from stdout: val g = sc.groupBStream(2,s)
      val g = sc.groupBStream(2,s)
Read from stdout: ^
                 ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala:64: method flatten in trait StreamCodec cannot be accessed in de.csmath.codec.StreamCodec
Read from stdout: Access to protected method flatten not permitted because
Read from stdout: enclosing class StreamCodecSpec is not a subclass of 
Read from stdout: trait StreamCodec in package codec where target is defined
/Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala:64: method flatten in trait StreamCodec cannot be accessed in de.csmath.codec.StreamCodec
 Access to protected method flatten not permitted because
 enclosing class StreamCodecSpec is not a subclass of 
 trait StreamCodec in package codec where target is defined
Read from stdout: val f = sc.flatten(g)
      val f = sc.flatten(g)
Read from stdout: ^
                 ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala:16: method checkedByteStream in trait StreamDecoder cannot be accessed in de.csmath.codec.StreamDecoder
Read from stdout: Access to protected method checkedByteStream not permitted because
Read from stdout: enclosing class StreamDecoderSpec is not a subclass of 
Read from stdout: trait StreamDecoder in package codec where target is defined
/Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala:16: method checkedByteStream in trait StreamDecoder cannot be accessed in de.csmath.codec.StreamDecoder
 Access to protected method checkedByteStream not permitted because
 enclosing class StreamDecoderSpec is not a subclass of 
 trait StreamDecoder in package codec where target is defined
Read from stdout: val s = sc.checkedByteStream(pred,list1)
      val s = sc.checkedByteStream(pred,list1)
Read from stdout: ^
                 ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala:17: method checkedByteStream in trait StreamDecoder cannot be accessed in de.csmath.codec.StreamDecoder
Read from stdout: Access to protected method checkedByteStream not permitted because
Read from stdout: enclosing class StreamDecoderSpec is not a subclass of 
Read from stdout: trait StreamDecoder in package codec where target is defined
/Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala:17: method checkedByteStream in trait StreamDecoder cannot be accessed in de.csmath.codec.StreamDecoder
 Access to protected method checkedByteStream not permitted because
 enclosing class StreamDecoderSpec is not a subclass of 
 trait StreamDecoder in package codec where target is defined
Read from stdout: val t = sc.checkedByteStream(pred,list2)
      val t = sc.checkedByteStream(pred,list2)
Read from stdout: ^
                 ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala:23: value head is not a member of Any
/Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala:23: value head is not a member of Any
Read from stdout: u.head should === (1)
            u.head should === (1)
Read from stdout: ^
              ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala:24: value tail is not a member of Any
/Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala:24: value tail is not a member of Any
Read from stdout: u.tail.head should === (2)
            u.tail.head should === (2)
Read from stdout: ^
              ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala:25: value tail is not a member of Any
/Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala:25: value tail is not a member of Any
Read from stdout: u.tail.tail.head should === (1)
            u.tail.tail.head should === (1)
Read from stdout: ^
              ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala:26: value tail is not a member of Any
/Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala:26: value tail is not a member of Any
Read from stdout: u.tail.tail.tail.head should === (2)
            u.tail.tail.tail.head should === (2)
Read from stdout: ^
              ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala:27: value tail is not a member of Any
/Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala:27: value tail is not a member of Any
Read from stdout: u.tail.tail.tail.tail should === (Stream.empty)
            u.tail.tail.tail.tail should === (Stream.empty)
Read from stdout: ^
              ^
Read from stdout: 17 errors found
17 errors found
Compilation failed (CompilerInterface)
Read from stdout: (test:compileIncremental) Compilation failed
(test:compileIncremental) Compilation failed
Total time: 1 s, completed 31.05.2016 22:06:09
> server-post-command-error-handler
> server-post-command-cleanup
> server-handle-next-server-request
> compile
Evaluating tasks: compile:compile
Running task... Cancel: sbt.server.ServerTaskCancellation@d36f3, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/PercentDecoder.scala)
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/PercentDecoder.scala)

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/PercentDecoder.scala)

Read from stdout: Compiling 1 Scala source to /Users/lpfeiler/develop/github/base64/target/scala-2.11/classes...
Compiling 1 Scala source to /Users/lpfeiler/develop/github/base64/target/scala-2.11/classes...
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Running cached compiler 1ab9c4a4, interfacing (CompilerInterface) with Scala compiler version 2.11.7
Calling Scala compiler with arguments  (CompilerInterface):
	-bootclasspath
	/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/classes:/Users/lpfeiler/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.11.7.jar
	-classpath
	/Users/lpfeiler/develop/github/base64/target/scala-2.11/classes
Scala compilation took 1.078472476 s
Invalidating /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/PercentDecoder.scala...
Invalidating (transitively) by inheritance from /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/PercentDecoder.scala...
Initial set of included nodes: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/PercentDecoder.scala)
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/PercentDecoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/PercentDecoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/PercentDecoder.scala
Invalidated by transitive inheritance dependency: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/PercentDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala)
The /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/PercentDecoder.scala source file has the following regular definitions changed:
	percentDecode, validByte.
All member reference dependencies will be considered within this context.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
The following modified names cause invalidation of /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala: Set(percentDecode)
The following modified names cause invalidation of /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala: Set(percentDecode)
The following modified names cause invalidation of /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala: Set(percentDecode)
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
New invalidations:
	Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala)
Initial set of included nodes: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala)
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala
Previously invalidated, but (transitively) depend on new invalidations:
	Set()
All newly invalidated sources after taking into account (previously) recompiled sources:Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala)
Read from stdout: Compiling 3 Scala sources to /Users/lpfeiler/develop/github/base64/target/scala-2.11/classes...
Compiling 3 Scala sources to /Users/lpfeiler/develop/github/base64/target/scala-2.11/classes...
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Running cached compiler 6d158f6, interfacing (CompilerInterface) with Scala compiler version 2.11.7
Calling Scala compiler with arguments  (CompilerInterface):
	-bootclasspath
	/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/classes:/Users/lpfeiler/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.11.7.jar
	-classpath
	/Users/lpfeiler/develop/github/base64/target/scala-2.11/classes
Scala compilation took 0.885708174 s
Invalidating /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala...
Invalidating (transitively) by inheritance from /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala...
Initial set of included nodes: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala)
Invalidated by transitive inheritance dependency: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala)
The /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala source file has the following regular definitions changed:
	validByte, percentDecode.
All member reference dependencies will be considered within this context.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
Invalidating /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala...
Invalidating (transitively) by inheritance from /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala...
Initial set of included nodes: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala)
Invalidated by transitive inheritance dependency: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala)
The /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala source file has the following regular definitions changed:
	percentDecode, validByte.
All member reference dependencies will be considered within this context.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
Invalidating /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala...
Invalidating (transitively) by inheritance from /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala...
Initial set of included nodes: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala)
Invalidated by transitive inheritance dependency: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala)
The /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala source file has the following regular definitions changed:
	percentDecode, validByte.
All member reference dependencies will be considered within this context.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
New invalidations:
	Set()
Initial set of included nodes: Set()
Previously invalidated, but (transitively) depend on new invalidations:
	Set()
All newly invalidated sources after taking into account (previously) recompiled sources:Set()
Total time: 2 s, completed 31.05.2016 22:52:20
> server-post-command-cleanup
> server-handle-next-server-request
> test
Evaluating tasks: test:test
Running task... Cancel: sbt.server.ServerTaskCancellation@5b897c22, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set()
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set()

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set()

Copy resource mappings: 
	
The de.csmath.codec.Codec$ source file has the following regular definitions changed:
	needPads.
All member reference dependencies will be considered within this context.
Files invalidated by inheriting from (external) de.csmath.codec.Codec$: Set(); now invalidating by inheritance (internally).
Getting direct dependencies of all sources transitively invalidated by inheritance.
Getting sources that directly depend on (external) de.csmath.codec.Codec$.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/test/scala/Base16Spec.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/test/scala/Base32Spec.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/test/scala/Base64Spec.scala. This dependency is not being considered for invalidation.
The de.csmath.codec.StreamDecoder source file has the following regular definitions changed:
	filteredStream, checkedByteStream.
All member reference dependencies will be considered within this context.
Files invalidated by inheriting from (external) de.csmath.codec.StreamDecoder: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala); now invalidating by inheritance (internally).
Invalidating (transitively) by inheritance from /Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala...
Initial set of included nodes: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala)
Invalidated by transitive inheritance dependency: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala)
Getting direct dependencies of all sources transitively invalidated by inheritance.
Getting sources that directly depend on (external) de.csmath.codec.StreamDecoder.
The following modified names cause invalidation of /Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala: Set(checkedByteStream)
The de.csmath.codec.StreamCodec source file has the following regular definitions changed:
	flatten, filledStream, intStream, groupStreamAux, groupStream, groupBStreamAux, groupBStream, byteStream.
All member reference dependencies will be considered within this context.
Files invalidated by inheriting from (external) de.csmath.codec.StreamCodec: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala); now invalidating by inheritance (internally).
Invalidating (transitively) by inheritance from /Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala...
Initial set of included nodes: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala)
Invalidated by transitive inheritance dependency: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala)
Getting direct dependencies of all sources transitively invalidated by inheritance.
Getting sources that directly depend on (external) de.csmath.codec.StreamCodec.
The following modified names cause invalidation of /Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala: Set(flatten, filledStream, intStream, groupStream, groupBStream, byteStream)

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set()
Removed products: Set()
External API changes: API Changes: Set(NamesChange(de.csmath.codec.Codec$,ModifiedNames(regularNames = needPads, implicitNames = )), NamesChange(de.csmath.codec.StreamDecoder,ModifiedNames(regularNames = filteredStream, checkedByteStream, implicitNames = )), NamesChange(de.csmath.codec.StreamCodec,ModifiedNames(regularNames = flatten, filledStream, intStream, groupStreamAux, groupStream, groupBStreamAux, groupBStream, byteStream, implicitNames = )))
Modified binary dependencies: Set()
Initial directly invalidated sources: Set()

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala, /Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala)
All initially invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala, /Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala)

Read from stdout: Compiling 2 Scala sources to /Users/lpfeiler/develop/github/base64/target/scala-2.11/test-classes...
Compiling 2 Scala sources to /Users/lpfeiler/develop/github/base64/target/scala-2.11/test-classes...
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Running cached compiler c9428a, interfacing (CompilerInterface) with Scala compiler version 2.11.7
Calling Scala compiler with arguments  (CompilerInterface):
	-bootclasspath
	/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/classes:/Users/lpfeiler/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.11.7.jar
	-classpath
	/Users/lpfeiler/develop/github/base64/target/scala-2.11/test-classes:/Users/lpfeiler/develop/github/base64/target/scala-2.11/classes:/Users/lpfeiler/develop/scala/activator-dist-1.3.6/repository/org.scalatest/scalatest_2.11/2.2.4/bundles/scalatest_2.11.jar:/Users/lpfeiler/develop/scala/activator-dist-1.3.6/repository/org.scala-lang/scala-reflect/2.11.2/jars/scala-reflect.jar:/Users/lpfeiler/develop/scala/activator-dist-1.3.6/repository/org.scala-lang.modules/scala-xml_2.11/1.0.2/bundles/scala-xml_2.11.jar
Read from stdout: /Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala:11: method byteStream in trait StreamCodec cannot be accessed in de.csmath.codec.StreamCodec
Read from stdout: Access to protected method byteStream not permitted because
Read from stdout: enclosing class StreamCodecSpec is not a subclass of 
Read from stdout: trait StreamCodec in package codec where target is defined
/Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala:11: method byteStream in trait StreamCodec cannot be accessed in de.csmath.codec.StreamCodec
 Access to protected method byteStream not permitted because
 enclosing class StreamCodecSpec is not a subclass of 
 trait StreamCodec in package codec where target is defined
Read from stdout: val s = sc.byteStream(list)
      val s = sc.byteStream(list)
Read from stdout: ^
                 ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala:23: method intStream in trait StreamCodec cannot be accessed in de.csmath.codec.StreamCodec
Read from stdout: Access to protected method intStream not permitted because
Read from stdout: enclosing class StreamCodecSpec is not a subclass of 
Read from stdout: trait StreamCodec in package codec where target is defined
/Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala:23: method intStream in trait StreamCodec cannot be accessed in de.csmath.codec.StreamCodec
 Access to protected method intStream not permitted because
 enclosing class StreamCodecSpec is not a subclass of 
 trait StreamCodec in package codec where target is defined
Read from stdout: val s = sc.intStream(list)
      val s = sc.intStream(list)
Read from stdout: ^
                 ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala:35: method intStream in trait StreamCodec cannot be accessed in de.csmath.codec.StreamCodec
Read from stdout: Access to protected method intStream not permitted because
Read from stdout: enclosing class StreamCodecSpec is not a subclass of 
Read from stdout: trait StreamCodec in package codec where target is defined
/Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala:35: method intStream in trait StreamCodec cannot be accessed in de.csmath.codec.StreamCodec
 Access to protected method intStream not permitted because
 enclosing class StreamCodecSpec is not a subclass of 
 trait StreamCodec in package codec where target is defined
Read from stdout: val s = sc.intStream(list)
      val s = sc.intStream(list)
Read from stdout: ^
                 ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala:36: method groupStream in trait StreamCodec cannot be accessed in de.csmath.codec.StreamCodec
Read from stdout: Access to protected method groupStream not permitted because
Read from stdout: enclosing class StreamCodecSpec is not a subclass of 
Read from stdout: trait StreamCodec in package codec where target is defined
/Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala:36: method groupStream in trait StreamCodec cannot be accessed in de.csmath.codec.StreamCodec
 Access to protected method groupStream not permitted because
 enclosing class StreamCodecSpec is not a subclass of 
 trait StreamCodec in package codec where target is defined
Read from stdout: val g = sc.groupStream(2,s)
      val g = sc.groupStream(2,s)
Read from stdout: ^
                 ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala:47: method intStream in trait StreamCodec cannot be accessed in de.csmath.codec.StreamCodec
Read from stdout: Access to protected method intStream not permitted because
Read from stdout: enclosing class StreamCodecSpec is not a subclass of 
Read from stdout: trait StreamCodec in package codec where target is defined
/Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala:47: method intStream in trait StreamCodec cannot be accessed in de.csmath.codec.StreamCodec
 Access to protected method intStream not permitted because
 enclosing class StreamCodecSpec is not a subclass of 
 trait StreamCodec in package codec where target is defined
Read from stdout: val s = sc.intStream(list)
      val s = sc.intStream(list)
Read from stdout: ^
                 ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala:48: method groupStream in trait StreamCodec cannot be accessed in de.csmath.codec.StreamCodec
Read from stdout: Access to protected method groupStream not permitted because
Read from stdout: enclosing class StreamCodecSpec is not a subclass of 
Read from stdout: trait StreamCodec in package codec where target is defined
/Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala:48: method groupStream in trait StreamCodec cannot be accessed in de.csmath.codec.StreamCodec
 Access to protected method groupStream not permitted because
 enclosing class StreamCodecSpec is not a subclass of 
 trait StreamCodec in package codec where target is defined
Read from stdout: val g = sc.groupStream(2,s)
      val g = sc.groupStream(2,s)
Read from stdout: ^
                 ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala:49: method filledStream in trait StreamCodec cannot be accessed in de.csmath.codec.StreamCodec
Read from stdout: Access to protected method filledStream not permitted because
Read from stdout: enclosing class StreamCodecSpec is not a subclass of 
Read from stdout: trait StreamCodec in package codec where target is defined
/Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala:49: method filledStream in trait StreamCodec cannot be accessed in de.csmath.codec.StreamCodec
 Access to protected method filledStream not permitted because
 enclosing class StreamCodecSpec is not a subclass of 
 trait StreamCodec in package codec where target is defined
Read from stdout: val f = sc.filledStream(2,g)
      val f = sc.filledStream(2,g)
Read from stdout: ^
                 ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala:62: method byteStream in trait StreamCodec cannot be accessed in de.csmath.codec.StreamCodec
Read from stdout: Access to protected method byteStream not permitted because
Read from stdout: enclosing class StreamCodecSpec is not a subclass of 
Read from stdout: trait StreamCodec in package codec where target is defined
/Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala:62: method byteStream in trait StreamCodec cannot be accessed in de.csmath.codec.StreamCodec
 Access to protected method byteStream not permitted because
 enclosing class StreamCodecSpec is not a subclass of 
 trait StreamCodec in package codec where target is defined
Read from stdout: val s = sc.byteStream(list)
      val s = sc.byteStream(list)
Read from stdout: ^
                 ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala:63: method groupBStream in trait StreamCodec cannot be accessed in de.csmath.codec.StreamCodec
Read from stdout: Access to protected method groupBStream not permitted because
Read from stdout: enclosing class StreamCodecSpec is not a subclass of 
Read from stdout: trait StreamCodec in package codec where target is defined
/Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala:63: method groupBStream in trait StreamCodec cannot be accessed in de.csmath.codec.StreamCodec
 Access to protected method groupBStream not permitted because
 enclosing class StreamCodecSpec is not a subclass of 
 trait StreamCodec in package codec where target is defined
Read from stdout: val g = sc.groupBStream(2,s)
      val g = sc.groupBStream(2,s)
Read from stdout: ^
                 ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala:64: method flatten in trait StreamCodec cannot be accessed in de.csmath.codec.StreamCodec
Read from stdout: Access to protected method flatten not permitted because
Read from stdout: enclosing class StreamCodecSpec is not a subclass of 
Read from stdout: trait StreamCodec in package codec where target is defined
/Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala:64: method flatten in trait StreamCodec cannot be accessed in de.csmath.codec.StreamCodec
 Access to protected method flatten not permitted because
 enclosing class StreamCodecSpec is not a subclass of 
 trait StreamCodec in package codec where target is defined
Read from stdout: val f = sc.flatten(g)
      val f = sc.flatten(g)
Read from stdout: ^
                 ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala:16: method checkedByteStream in trait StreamDecoder cannot be accessed in de.csmath.codec.StreamDecoder
Read from stdout: Access to protected method checkedByteStream not permitted because
Read from stdout: enclosing class StreamDecoderSpec is not a subclass of 
Read from stdout: trait StreamDecoder in package codec where target is defined
/Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala:16: method checkedByteStream in trait StreamDecoder cannot be accessed in de.csmath.codec.StreamDecoder
 Access to protected method checkedByteStream not permitted because
 enclosing class StreamDecoderSpec is not a subclass of 
 trait StreamDecoder in package codec where target is defined
Read from stdout: val s = sc.checkedByteStream(pred,list1)
      val s = sc.checkedByteStream(pred,list1)
Read from stdout: ^
                 ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala:17: method checkedByteStream in trait StreamDecoder cannot be accessed in de.csmath.codec.StreamDecoder
Read from stdout: Access to protected method checkedByteStream not permitted because
Read from stdout: enclosing class StreamDecoderSpec is not a subclass of 
Read from stdout: trait StreamDecoder in package codec where target is defined
/Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala:17: method checkedByteStream in trait StreamDecoder cannot be accessed in de.csmath.codec.StreamDecoder
 Access to protected method checkedByteStream not permitted because
 enclosing class StreamDecoderSpec is not a subclass of 
 trait StreamDecoder in package codec where target is defined
Read from stdout: val t = sc.checkedByteStream(pred,list2)
      val t = sc.checkedByteStream(pred,list2)
Read from stdout: ^
                 ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala:23: value head is not a member of Any
/Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala:23: value head is not a member of Any
Read from stdout: u.head should === (1)
            u.head should === (1)
Read from stdout: ^
              ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala:24: value tail is not a member of Any
/Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala:24: value tail is not a member of Any
Read from stdout: u.tail.head should === (2)
            u.tail.head should === (2)
Read from stdout: ^
              ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala:25: value tail is not a member of Any
/Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala:25: value tail is not a member of Any
Read from stdout: u.tail.tail.head should === (1)
            u.tail.tail.head should === (1)
Read from stdout: ^
              ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala:26: value tail is not a member of Any
/Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala:26: value tail is not a member of Any
Read from stdout: u.tail.tail.tail.head should === (2)
            u.tail.tail.tail.head should === (2)
Read from stdout: ^
              ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala:27: value tail is not a member of Any
/Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala:27: value tail is not a member of Any
Read from stdout: u.tail.tail.tail.tail should === (Stream.empty)
            u.tail.tail.tail.tail should === (Stream.empty)
Read from stdout: ^
              ^
Read from stdout: 17 errors found
17 errors found
Compilation failed (CompilerInterface)
Read from stdout: (test:compileIncremental) Compilation failed
(test:compileIncremental) Compilation failed
Total time: 2 s, completed 31.05.2016 22:52:21
> server-post-command-error-handler
> server-post-command-cleanup
> server-handle-next-server-request
> compile
Evaluating tasks: compile:compile
Running task... Cancel: sbt.server.ServerTaskCancellation@29e4b64f, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set()
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set()

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set()

Total time: 0 s, completed 31.05.2016 22:55:15
> server-post-command-cleanup
> server-handle-next-server-request
> test
Evaluating tasks: test:test
Running task... Cancel: sbt.server.ServerTaskCancellation@5bca7058, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set()
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set()

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set()

Copy resource mappings: 
	
The de.csmath.codec.Codec$ source file has the following regular definitions changed:
	needPads.
All member reference dependencies will be considered within this context.
Files invalidated by inheriting from (external) de.csmath.codec.Codec$: Set(); now invalidating by inheritance (internally).
Getting direct dependencies of all sources transitively invalidated by inheritance.
Getting sources that directly depend on (external) de.csmath.codec.Codec$.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/test/scala/Base16Spec.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/test/scala/Base32Spec.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/test/scala/Base64Spec.scala. This dependency is not being considered for invalidation.
The de.csmath.codec.StreamDecoder source file has the following regular definitions changed:
	filteredStream, checkedByteStream.
All member reference dependencies will be considered within this context.
Files invalidated by inheriting from (external) de.csmath.codec.StreamDecoder: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala); now invalidating by inheritance (internally).
Invalidating (transitively) by inheritance from /Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala...
Initial set of included nodes: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala)
Invalidated by transitive inheritance dependency: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala)
Getting direct dependencies of all sources transitively invalidated by inheritance.
Getting sources that directly depend on (external) de.csmath.codec.StreamDecoder.
The following modified names cause invalidation of /Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala: Set(checkedByteStream)
The de.csmath.codec.StreamCodec source file has the following regular definitions changed:
	flatten, filledStream, intStream, groupStreamAux, groupStream, groupBStreamAux, groupBStream, byteStream.
All member reference dependencies will be considered within this context.
Files invalidated by inheriting from (external) de.csmath.codec.StreamCodec: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala); now invalidating by inheritance (internally).
Invalidating (transitively) by inheritance from /Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala...
Initial set of included nodes: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala)
Invalidated by transitive inheritance dependency: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala)
Getting direct dependencies of all sources transitively invalidated by inheritance.
Getting sources that directly depend on (external) de.csmath.codec.StreamCodec.
The following modified names cause invalidation of /Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala: Set(flatten, filledStream, intStream, groupStream, groupBStream, byteStream)

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala)
Removed products: Set()
External API changes: API Changes: Set(NamesChange(de.csmath.codec.Codec$,ModifiedNames(regularNames = needPads, implicitNames = )), NamesChange(de.csmath.codec.StreamDecoder,ModifiedNames(regularNames = filteredStream, checkedByteStream, implicitNames = )), NamesChange(de.csmath.codec.StreamCodec,ModifiedNames(regularNames = flatten, filledStream, intStream, groupStreamAux, groupStream, groupBStreamAux, groupBStream, byteStream, implicitNames = )))
Modified binary dependencies: Set()
Initial directly invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala)

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala, /Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala)
All initially invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala, /Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala)

Read from stdout: Compiling 2 Scala sources to /Users/lpfeiler/develop/github/base64/target/scala-2.11/test-classes...
Compiling 2 Scala sources to /Users/lpfeiler/develop/github/base64/target/scala-2.11/test-classes...
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Running cached compiler 40e4bac3, interfacing (CompilerInterface) with Scala compiler version 2.11.7
Calling Scala compiler with arguments  (CompilerInterface):
	-bootclasspath
	/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/classes:/Users/lpfeiler/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.11.7.jar
	-classpath
	/Users/lpfeiler/develop/github/base64/target/scala-2.11/test-classes:/Users/lpfeiler/develop/github/base64/target/scala-2.11/classes:/Users/lpfeiler/develop/scala/activator-dist-1.3.6/repository/org.scalatest/scalatest_2.11/2.2.4/bundles/scalatest_2.11.jar:/Users/lpfeiler/develop/scala/activator-dist-1.3.6/repository/org.scala-lang/scala-reflect/2.11.2/jars/scala-reflect.jar:/Users/lpfeiler/develop/scala/activator-dist-1.3.6/repository/org.scala-lang.modules/scala-xml_2.11/1.0.2/bundles/scala-xml_2.11.jar
Read from stdout: /Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala:11: method byteStream in trait StreamCodec cannot be accessed in de.csmath.codec.StreamCodec
Read from stdout: Access to protected method byteStream not permitted because
Read from stdout: enclosing class StreamCodecSpec is not a subclass of 
Read from stdout: trait StreamCodec in package codec where target is defined
/Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala:11: method byteStream in trait StreamCodec cannot be accessed in de.csmath.codec.StreamCodec
 Access to protected method byteStream not permitted because
 enclosing class StreamCodecSpec is not a subclass of 
 trait StreamCodec in package codec where target is defined
Read from stdout: val s = sc.byteStream(list)
      val s = sc.byteStream(list)
Read from stdout: ^
                 ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala:23: method intStream in trait StreamCodec cannot be accessed in de.csmath.codec.StreamCodec
Read from stdout: Access to protected method intStream not permitted because
Read from stdout: enclosing class StreamCodecSpec is not a subclass of 
Read from stdout: trait StreamCodec in package codec where target is defined
/Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala:23: method intStream in trait StreamCodec cannot be accessed in de.csmath.codec.StreamCodec
 Access to protected method intStream not permitted because
 enclosing class StreamCodecSpec is not a subclass of 
 trait StreamCodec in package codec where target is defined
Read from stdout: val s = sc.intStream(list)
      val s = sc.intStream(list)
Read from stdout: ^
                 ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala:35: method intStream in trait StreamCodec cannot be accessed in de.csmath.codec.StreamCodec
Read from stdout: Access to protected method intStream not permitted because
Read from stdout: enclosing class StreamCodecSpec is not a subclass of 
Read from stdout: trait StreamCodec in package codec where target is defined
/Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala:35: method intStream in trait StreamCodec cannot be accessed in de.csmath.codec.StreamCodec
 Access to protected method intStream not permitted because
 enclosing class StreamCodecSpec is not a subclass of 
 trait StreamCodec in package codec where target is defined
Read from stdout: val s = sc.intStream(list)
      val s = sc.intStream(list)
Read from stdout: ^
                 ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala:36: method groupStream in trait StreamCodec cannot be accessed in de.csmath.codec.StreamCodec
Read from stdout: Access to protected method groupStream not permitted because
Read from stdout: enclosing class StreamCodecSpec is not a subclass of 
Read from stdout: trait StreamCodec in package codec where target is defined
/Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala:36: method groupStream in trait StreamCodec cannot be accessed in de.csmath.codec.StreamCodec
 Access to protected method groupStream not permitted because
 enclosing class StreamCodecSpec is not a subclass of 
 trait StreamCodec in package codec where target is defined
Read from stdout: val g = sc.groupStream(2,s)
      val g = sc.groupStream(2,s)
Read from stdout: ^
                 ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala:53: not found: value f
/Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala:53: not found: value f
Read from stdout: f.head._1 should === (0)
      f.head._1 should === (0)
Read from stdout: ^
      ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala:54: not found: value f
/Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala:54: not found: value f
Read from stdout: f.head._2 should === (Array(1,2))
      f.head._2 should === (Array(1,2))
Read from stdout: ^
      ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala:55: not found: value f
/Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala:55: not found: value f
Read from stdout: f.tail.head._1 should === (1)
      f.tail.head._1 should === (1)
Read from stdout: ^
      ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala:56: not found: value f
/Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala:56: not found: value f
Read from stdout: f.tail.head._2 should === (Array(3,0))
      f.tail.head._2 should === (Array(3,0))
Read from stdout: ^
      ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala:57: not found: value f
/Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala:57: not found: value f
Read from stdout: f.tail.tail should === (Stream.empty)
      f.tail.tail should === (Stream.empty)
Read from stdout: ^
      ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala:64: method byteStream in trait StreamCodec cannot be accessed in de.csmath.codec.StreamCodec
Read from stdout: Access to protected method byteStream not permitted because
Read from stdout: enclosing class StreamCodecSpec is not a subclass of 
Read from stdout: trait StreamCodec in package codec where target is defined
/Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala:64: method byteStream in trait StreamCodec cannot be accessed in de.csmath.codec.StreamCodec
 Access to protected method byteStream not permitted because
 enclosing class StreamCodecSpec is not a subclass of 
 trait StreamCodec in package codec where target is defined
Read from stdout: val s = sc.byteStream(list)
      val s = sc.byteStream(list)
Read from stdout: ^
                 ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala:65: method groupBStream in trait StreamCodec cannot be accessed in de.csmath.codec.StreamCodec
Read from stdout: Access to protected method groupBStream not permitted because
Read from stdout: enclosing class StreamCodecSpec is not a subclass of 
Read from stdout: trait StreamCodec in package codec where target is defined
/Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala:65: method groupBStream in trait StreamCodec cannot be accessed in de.csmath.codec.StreamCodec
 Access to protected method groupBStream not permitted because
 enclosing class StreamCodecSpec is not a subclass of 
 trait StreamCodec in package codec where target is defined
Read from stdout: val g = sc.groupBStream(2,s)
      val g = sc.groupBStream(2,s)
Read from stdout: ^
                 ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala:66: method flatten in trait StreamCodec cannot be accessed in de.csmath.codec.StreamCodec
Read from stdout: Access to protected method flatten not permitted because
Read from stdout: enclosing class StreamCodecSpec is not a subclass of 
Read from stdout: trait StreamCodec in package codec where target is defined
/Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala:66: method flatten in trait StreamCodec cannot be accessed in de.csmath.codec.StreamCodec
 Access to protected method flatten not permitted because
 enclosing class StreamCodecSpec is not a subclass of 
 trait StreamCodec in package codec where target is defined
Read from stdout: val f = sc.flatten(g)
      val f = sc.flatten(g)
Read from stdout: ^
                 ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala:16: method checkedByteStream in trait StreamDecoder cannot be accessed in de.csmath.codec.StreamDecoder
Read from stdout: Access to protected method checkedByteStream not permitted because
Read from stdout: enclosing class StreamDecoderSpec is not a subclass of 
Read from stdout: trait StreamDecoder in package codec where target is defined
/Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala:16: method checkedByteStream in trait StreamDecoder cannot be accessed in de.csmath.codec.StreamDecoder
 Access to protected method checkedByteStream not permitted because
 enclosing class StreamDecoderSpec is not a subclass of 
 trait StreamDecoder in package codec where target is defined
Read from stdout: val s = sc.checkedByteStream(pred,list1)
      val s = sc.checkedByteStream(pred,list1)
Read from stdout: ^
                 ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala:17: method checkedByteStream in trait StreamDecoder cannot be accessed in de.csmath.codec.StreamDecoder
Read from stdout: Access to protected method checkedByteStream not permitted because
Read from stdout: enclosing class StreamDecoderSpec is not a subclass of 
Read from stdout: trait StreamDecoder in package codec where target is defined
/Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala:17: method checkedByteStream in trait StreamDecoder cannot be accessed in de.csmath.codec.StreamDecoder
 Access to protected method checkedByteStream not permitted because
 enclosing class StreamDecoderSpec is not a subclass of 
 trait StreamDecoder in package codec where target is defined
Read from stdout: val t = sc.checkedByteStream(pred,list2)
      val t = sc.checkedByteStream(pred,list2)
Read from stdout: ^
                 ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala:23: value head is not a member of Any
/Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala:23: value head is not a member of Any
Read from stdout: u.head should === (1)
            u.head should === (1)
Read from stdout: ^
              ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala:24: value tail is not a member of Any
/Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala:24: value tail is not a member of Any
Read from stdout: u.tail.head should === (2)
            u.tail.head should === (2)
Read from stdout: ^
              ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala:25: value tail is not a member of Any
/Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala:25: value tail is not a member of Any
Read from stdout: u.tail.tail.head should === (1)
            u.tail.tail.head should === (1)
Read from stdout: ^
              ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala:26: value tail is not a member of Any
/Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala:26: value tail is not a member of Any
Read from stdout: u.tail.tail.tail.head should === (2)
            u.tail.tail.tail.head should === (2)
Read from stdout: ^
              ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala:27: value tail is not a member of Any
/Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala:27: value tail is not a member of Any
Read from stdout: u.tail.tail.tail.tail should === (Stream.empty)
            u.tail.tail.tail.tail should === (Stream.empty)
Read from stdout: ^
              ^
Read from stdout: 19 errors found
19 errors found
Compilation failed (CompilerInterface)
Read from stdout: (test:compileIncremental) Compilation failed
(test:compileIncremental) Compilation failed
Total time: 1 s, completed 31.05.2016 22:55:17
> server-post-command-error-handler
> server-post-command-cleanup
> server-handle-next-server-request
> compile
Evaluating tasks: compile:compile
Running task... Cancel: sbt.server.ServerTaskCancellation@47fd6a92, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set()
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set()

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set()

Total time: 0 s, completed 31.05.2016 22:55:35
> server-post-command-cleanup
> server-handle-next-server-request
> test
Evaluating tasks: test:test
Running task... Cancel: sbt.server.ServerTaskCancellation@93ebda6, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set()
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set()

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set()

Copy resource mappings: 
	
The de.csmath.codec.Codec$ source file has the following regular definitions changed:
	needPads.
All member reference dependencies will be considered within this context.
Files invalidated by inheriting from (external) de.csmath.codec.Codec$: Set(); now invalidating by inheritance (internally).
Getting direct dependencies of all sources transitively invalidated by inheritance.
Getting sources that directly depend on (external) de.csmath.codec.Codec$.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/test/scala/Base16Spec.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/test/scala/Base32Spec.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/test/scala/Base64Spec.scala. This dependency is not being considered for invalidation.
The de.csmath.codec.StreamDecoder source file has the following regular definitions changed:
	filteredStream, checkedByteStream.
All member reference dependencies will be considered within this context.
Files invalidated by inheriting from (external) de.csmath.codec.StreamDecoder: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala); now invalidating by inheritance (internally).
Invalidating (transitively) by inheritance from /Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala...
Initial set of included nodes: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala)
Invalidated by transitive inheritance dependency: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala)
Getting direct dependencies of all sources transitively invalidated by inheritance.
Getting sources that directly depend on (external) de.csmath.codec.StreamDecoder.
The following modified names cause invalidation of /Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala: Set(checkedByteStream)
The de.csmath.codec.StreamCodec source file has the following regular definitions changed:
	flatten, filledStream, intStream, groupStreamAux, groupStream, groupBStreamAux, groupBStream, byteStream.
All member reference dependencies will be considered within this context.
Files invalidated by inheriting from (external) de.csmath.codec.StreamCodec: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala); now invalidating by inheritance (internally).
Invalidating (transitively) by inheritance from /Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala...
Initial set of included nodes: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala)
Invalidated by transitive inheritance dependency: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala)
Getting direct dependencies of all sources transitively invalidated by inheritance.
Getting sources that directly depend on (external) de.csmath.codec.StreamCodec.
The following modified names cause invalidation of /Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala: Set(flatten, filledStream, intStream, groupStream, groupBStream, byteStream)

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala)
Removed products: Set()
External API changes: API Changes: Set(NamesChange(de.csmath.codec.Codec$,ModifiedNames(regularNames = needPads, implicitNames = )), NamesChange(de.csmath.codec.StreamDecoder,ModifiedNames(regularNames = filteredStream, checkedByteStream, implicitNames = )), NamesChange(de.csmath.codec.StreamCodec,ModifiedNames(regularNames = flatten, filledStream, intStream, groupStreamAux, groupStream, groupBStreamAux, groupBStream, byteStream, implicitNames = )))
Modified binary dependencies: Set()
Initial directly invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala)

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala, /Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala)
All initially invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala, /Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala)

Read from stdout: Compiling 2 Scala sources to /Users/lpfeiler/develop/github/base64/target/scala-2.11/test-classes...
Compiling 2 Scala sources to /Users/lpfeiler/develop/github/base64/target/scala-2.11/test-classes...
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Running cached compiler 4050d13a, interfacing (CompilerInterface) with Scala compiler version 2.11.7
Calling Scala compiler with arguments  (CompilerInterface):
	-bootclasspath
	/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/classes:/Users/lpfeiler/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.11.7.jar
	-classpath
	/Users/lpfeiler/develop/github/base64/target/scala-2.11/test-classes:/Users/lpfeiler/develop/github/base64/target/scala-2.11/classes:/Users/lpfeiler/develop/scala/activator-dist-1.3.6/repository/org.scalatest/scalatest_2.11/2.2.4/bundles/scalatest_2.11.jar:/Users/lpfeiler/develop/scala/activator-dist-1.3.6/repository/org.scala-lang/scala-reflect/2.11.2/jars/scala-reflect.jar:/Users/lpfeiler/develop/scala/activator-dist-1.3.6/repository/org.scala-lang.modules/scala-xml_2.11/1.0.2/bundles/scala-xml_2.11.jar
Read from stdout: /Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala:11: method byteStream in trait StreamCodec cannot be accessed in de.csmath.codec.StreamCodec
Read from stdout: Access to protected method byteStream not permitted because
Read from stdout: enclosing class StreamCodecSpec is not a subclass of 
Read from stdout: trait StreamCodec in package codec where target is defined
/Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala:11: method byteStream in trait StreamCodec cannot be accessed in de.csmath.codec.StreamCodec
 Access to protected method byteStream not permitted because
 enclosing class StreamCodecSpec is not a subclass of 
 trait StreamCodec in package codec where target is defined
Read from stdout: val s = sc.byteStream(list)
      val s = sc.byteStream(list)
Read from stdout: ^
                 ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala:23: method intStream in trait StreamCodec cannot be accessed in de.csmath.codec.StreamCodec
Read from stdout: Access to protected method intStream not permitted because
Read from stdout: enclosing class StreamCodecSpec is not a subclass of 
Read from stdout: trait StreamCodec in package codec where target is defined
/Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala:23: method intStream in trait StreamCodec cannot be accessed in de.csmath.codec.StreamCodec
 Access to protected method intStream not permitted because
 enclosing class StreamCodecSpec is not a subclass of 
 trait StreamCodec in package codec where target is defined
Read from stdout: val s = sc.intStream(list)
      val s = sc.intStream(list)
Read from stdout: ^
                 ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala:35: method intStream in trait StreamCodec cannot be accessed in de.csmath.codec.StreamCodec
Read from stdout: Access to protected method intStream not permitted because
Read from stdout: enclosing class StreamCodecSpec is not a subclass of 
Read from stdout: trait StreamCodec in package codec where target is defined
/Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala:35: method intStream in trait StreamCodec cannot be accessed in de.csmath.codec.StreamCodec
 Access to protected method intStream not permitted because
 enclosing class StreamCodecSpec is not a subclass of 
 trait StreamCodec in package codec where target is defined
Read from stdout: val s = sc.intStream(list)
      val s = sc.intStream(list)
Read from stdout: ^
                 ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala:36: method groupStream in trait StreamCodec cannot be accessed in de.csmath.codec.StreamCodec
Read from stdout: Access to protected method groupStream not permitted because
Read from stdout: enclosing class StreamCodecSpec is not a subclass of 
Read from stdout: trait StreamCodec in package codec where target is defined
/Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala:36: method groupStream in trait StreamCodec cannot be accessed in de.csmath.codec.StreamCodec
 Access to protected method groupStream not permitted because
 enclosing class StreamCodecSpec is not a subclass of 
 trait StreamCodec in package codec where target is defined
Read from stdout: val g = sc.groupStream(2,s)
      val g = sc.groupStream(2,s)
Read from stdout: ^
                 ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala:64: method byteStream in trait StreamCodec cannot be accessed in de.csmath.codec.StreamCodec
Read from stdout: Access to protected method byteStream not permitted because
Read from stdout: enclosing class StreamCodecSpec is not a subclass of 
Read from stdout: trait StreamCodec in package codec where target is defined
/Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala:64: method byteStream in trait StreamCodec cannot be accessed in de.csmath.codec.StreamCodec
 Access to protected method byteStream not permitted because
 enclosing class StreamCodecSpec is not a subclass of 
 trait StreamCodec in package codec where target is defined
Read from stdout: val s = sc.byteStream(list)
      val s = sc.byteStream(list)
Read from stdout: ^
                 ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala:65: method groupBStream in trait StreamCodec cannot be accessed in de.csmath.codec.StreamCodec
Read from stdout: Access to protected method groupBStream not permitted because
Read from stdout: enclosing class StreamCodecSpec is not a subclass of 
Read from stdout: trait StreamCodec in package codec where target is defined
/Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala:65: method groupBStream in trait StreamCodec cannot be accessed in de.csmath.codec.StreamCodec
 Access to protected method groupBStream not permitted because
 enclosing class StreamCodecSpec is not a subclass of 
 trait StreamCodec in package codec where target is defined
Read from stdout: val g = sc.groupBStream(2,s)
      val g = sc.groupBStream(2,s)
Read from stdout: ^
                 ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala:66: method flatten in trait StreamCodec cannot be accessed in de.csmath.codec.StreamCodec
Read from stdout: Access to protected method flatten not permitted because
Read from stdout: enclosing class StreamCodecSpec is not a subclass of 
Read from stdout: trait StreamCodec in package codec where target is defined
/Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala:66: method flatten in trait StreamCodec cannot be accessed in de.csmath.codec.StreamCodec
 Access to protected method flatten not permitted because
 enclosing class StreamCodecSpec is not a subclass of 
 trait StreamCodec in package codec where target is defined
Read from stdout: val f = sc.flatten(g)
      val f = sc.flatten(g)
Read from stdout: ^
                 ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala:16: method checkedByteStream in trait StreamDecoder cannot be accessed in de.csmath.codec.StreamDecoder
Read from stdout: Access to protected method checkedByteStream not permitted because
Read from stdout: enclosing class StreamDecoderSpec is not a subclass of 
Read from stdout: trait StreamDecoder in package codec where target is defined
/Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala:16: method checkedByteStream in trait StreamDecoder cannot be accessed in de.csmath.codec.StreamDecoder
 Access to protected method checkedByteStream not permitted because
 enclosing class StreamDecoderSpec is not a subclass of 
 trait StreamDecoder in package codec where target is defined
Read from stdout: val s = sc.checkedByteStream(pred,list1)
      val s = sc.checkedByteStream(pred,list1)
Read from stdout: ^
                 ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala:17: method checkedByteStream in trait StreamDecoder cannot be accessed in de.csmath.codec.StreamDecoder
Read from stdout: Access to protected method checkedByteStream not permitted because
Read from stdout: enclosing class StreamDecoderSpec is not a subclass of 
Read from stdout: trait StreamDecoder in package codec where target is defined
/Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala:17: method checkedByteStream in trait StreamDecoder cannot be accessed in de.csmath.codec.StreamDecoder
 Access to protected method checkedByteStream not permitted because
 enclosing class StreamDecoderSpec is not a subclass of 
 trait StreamDecoder in package codec where target is defined
Read from stdout: val t = sc.checkedByteStream(pred,list2)
      val t = sc.checkedByteStream(pred,list2)
Read from stdout: ^
                 ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala:23: value head is not a member of Any
/Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala:23: value head is not a member of Any
Read from stdout: u.head should === (1)
            u.head should === (1)
Read from stdout: ^
              ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala:24: value tail is not a member of Any
/Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala:24: value tail is not a member of Any
Read from stdout: u.tail.head should === (2)
            u.tail.head should === (2)
Read from stdout: ^
              ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala:25: value tail is not a member of Any
/Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala:25: value tail is not a member of Any
Read from stdout: u.tail.tail.head should === (1)
            u.tail.tail.head should === (1)
Read from stdout: ^
              ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala:26: value tail is not a member of Any
/Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala:26: value tail is not a member of Any
Read from stdout: u.tail.tail.tail.head should === (2)
            u.tail.tail.tail.head should === (2)
Read from stdout: ^
              ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala:27: value tail is not a member of Any
/Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala:27: value tail is not a member of Any
Read from stdout: u.tail.tail.tail.tail should === (Stream.empty)
            u.tail.tail.tail.tail should === (Stream.empty)
Read from stdout: ^
              ^
Read from stdout: 14 errors found
14 errors found
Compilation failed (CompilerInterface)
Read from stdout: (test:compileIncremental) Compilation failed
(test:compileIncremental) Compilation failed
Total time: 1 s, completed 31.05.2016 22:55:37
> server-post-command-error-handler
> server-post-command-cleanup
> server-handle-next-server-request
> compile
Evaluating tasks: compile:compile
Running task... Cancel: sbt.server.ServerTaskCancellation@9957205, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set()
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set()

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set()

Total time: 0 s, completed 31.05.2016 22:56:14
> server-post-command-cleanup
> server-handle-next-server-request
> test
Evaluating tasks: test:test
Running task... Cancel: sbt.server.ServerTaskCancellation@108af454, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set()
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set()

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set()

Copy resource mappings: 
	
The de.csmath.codec.Codec$ source file has the following regular definitions changed:
	needPads.
All member reference dependencies will be considered within this context.
Files invalidated by inheriting from (external) de.csmath.codec.Codec$: Set(); now invalidating by inheritance (internally).
Getting direct dependencies of all sources transitively invalidated by inheritance.
Getting sources that directly depend on (external) de.csmath.codec.Codec$.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/test/scala/Base16Spec.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/test/scala/Base32Spec.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/test/scala/Base64Spec.scala. This dependency is not being considered for invalidation.
The de.csmath.codec.StreamDecoder source file has the following regular definitions changed:
	filteredStream, checkedByteStream.
All member reference dependencies will be considered within this context.
Files invalidated by inheriting from (external) de.csmath.codec.StreamDecoder: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala); now invalidating by inheritance (internally).
Invalidating (transitively) by inheritance from /Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala...
Initial set of included nodes: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala)
Invalidated by transitive inheritance dependency: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala)
Getting direct dependencies of all sources transitively invalidated by inheritance.
Getting sources that directly depend on (external) de.csmath.codec.StreamDecoder.
The following modified names cause invalidation of /Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala: Set(checkedByteStream)
The de.csmath.codec.StreamCodec source file has the following regular definitions changed:
	flatten, filledStream, intStream, groupStreamAux, groupStream, groupBStreamAux, groupBStream, byteStream.
All member reference dependencies will be considered within this context.
Files invalidated by inheriting from (external) de.csmath.codec.StreamCodec: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala); now invalidating by inheritance (internally).
Invalidating (transitively) by inheritance from /Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala...
Initial set of included nodes: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala)
Invalidated by transitive inheritance dependency: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala)
Getting direct dependencies of all sources transitively invalidated by inheritance.
Getting sources that directly depend on (external) de.csmath.codec.StreamCodec.
The following modified names cause invalidation of /Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala: Set(flatten, filledStream, intStream, groupStream, groupBStream, byteStream)

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala)
Removed products: Set()
External API changes: API Changes: Set(NamesChange(de.csmath.codec.Codec$,ModifiedNames(regularNames = needPads, implicitNames = )), NamesChange(de.csmath.codec.StreamDecoder,ModifiedNames(regularNames = filteredStream, checkedByteStream, implicitNames = )), NamesChange(de.csmath.codec.StreamCodec,ModifiedNames(regularNames = flatten, filledStream, intStream, groupStreamAux, groupStream, groupBStreamAux, groupBStream, byteStream, implicitNames = )))
Modified binary dependencies: Set()
Initial directly invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala)

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala, /Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala)
All initially invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala, /Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala)

Read from stdout: Compiling 2 Scala sources to /Users/lpfeiler/develop/github/base64/target/scala-2.11/test-classes...
Compiling 2 Scala sources to /Users/lpfeiler/develop/github/base64/target/scala-2.11/test-classes...
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Running cached compiler 2cc0355e, interfacing (CompilerInterface) with Scala compiler version 2.11.7
Calling Scala compiler with arguments  (CompilerInterface):
	-bootclasspath
	/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/classes:/Users/lpfeiler/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.11.7.jar
	-classpath
	/Users/lpfeiler/develop/github/base64/target/scala-2.11/test-classes:/Users/lpfeiler/develop/github/base64/target/scala-2.11/classes:/Users/lpfeiler/develop/scala/activator-dist-1.3.6/repository/org.scalatest/scalatest_2.11/2.2.4/bundles/scalatest_2.11.jar:/Users/lpfeiler/develop/scala/activator-dist-1.3.6/repository/org.scala-lang/scala-reflect/2.11.2/jars/scala-reflect.jar:/Users/lpfeiler/develop/scala/activator-dist-1.3.6/repository/org.scala-lang.modules/scala-xml_2.11/1.0.2/bundles/scala-xml_2.11.jar
Read from stdout: /Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala:11: method byteStream in trait StreamCodec cannot be accessed in de.csmath.codec.StreamCodec
Read from stdout: Access to protected method byteStream not permitted because
Read from stdout: enclosing class StreamCodecSpec is not a subclass of 
Read from stdout: trait StreamCodec in package codec where target is defined
/Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala:11: method byteStream in trait StreamCodec cannot be accessed in de.csmath.codec.StreamCodec
 Access to protected method byteStream not permitted because
 enclosing class StreamCodecSpec is not a subclass of 
 trait StreamCodec in package codec where target is defined
Read from stdout: val s = sc.byteStream(list)
      val s = sc.byteStream(list)
Read from stdout: ^
                 ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala:23: method intStream in trait StreamCodec cannot be accessed in de.csmath.codec.StreamCodec
Read from stdout: Access to protected method intStream not permitted because
Read from stdout: enclosing class StreamCodecSpec is not a subclass of 
Read from stdout: trait StreamCodec in package codec where target is defined
/Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala:23: method intStream in trait StreamCodec cannot be accessed in de.csmath.codec.StreamCodec
 Access to protected method intStream not permitted because
 enclosing class StreamCodecSpec is not a subclass of 
 trait StreamCodec in package codec where target is defined
Read from stdout: val s = sc.intStream(list)
      val s = sc.intStream(list)
Read from stdout: ^
                 ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala:35: method intStream in trait StreamCodec cannot be accessed in de.csmath.codec.StreamCodec
Read from stdout: Access to protected method intStream not permitted because
Read from stdout: enclosing class StreamCodecSpec is not a subclass of 
Read from stdout: trait StreamCodec in package codec where target is defined
/Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala:35: method intStream in trait StreamCodec cannot be accessed in de.csmath.codec.StreamCodec
 Access to protected method intStream not permitted because
 enclosing class StreamCodecSpec is not a subclass of 
 trait StreamCodec in package codec where target is defined
Read from stdout: val s = sc.intStream(list)
      val s = sc.intStream(list)
Read from stdout: ^
                 ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala:36: method groupStream in trait StreamCodec cannot be accessed in de.csmath.codec.StreamCodec
Read from stdout: Access to protected method groupStream not permitted because
Read from stdout: enclosing class StreamCodecSpec is not a subclass of 
Read from stdout: trait StreamCodec in package codec where target is defined
/Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala:36: method groupStream in trait StreamCodec cannot be accessed in de.csmath.codec.StreamCodec
 Access to protected method groupStream not permitted because
 enclosing class StreamCodecSpec is not a subclass of 
 trait StreamCodec in package codec where target is defined
Read from stdout: val g = sc.groupStream(2,s)
      val g = sc.groupStream(2,s)
Read from stdout: ^
                 ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala:16: method checkedByteStream in trait StreamDecoder cannot be accessed in de.csmath.codec.StreamDecoder
Read from stdout: Access to protected method checkedByteStream not permitted because
Read from stdout: enclosing class StreamDecoderSpec is not a subclass of 
Read from stdout: trait StreamDecoder in package codec where target is defined
/Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala:16: method checkedByteStream in trait StreamDecoder cannot be accessed in de.csmath.codec.StreamDecoder
 Access to protected method checkedByteStream not permitted because
 enclosing class StreamDecoderSpec is not a subclass of 
 trait StreamDecoder in package codec where target is defined
Read from stdout: val s = sc.checkedByteStream(pred,list1)
      val s = sc.checkedByteStream(pred,list1)
Read from stdout: ^
                 ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala:17: method checkedByteStream in trait StreamDecoder cannot be accessed in de.csmath.codec.StreamDecoder
Read from stdout: Access to protected method checkedByteStream not permitted because
Read from stdout: enclosing class StreamDecoderSpec is not a subclass of 
Read from stdout: trait StreamDecoder in package codec where target is defined
/Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala:17: method checkedByteStream in trait StreamDecoder cannot be accessed in de.csmath.codec.StreamDecoder
 Access to protected method checkedByteStream not permitted because
 enclosing class StreamDecoderSpec is not a subclass of 
 trait StreamDecoder in package codec where target is defined
Read from stdout: val t = sc.checkedByteStream(pred,list2)
      val t = sc.checkedByteStream(pred,list2)
Read from stdout: ^
                 ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala:23: value head is not a member of Any
/Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala:23: value head is not a member of Any
Read from stdout: u.head should === (1)
            u.head should === (1)
Read from stdout: ^
              ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala:24: value tail is not a member of Any
/Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala:24: value tail is not a member of Any
Read from stdout: u.tail.head should === (2)
            u.tail.head should === (2)
Read from stdout: ^
              ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala:25: value tail is not a member of Any
/Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala:25: value tail is not a member of Any
Read from stdout: u.tail.tail.head should === (1)
            u.tail.tail.head should === (1)
Read from stdout: ^
              ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala:26: value tail is not a member of Any
/Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala:26: value tail is not a member of Any
Read from stdout: u.tail.tail.tail.head should === (2)
            u.tail.tail.tail.head should === (2)
Read from stdout: ^
              ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala:27: value tail is not a member of Any
/Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala:27: value tail is not a member of Any
Read from stdout: u.tail.tail.tail.tail should === (Stream.empty)
            u.tail.tail.tail.tail should === (Stream.empty)
Read from stdout: ^
              ^
Read from stdout: 11 errors found
11 errors found
Compilation failed (CompilerInterface)
Read from stdout: (test:compileIncremental) Compilation failed
(test:compileIncremental) Compilation failed
Total time: 1 s, completed 31.05.2016 22:56:15
> server-post-command-error-handler
> server-post-command-cleanup
> server-handle-next-server-request
> compile
Evaluating tasks: compile:compile
Running task... Cancel: sbt.server.ServerTaskCancellation@7e81e020, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set()
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set()

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set()

Total time: 0 s, completed 31.05.2016 22:56:44
> server-post-command-cleanup
> server-handle-next-server-request
> test
Evaluating tasks: test:test
Running task... Cancel: sbt.server.ServerTaskCancellation@3080451f, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set()
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set()

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set()

Copy resource mappings: 
	
The de.csmath.codec.Codec$ source file has the following regular definitions changed:
	needPads.
All member reference dependencies will be considered within this context.
Files invalidated by inheriting from (external) de.csmath.codec.Codec$: Set(); now invalidating by inheritance (internally).
Getting direct dependencies of all sources transitively invalidated by inheritance.
Getting sources that directly depend on (external) de.csmath.codec.Codec$.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/test/scala/Base16Spec.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/test/scala/Base32Spec.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/test/scala/Base64Spec.scala. This dependency is not being considered for invalidation.
The de.csmath.codec.StreamDecoder source file has the following regular definitions changed:
	filteredStream, checkedByteStream.
All member reference dependencies will be considered within this context.
Files invalidated by inheriting from (external) de.csmath.codec.StreamDecoder: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala); now invalidating by inheritance (internally).
Invalidating (transitively) by inheritance from /Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala...
Initial set of included nodes: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala)
Invalidated by transitive inheritance dependency: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala)
Getting direct dependencies of all sources transitively invalidated by inheritance.
Getting sources that directly depend on (external) de.csmath.codec.StreamDecoder.
The following modified names cause invalidation of /Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala: Set(checkedByteStream)
The de.csmath.codec.StreamCodec source file has the following regular definitions changed:
	flatten, filledStream, intStream, groupStreamAux, groupStream, groupBStreamAux, groupBStream, byteStream.
All member reference dependencies will be considered within this context.
Files invalidated by inheriting from (external) de.csmath.codec.StreamCodec: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala); now invalidating by inheritance (internally).
Invalidating (transitively) by inheritance from /Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala...
Initial set of included nodes: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala)
Invalidated by transitive inheritance dependency: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala)
Getting direct dependencies of all sources transitively invalidated by inheritance.
Getting sources that directly depend on (external) de.csmath.codec.StreamCodec.
The following modified names cause invalidation of /Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala: Set(flatten, filledStream, intStream, groupStream, groupBStream, byteStream)

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala)
Removed products: Set()
External API changes: API Changes: Set(NamesChange(de.csmath.codec.Codec$,ModifiedNames(regularNames = needPads, implicitNames = )), NamesChange(de.csmath.codec.StreamDecoder,ModifiedNames(regularNames = filteredStream, checkedByteStream, implicitNames = )), NamesChange(de.csmath.codec.StreamCodec,ModifiedNames(regularNames = flatten, filledStream, intStream, groupStreamAux, groupStream, groupBStreamAux, groupBStream, byteStream, implicitNames = )))
Modified binary dependencies: Set()
Initial directly invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala)

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala, /Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala)
All initially invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala, /Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala)

Read from stdout: Compiling 2 Scala sources to /Users/lpfeiler/develop/github/base64/target/scala-2.11/test-classes...
Compiling 2 Scala sources to /Users/lpfeiler/develop/github/base64/target/scala-2.11/test-classes...
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Running cached compiler 1fbb1ba9, interfacing (CompilerInterface) with Scala compiler version 2.11.7
Calling Scala compiler with arguments  (CompilerInterface):
	-bootclasspath
	/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/classes:/Users/lpfeiler/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.11.7.jar
	-classpath
	/Users/lpfeiler/develop/github/base64/target/scala-2.11/test-classes:/Users/lpfeiler/develop/github/base64/target/scala-2.11/classes:/Users/lpfeiler/develop/scala/activator-dist-1.3.6/repository/org.scalatest/scalatest_2.11/2.2.4/bundles/scalatest_2.11.jar:/Users/lpfeiler/develop/scala/activator-dist-1.3.6/repository/org.scala-lang/scala-reflect/2.11.2/jars/scala-reflect.jar:/Users/lpfeiler/develop/scala/activator-dist-1.3.6/repository/org.scala-lang.modules/scala-xml_2.11/1.0.2/bundles/scala-xml_2.11.jar
Read from stdout: /Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala:11: method byteStream in trait StreamCodec cannot be accessed in de.csmath.codec.StreamCodec
Read from stdout: Access to protected method byteStream not permitted because
Read from stdout: enclosing class StreamCodecSpec is not a subclass of 
Read from stdout: trait StreamCodec in package codec where target is defined
/Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala:11: method byteStream in trait StreamCodec cannot be accessed in de.csmath.codec.StreamCodec
 Access to protected method byteStream not permitted because
 enclosing class StreamCodecSpec is not a subclass of 
 trait StreamCodec in package codec where target is defined
Read from stdout: val s = sc.byteStream(list)
      val s = sc.byteStream(list)
Read from stdout: ^
                 ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala:23: method intStream in trait StreamCodec cannot be accessed in de.csmath.codec.StreamCodec
Read from stdout: Access to protected method intStream not permitted because
Read from stdout: enclosing class StreamCodecSpec is not a subclass of 
Read from stdout: trait StreamCodec in package codec where target is defined
/Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala:23: method intStream in trait StreamCodec cannot be accessed in de.csmath.codec.StreamCodec
 Access to protected method intStream not permitted because
 enclosing class StreamCodecSpec is not a subclass of 
 trait StreamCodec in package codec where target is defined
Read from stdout: val s = sc.intStream(list)
      val s = sc.intStream(list)
Read from stdout: ^
                 ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala:16: method checkedByteStream in trait StreamDecoder cannot be accessed in de.csmath.codec.StreamDecoder
Read from stdout: Access to protected method checkedByteStream not permitted because
Read from stdout: enclosing class StreamDecoderSpec is not a subclass of 
Read from stdout: trait StreamDecoder in package codec where target is defined
/Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala:16: method checkedByteStream in trait StreamDecoder cannot be accessed in de.csmath.codec.StreamDecoder
 Access to protected method checkedByteStream not permitted because
 enclosing class StreamDecoderSpec is not a subclass of 
 trait StreamDecoder in package codec where target is defined
Read from stdout: val s = sc.checkedByteStream(pred,list1)
      val s = sc.checkedByteStream(pred,list1)
Read from stdout: ^
                 ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala:17: method checkedByteStream in trait StreamDecoder cannot be accessed in de.csmath.codec.StreamDecoder
Read from stdout: Access to protected method checkedByteStream not permitted because
Read from stdout: enclosing class StreamDecoderSpec is not a subclass of 
Read from stdout: trait StreamDecoder in package codec where target is defined
/Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala:17: method checkedByteStream in trait StreamDecoder cannot be accessed in de.csmath.codec.StreamDecoder
 Access to protected method checkedByteStream not permitted because
 enclosing class StreamDecoderSpec is not a subclass of 
 trait StreamDecoder in package codec where target is defined
Read from stdout: val t = sc.checkedByteStream(pred,list2)
      val t = sc.checkedByteStream(pred,list2)
Read from stdout: ^
                 ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala:23: value head is not a member of Any
/Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala:23: value head is not a member of Any
Read from stdout: u.head should === (1)
            u.head should === (1)
Read from stdout: ^
              ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala:24: value tail is not a member of Any
/Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala:24: value tail is not a member of Any
Read from stdout: u.tail.head should === (2)
            u.tail.head should === (2)
Read from stdout: ^
              ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala:25: value tail is not a member of Any
/Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala:25: value tail is not a member of Any
Read from stdout: u.tail.tail.head should === (1)
            u.tail.tail.head should === (1)
Read from stdout: ^
              ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala:26: value tail is not a member of Any
/Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala:26: value tail is not a member of Any
Read from stdout: u.tail.tail.tail.head should === (2)
            u.tail.tail.tail.head should === (2)
Read from stdout: ^
              ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala:27: value tail is not a member of Any
/Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala:27: value tail is not a member of Any
Read from stdout: u.tail.tail.tail.tail should === (Stream.empty)
            u.tail.tail.tail.tail should === (Stream.empty)
Read from stdout: ^
              ^
Read from stdout: 9 errors found
9 errors found
Compilation failed (CompilerInterface)
Read from stdout: (test:compileIncremental) Compilation failed
(test:compileIncremental) Compilation failed
Total time: 1 s, completed 31.05.2016 22:56:45
> server-post-command-error-handler
> server-post-command-cleanup
> server-handle-next-server-request
> compile
Evaluating tasks: compile:compile
Running task... Cancel: sbt.server.ServerTaskCancellation@3da739a0, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set()
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set()

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set()

Total time: 0 s, completed 31.05.2016 22:57:15
> server-post-command-cleanup
> server-handle-next-server-request
> test
Evaluating tasks: test:test
Running task... Cancel: sbt.server.ServerTaskCancellation@5e344f76, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set()
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set()

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set()

Copy resource mappings: 
	
The de.csmath.codec.Codec$ source file has the following regular definitions changed:
	needPads.
All member reference dependencies will be considered within this context.
Files invalidated by inheriting from (external) de.csmath.codec.Codec$: Set(); now invalidating by inheritance (internally).
Getting direct dependencies of all sources transitively invalidated by inheritance.
Getting sources that directly depend on (external) de.csmath.codec.Codec$.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/test/scala/Base16Spec.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/test/scala/Base32Spec.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/test/scala/Base64Spec.scala. This dependency is not being considered for invalidation.
The de.csmath.codec.StreamDecoder source file has the following regular definitions changed:
	filteredStream, checkedByteStream.
All member reference dependencies will be considered within this context.
Files invalidated by inheriting from (external) de.csmath.codec.StreamDecoder: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala); now invalidating by inheritance (internally).
Invalidating (transitively) by inheritance from /Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala...
Initial set of included nodes: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala)
Invalidated by transitive inheritance dependency: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala)
Getting direct dependencies of all sources transitively invalidated by inheritance.
Getting sources that directly depend on (external) de.csmath.codec.StreamDecoder.
The following modified names cause invalidation of /Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala: Set(checkedByteStream)
The de.csmath.codec.StreamCodec source file has the following regular definitions changed:
	flatten, filledStream, intStream, groupStreamAux, groupStream, groupBStreamAux, groupBStream, byteStream.
All member reference dependencies will be considered within this context.
Files invalidated by inheriting from (external) de.csmath.codec.StreamCodec: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala); now invalidating by inheritance (internally).
Invalidating (transitively) by inheritance from /Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala...
Initial set of included nodes: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala)
Invalidated by transitive inheritance dependency: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala)
Getting direct dependencies of all sources transitively invalidated by inheritance.
Getting sources that directly depend on (external) de.csmath.codec.StreamCodec.
The following modified names cause invalidation of /Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala: Set(flatten, filledStream, intStream, groupStream, groupBStream, byteStream)

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala)
Removed products: Set()
External API changes: API Changes: Set(NamesChange(de.csmath.codec.Codec$,ModifiedNames(regularNames = needPads, implicitNames = )), NamesChange(de.csmath.codec.StreamDecoder,ModifiedNames(regularNames = filteredStream, checkedByteStream, implicitNames = )), NamesChange(de.csmath.codec.StreamCodec,ModifiedNames(regularNames = flatten, filledStream, intStream, groupStreamAux, groupStream, groupBStreamAux, groupBStream, byteStream, implicitNames = )))
Modified binary dependencies: Set()
Initial directly invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala)

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala, /Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala)
All initially invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala, /Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala)

Read from stdout: Compiling 2 Scala sources to /Users/lpfeiler/develop/github/base64/target/scala-2.11/test-classes...
Compiling 2 Scala sources to /Users/lpfeiler/develop/github/base64/target/scala-2.11/test-classes...
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Running cached compiler 8436fff, interfacing (CompilerInterface) with Scala compiler version 2.11.7
Calling Scala compiler with arguments  (CompilerInterface):
	-bootclasspath
	/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/classes:/Users/lpfeiler/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.11.7.jar
	-classpath
	/Users/lpfeiler/develop/github/base64/target/scala-2.11/test-classes:/Users/lpfeiler/develop/github/base64/target/scala-2.11/classes:/Users/lpfeiler/develop/scala/activator-dist-1.3.6/repository/org.scalatest/scalatest_2.11/2.2.4/bundles/scalatest_2.11.jar:/Users/lpfeiler/develop/scala/activator-dist-1.3.6/repository/org.scala-lang/scala-reflect/2.11.2/jars/scala-reflect.jar:/Users/lpfeiler/develop/scala/activator-dist-1.3.6/repository/org.scala-lang.modules/scala-xml_2.11/1.0.2/bundles/scala-xml_2.11.jar
Read from stdout: /Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala:11: method byteStream in trait StreamCodec cannot be accessed in de.csmath.codec.StreamCodec
Read from stdout: Access to protected method byteStream not permitted because
Read from stdout: enclosing class StreamCodecSpec is not a subclass of 
Read from stdout: trait StreamCodec in package codec where target is defined
/Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala:11: method byteStream in trait StreamCodec cannot be accessed in de.csmath.codec.StreamCodec
 Access to protected method byteStream not permitted because
 enclosing class StreamCodecSpec is not a subclass of 
 trait StreamCodec in package codec where target is defined
Read from stdout: val s = sc.byteStream(list)
      val s = sc.byteStream(list)
Read from stdout: ^
                 ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala:16: method checkedByteStream in trait StreamDecoder cannot be accessed in de.csmath.codec.StreamDecoder
Read from stdout: Access to protected method checkedByteStream not permitted because
Read from stdout: enclosing class StreamDecoderSpec is not a subclass of 
Read from stdout: trait StreamDecoder in package codec where target is defined
/Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala:16: method checkedByteStream in trait StreamDecoder cannot be accessed in de.csmath.codec.StreamDecoder
 Access to protected method checkedByteStream not permitted because
 enclosing class StreamDecoderSpec is not a subclass of 
 trait StreamDecoder in package codec where target is defined
Read from stdout: val s = sc.checkedByteStream(pred,list1)
      val s = sc.checkedByteStream(pred,list1)
Read from stdout: ^
                 ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala:17: method checkedByteStream in trait StreamDecoder cannot be accessed in de.csmath.codec.StreamDecoder
Read from stdout: Access to protected method checkedByteStream not permitted because
Read from stdout: enclosing class StreamDecoderSpec is not a subclass of 
Read from stdout: trait StreamDecoder in package codec where target is defined
/Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala:17: method checkedByteStream in trait StreamDecoder cannot be accessed in de.csmath.codec.StreamDecoder
 Access to protected method checkedByteStream not permitted because
 enclosing class StreamDecoderSpec is not a subclass of 
 trait StreamDecoder in package codec where target is defined
Read from stdout: val t = sc.checkedByteStream(pred,list2)
      val t = sc.checkedByteStream(pred,list2)
Read from stdout: ^
                 ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala:23: value head is not a member of Any
/Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala:23: value head is not a member of Any
Read from stdout: u.head should === (1)
            u.head should === (1)
Read from stdout: ^
              ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala:24: value tail is not a member of Any
/Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala:24: value tail is not a member of Any
Read from stdout: u.tail.head should === (2)
            u.tail.head should === (2)
Read from stdout: ^
              ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala:25: value tail is not a member of Any
/Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala:25: value tail is not a member of Any
Read from stdout: u.tail.tail.head should === (1)
            u.tail.tail.head should === (1)
Read from stdout: ^
              ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala:26: value tail is not a member of Any
/Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala:26: value tail is not a member of Any
Read from stdout: u.tail.tail.tail.head should === (2)
            u.tail.tail.tail.head should === (2)
Read from stdout: ^
              ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala:27: value tail is not a member of Any
/Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala:27: value tail is not a member of Any
Read from stdout: u.tail.tail.tail.tail should === (Stream.empty)
            u.tail.tail.tail.tail should === (Stream.empty)
Read from stdout: ^
              ^
Read from stdout: 8 errors found
8 errors found
Compilation failed (CompilerInterface)
Read from stdout: (test:compileIncremental) Compilation failed
(test:compileIncremental) Compilation failed
Total time: 1 s, completed 31.05.2016 22:57:17
> server-post-command-error-handler
> server-post-command-cleanup
> server-handle-next-server-request
> compile
Evaluating tasks: compile:compile
Running task... Cancel: sbt.server.ServerTaskCancellation@70d8d89, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set()
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set()

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set()

Total time: 0 s, completed 31.05.2016 22:57:49
> server-post-command-cleanup
> server-handle-next-server-request
> test
Evaluating tasks: test:test
Running task... Cancel: sbt.server.ServerTaskCancellation@42530130, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set()
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set()

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set()

Copy resource mappings: 
	
The de.csmath.codec.Codec$ source file has the following regular definitions changed:
	needPads.
All member reference dependencies will be considered within this context.
Files invalidated by inheriting from (external) de.csmath.codec.Codec$: Set(); now invalidating by inheritance (internally).
Getting direct dependencies of all sources transitively invalidated by inheritance.
Getting sources that directly depend on (external) de.csmath.codec.Codec$.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/test/scala/Base16Spec.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/test/scala/Base32Spec.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/test/scala/Base64Spec.scala. This dependency is not being considered for invalidation.
The de.csmath.codec.StreamDecoder source file has the following regular definitions changed:
	filteredStream, checkedByteStream.
All member reference dependencies will be considered within this context.
Files invalidated by inheriting from (external) de.csmath.codec.StreamDecoder: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala); now invalidating by inheritance (internally).
Invalidating (transitively) by inheritance from /Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala...
Initial set of included nodes: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala)
Invalidated by transitive inheritance dependency: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala)
Getting direct dependencies of all sources transitively invalidated by inheritance.
Getting sources that directly depend on (external) de.csmath.codec.StreamDecoder.
The following modified names cause invalidation of /Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala: Set(checkedByteStream)
The de.csmath.codec.StreamCodec source file has the following regular definitions changed:
	flatten, filledStream, intStream, groupStreamAux, groupStream, groupBStreamAux, groupBStream, byteStream.
All member reference dependencies will be considered within this context.
Files invalidated by inheriting from (external) de.csmath.codec.StreamCodec: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala); now invalidating by inheritance (internally).
Invalidating (transitively) by inheritance from /Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala...
Initial set of included nodes: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala)
Invalidated by transitive inheritance dependency: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala)
Getting direct dependencies of all sources transitively invalidated by inheritance.
Getting sources that directly depend on (external) de.csmath.codec.StreamCodec.
The following modified names cause invalidation of /Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala: Set(flatten, filledStream, intStream, groupStream, groupBStream, byteStream)

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala)
Removed products: Set()
External API changes: API Changes: Set(NamesChange(de.csmath.codec.Codec$,ModifiedNames(regularNames = needPads, implicitNames = )), NamesChange(de.csmath.codec.StreamDecoder,ModifiedNames(regularNames = filteredStream, checkedByteStream, implicitNames = )), NamesChange(de.csmath.codec.StreamCodec,ModifiedNames(regularNames = flatten, filledStream, intStream, groupStreamAux, groupStream, groupBStreamAux, groupBStream, byteStream, implicitNames = )))
Modified binary dependencies: Set()
Initial directly invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala)

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala, /Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala)
All initially invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala, /Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala)

Read from stdout: Compiling 2 Scala sources to /Users/lpfeiler/develop/github/base64/target/scala-2.11/test-classes...
Compiling 2 Scala sources to /Users/lpfeiler/develop/github/base64/target/scala-2.11/test-classes...
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Running cached compiler 58f1af6a, interfacing (CompilerInterface) with Scala compiler version 2.11.7
Calling Scala compiler with arguments  (CompilerInterface):
	-bootclasspath
	/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/classes:/Users/lpfeiler/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.11.7.jar
	-classpath
	/Users/lpfeiler/develop/github/base64/target/scala-2.11/test-classes:/Users/lpfeiler/develop/github/base64/target/scala-2.11/classes:/Users/lpfeiler/develop/scala/activator-dist-1.3.6/repository/org.scalatest/scalatest_2.11/2.2.4/bundles/scalatest_2.11.jar:/Users/lpfeiler/develop/scala/activator-dist-1.3.6/repository/org.scala-lang/scala-reflect/2.11.2/jars/scala-reflect.jar:/Users/lpfeiler/develop/scala/activator-dist-1.3.6/repository/org.scala-lang.modules/scala-xml_2.11/1.0.2/bundles/scala-xml_2.11.jar
Read from stdout: /Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala:16: method checkedByteStream in trait StreamDecoder cannot be accessed in de.csmath.codec.StreamDecoder
Read from stdout: Access to protected method checkedByteStream not permitted because
Read from stdout: enclosing class StreamDecoderSpec is not a subclass of 
Read from stdout: trait StreamDecoder in package codec where target is defined
/Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala:16: method checkedByteStream in trait StreamDecoder cannot be accessed in de.csmath.codec.StreamDecoder
 Access to protected method checkedByteStream not permitted because
 enclosing class StreamDecoderSpec is not a subclass of 
 trait StreamDecoder in package codec where target is defined
Read from stdout: val s = sc.checkedByteStream(pred,list1)
      val s = sc.checkedByteStream(pred,list1)
Read from stdout: ^
                 ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala:17: method checkedByteStream in trait StreamDecoder cannot be accessed in de.csmath.codec.StreamDecoder
Read from stdout: Access to protected method checkedByteStream not permitted because
Read from stdout: enclosing class StreamDecoderSpec is not a subclass of 
Read from stdout: trait StreamDecoder in package codec where target is defined
/Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala:17: method checkedByteStream in trait StreamDecoder cannot be accessed in de.csmath.codec.StreamDecoder
 Access to protected method checkedByteStream not permitted because
 enclosing class StreamDecoderSpec is not a subclass of 
 trait StreamDecoder in package codec where target is defined
Read from stdout: val t = sc.checkedByteStream(pred,list2)
      val t = sc.checkedByteStream(pred,list2)
Read from stdout: ^
                 ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala:23: value head is not a member of Any
/Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala:23: value head is not a member of Any
Read from stdout: u.head should === (1)
            u.head should === (1)
Read from stdout: ^
              ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala:24: value tail is not a member of Any
/Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala:24: value tail is not a member of Any
Read from stdout: u.tail.head should === (2)
            u.tail.head should === (2)
Read from stdout: ^
              ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala:25: value tail is not a member of Any
/Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala:25: value tail is not a member of Any
Read from stdout: u.tail.tail.head should === (1)
            u.tail.tail.head should === (1)
Read from stdout: ^
              ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala:26: value tail is not a member of Any
/Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala:26: value tail is not a member of Any
Read from stdout: u.tail.tail.tail.head should === (2)
            u.tail.tail.tail.head should === (2)
Read from stdout: ^
              ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala:27: value tail is not a member of Any
/Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala:27: value tail is not a member of Any
Read from stdout: u.tail.tail.tail.tail should === (Stream.empty)
            u.tail.tail.tail.tail should === (Stream.empty)
Read from stdout: ^
              ^
Read from stdout: 7 errors found
7 errors found
Compilation failed (CompilerInterface)
Read from stdout: (test:compileIncremental) Compilation failed
(test:compileIncremental) Compilation failed
Total time: 1 s, completed 31.05.2016 22:57:50
> server-post-command-error-handler
> server-post-command-cleanup
> server-handle-next-server-request
> compile
Evaluating tasks: compile:compile
Running task... Cancel: sbt.server.ServerTaskCancellation@7c0827c7, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set()
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set()

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set()

Total time: 0 s, completed 31.05.2016 22:59:00
> server-post-command-cleanup
> server-handle-next-server-request
> test
Evaluating tasks: test:test
Running task... Cancel: sbt.server.ServerTaskCancellation@44290014, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set()
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set()

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set()

Copy resource mappings: 
	
The de.csmath.codec.Codec$ source file has the following regular definitions changed:
	needPads.
All member reference dependencies will be considered within this context.
Files invalidated by inheriting from (external) de.csmath.codec.Codec$: Set(); now invalidating by inheritance (internally).
Getting direct dependencies of all sources transitively invalidated by inheritance.
Getting sources that directly depend on (external) de.csmath.codec.Codec$.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/test/scala/Base16Spec.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/test/scala/Base32Spec.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/test/scala/Base64Spec.scala. This dependency is not being considered for invalidation.
The de.csmath.codec.StreamDecoder source file has the following regular definitions changed:
	filteredStream, checkedByteStream.
All member reference dependencies will be considered within this context.
Files invalidated by inheriting from (external) de.csmath.codec.StreamDecoder: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala); now invalidating by inheritance (internally).
Invalidating (transitively) by inheritance from /Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala...
Initial set of included nodes: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala)
Invalidated by transitive inheritance dependency: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala)
Getting direct dependencies of all sources transitively invalidated by inheritance.
Getting sources that directly depend on (external) de.csmath.codec.StreamDecoder.
The following modified names cause invalidation of /Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala: Set(checkedByteStream)
The de.csmath.codec.StreamCodec source file has the following regular definitions changed:
	flatten, filledStream, intStream, groupStreamAux, groupStream, groupBStreamAux, groupBStream, byteStream.
All member reference dependencies will be considered within this context.
Files invalidated by inheriting from (external) de.csmath.codec.StreamCodec: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala); now invalidating by inheritance (internally).
Invalidating (transitively) by inheritance from /Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala...
Initial set of included nodes: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala)
Invalidated by transitive inheritance dependency: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala)
Getting direct dependencies of all sources transitively invalidated by inheritance.
Getting sources that directly depend on (external) de.csmath.codec.StreamCodec.
The following modified names cause invalidation of /Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala: Set(flatten, filledStream, intStream, groupStream, groupBStream, byteStream)

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala, /Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala)
Removed products: Set()
External API changes: API Changes: Set(NamesChange(de.csmath.codec.Codec$,ModifiedNames(regularNames = needPads, implicitNames = )), NamesChange(de.csmath.codec.StreamDecoder,ModifiedNames(regularNames = filteredStream, checkedByteStream, implicitNames = )), NamesChange(de.csmath.codec.StreamCodec,ModifiedNames(regularNames = flatten, filledStream, intStream, groupStreamAux, groupStream, groupBStreamAux, groupBStream, byteStream, implicitNames = )))
Modified binary dependencies: Set()
Initial directly invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala, /Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala)

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala, /Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala)
All initially invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala, /Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala)

Read from stdout: Compiling 2 Scala sources to /Users/lpfeiler/develop/github/base64/target/scala-2.11/test-classes...
Compiling 2 Scala sources to /Users/lpfeiler/develop/github/base64/target/scala-2.11/test-classes...
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Running cached compiler 75140022, interfacing (CompilerInterface) with Scala compiler version 2.11.7
Calling Scala compiler with arguments  (CompilerInterface):
	-bootclasspath
	/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/classes:/Users/lpfeiler/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.11.7.jar
	-classpath
	/Users/lpfeiler/develop/github/base64/target/scala-2.11/test-classes:/Users/lpfeiler/develop/github/base64/target/scala-2.11/classes:/Users/lpfeiler/develop/scala/activator-dist-1.3.6/repository/org.scalatest/scalatest_2.11/2.2.4/bundles/scalatest_2.11.jar:/Users/lpfeiler/develop/scala/activator-dist-1.3.6/repository/org.scala-lang/scala-reflect/2.11.2/jars/scala-reflect.jar:/Users/lpfeiler/develop/scala/activator-dist-1.3.6/repository/org.scala-lang.modules/scala-xml_2.11/1.0.2/bundles/scala-xml_2.11.jar
Read from stdout: /Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala:22: match may not be exhaustive.
Read from stdout: It would fail on the following input: Failure(_)
/Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala:22: match may not be exhaustive.
It would fail on the following input: Failure(_)
Read from stdout: sc.t match {
      sc.t match {
Read from stdout: ^
         ^
Read from stdout: there were 23 feature warnings; re-run with -feature for details
there were 23 feature warnings; re-run with -feature for details
Read from stdout: two warnings found
two warnings found
Scala compilation took 2.614515115 s
New invalidations:
	Set()
Initial set of included nodes: Set()
Previously invalidated, but (transitively) depend on new invalidations:
	Set()
All newly invalidated sources after taking into account (previously) recompiled sources:Set()
Copy resource mappings: 
	
Framework implementation 'org.scalacheck.ScalaCheckFramework' not present.
Framework implementation 'org.specs2.runner.Specs2Framework' not present.
Framework implementation 'org.specs2.runner.SpecsFramework' not present.
Framework implementation 'org.specs.runner.SpecsFramework' not present.
Framework implementation 'com.novocode.junit.JUnitFramework' not present.
Subclass fingerprints: List((org.scalatest.Suite,false,org.scalatest.tools.Framework$$anon$1@5b4737e9))
Annotation fingerprints: List((org.scalatest.WrapWith,false,org.scalatest.tools.Framework$$anon$2@723b2c3c))
Running TaskDef(StreamDecoderSpec, org.scalatest.tools.Framework$$anon$1@5b4737e9, false, [SuiteSelector])
Running TaskDef(StreamCodecSpec, org.scalatest.tools.Framework$$anon$1@5b4737e9, false, [SuiteSelector])
Running TaskDef(Base64Spec, org.scalatest.tools.Framework$$anon$1@5b4737e9, false, [SuiteSelector])
Running TaskDef(Base16Spec, org.scalatest.tools.Framework$$anon$1@5b4737e9, false, [SuiteSelector])
Read from stdout: StreamDecoderSpec:
Read from stdout: StreamDecoder
Read from stdout: - should check allowed bytes
[32mStreamDecoderSpec:[0m
[32mStreamDecoder[0m
[32m- should check allowed bytes[0m
Read from stdout: StreamCodecSpec:
Read from stdout: StreamCodec
Read from stdout: - should create a ByteStream
Read from stdout: StreamCodec
Read from stdout: - should create a IntStream
Read from stdout: StreamCodec
Read from stdout: - should create a groupStream
Read from stdout: StreamCodec
Read from stdout: - should create a filledStream
Read from stdout: StreamCodec
Read from stdout: - should flatten a filledStream
[32mStreamCodecSpec:[0m
[32mStreamCodec[0m
[32m- should create a ByteStream[0m
[32mStreamCodec[0m
[32m- should create a IntStream[0m
[32mStreamCodec[0m
[32m- should create a groupStream[0m
[32mStreamCodec[0m
[32m- should create a filledStream[0m
[32mStreamCodec[0m
[32m- should flatten a filledStream[0m
Read from stdout: Base16Spec:
Read from stdout: Base16
Read from stdout: - should encode to BASE16
[32mBase16Spec:[0m
[32mBase16[0m
[32m- should encode to BASE16[0m
Running TaskDef(Base32Spec, org.scalatest.tools.Framework$$anon$1@5b4737e9, false, [SuiteSelector])
Read from stdout: Base64Spec:
Read from stdout: Base64
Read from stdout: - should encode to BASE64
Read from stdout: Base64
Read from stdout: - should encode to BASE64FILE
Read from stdout: Base64
Read from stdout: - should encode to BASE64URL
Read from stdout: Base64
Read from stdout: - should encode to BASE64NOPAD
Read from stdout: Base64
Read from stdout: - should encode to BASE64FILENOPAD
Read from stdout: Base64
Read from stdout: - should encode to BASE64URLNOPAD
Read from stdout: Base64
Read from stdout: - should decode from BASE64
Read from stdout: Base64
Read from stdout: - should decode from BASE64 w/o padding
Read from stdout: Base64
Read from stdout: - should fail with crap
Read from stdout: Base64
Read from stdout: - should decode from BASE64FILE
Read from stdout: Base64
Read from stdout: - should decode from BASE64FILE w/o padding
Read from stdout: Base64
Read from stdout: - should decode from BASE64URL
[32mBase64Spec:[0m
[32mBase64[0m
[32m- should encode to BASE64[0m
[32mBase64[0m
[32m- should encode to BASE64FILE[0m
[32mBase64[0m
[32m- should encode to BASE64URL[0m
[32mBase64[0m
[32m- should encode to BASE64NOPAD[0m
[32mBase64[0m
[32m- should encode to BASE64FILENOPAD[0m
[32mBase64[0m
[32m- should encode to BASE64URLNOPAD[0m
[32mBase64[0m
[32m- should decode from BASE64[0m
[32mBase64[0m
[32m- should decode from BASE64 w/o padding[0m
[32mBase64[0m
[32m- should fail with crap[0m
[32mBase64[0m
[32m- should decode from BASE64FILE[0m
[32mBase64[0m
[32m- should decode from BASE64FILE w/o padding[0m
[32mBase64[0m
[32m- should decode from BASE64URL[0m
Read from stdout: Base32Spec:
Read from stdout: Base32
Read from stdout: - should encode to BASE32
Read from stdout: Base32
Read from stdout: - should encode to BASE32NOPAD
Read from stdout: Base32
Read from stdout: - should encode to BASE32URL
Read from stdout: Base32
Read from stdout: - should encode to BASE32HEX
Read from stdout: Base32
Read from stdout: - should encode to BASE32HEXNOPAD
Read from stdout: Base32
Read from stdout: - should encode to BASE32HEXURL
Read from stdout: Base32
Read from stdout: - should decode from BASE32
Read from stdout: Base32
Read from stdout: - should decode from BASE32 w/o padding
Read from stdout: Base32
Read from stdout: - should decode from BASE32URL
Read from stdout: Base32
Read from stdout: - should decode from BASE32HEX
Read from stdout: Base32
Read from stdout: - should decode from BASE32HEX w/o padding
Read from stdout: Base32
Read from stdout: - should decode from BASE32HEXURL
[32mBase32Spec:[0m
[32mBase32[0m
[32m- should encode to BASE32[0m
[32mBase32[0m
[32m- should encode to BASE32NOPAD[0m
[32mBase32[0m
[32m- should encode to BASE32URL[0m
[32mBase32[0m
[32m- should encode to BASE32HEX[0m
[32mBase32[0m
[32m- should encode to BASE32HEXNOPAD[0m
[32mBase32[0m
[32m- should encode to BASE32HEXURL[0m
[32mBase32[0m
[32m- should decode from BASE32[0m
[32mBase32[0m
[32m- should decode from BASE32 w/o padding[0m
[32mBase32[0m
[32m- should decode from BASE32URL[0m
[32mBase32[0m
[32m- should decode from BASE32HEX[0m
[32mBase32[0m
[32m- should decode from BASE32HEX w/o padding[0m
[32mBase32[0m
[32m- should decode from BASE32HEXURL[0m
Read from stdout: Run completed in 788 milliseconds.
Read from stdout: Total number of tests run: 31
Read from stdout: Suites: completed 5, aborted 0
Read from stdout: Tests: succeeded 31, failed 0, canceled 0, ignored 0, pending 0
Read from stdout: All tests passed.
Run completed in 788 milliseconds.
Total number of tests run: 31
Suites: completed 5, aborted 0
Tests: succeeded 31, failed 0, canceled 0, ignored 0, pending 0
All tests passed.
Passed tests:
	StreamCodecSpec
	Base64Spec
	StreamDecoderSpec
	Base32Spec
	Base16Spec
Total time: 4 s, completed 31.05.2016 22:59:04
> server-post-command-cleanup
> server-handle-next-server-request
> compile
Evaluating tasks: compile:compile
Running task... Cancel: sbt.server.ServerTaskCancellation@663c42cb, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set()
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set()

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set()

Total time: 0 s, completed 31.05.2016 22:59:16
> server-post-command-cleanup
> server-handle-next-server-request
> test
Evaluating tasks: test:test
Running task... Cancel: sbt.server.ServerTaskCancellation@2d5b7f75, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set()
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set()

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set()

Copy resource mappings: 
	
The de.csmath.codec.Codec$ source file has the following regular definitions changed:
	needPads.
All member reference dependencies will be considered within this context.
Files invalidated by inheriting from (external) de.csmath.codec.Codec$: Set(); now invalidating by inheritance (internally).
Getting direct dependencies of all sources transitively invalidated by inheritance.
Getting sources that directly depend on (external) de.csmath.codec.Codec$.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/test/scala/Base16Spec.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/test/scala/Base32Spec.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/test/scala/Base64Spec.scala. This dependency is not being considered for invalidation.

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set()
Removed products: Set()
External API changes: API Changes: Set(NamesChange(de.csmath.codec.Codec$,ModifiedNames(regularNames = needPads, implicitNames = )))
Modified binary dependencies: Set()
Initial directly invalidated sources: Set()

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set()

Copy resource mappings: 
	
Framework implementation 'org.scalacheck.ScalaCheckFramework' not present.
Framework implementation 'org.specs2.runner.Specs2Framework' not present.
Framework implementation 'org.specs2.runner.SpecsFramework' not present.
Framework implementation 'org.specs.runner.SpecsFramework' not present.
Framework implementation 'com.novocode.junit.JUnitFramework' not present.
Subclass fingerprints: List((org.scalatest.Suite,false,org.scalatest.tools.Framework$$anon$1@61a02467))
Annotation fingerprints: List((org.scalatest.WrapWith,false,org.scalatest.tools.Framework$$anon$2@1294617d))
Running TaskDef(Base16Spec, org.scalatest.tools.Framework$$anon$1@61a02467, false, [SuiteSelector])
Running TaskDef(Base64Spec, org.scalatest.tools.Framework$$anon$1@61a02467, false, [SuiteSelector])
Running TaskDef(StreamCodecSpec, org.scalatest.tools.Framework$$anon$1@61a02467, false, [SuiteSelector])
Running TaskDef(Base32Spec, org.scalatest.tools.Framework$$anon$1@61a02467, false, [SuiteSelector])
Read from stdout: Base16Spec:
Read from stdout: Base16
Read from stdout: - should encode to BASE16
Read from stdout: StreamCodecSpec:
Read from stdout: StreamCodec
Read from stdout: - should create a ByteStream
Read from stdout: StreamCodec
Read from stdout: - should create a IntStream
Read from stdout: StreamCodec
Read from stdout: - should create a groupStream
Read from stdout: StreamCodec
Read from stdout: - should create a filledStream
Read from stdout: StreamCodec
Read from stdout: - should flatten a filledStream
[32mStreamCodecSpec:[0m
[32mStreamCodec[0m
[32m- should create a ByteStream[0m
[32mStreamCodec[0m
[32m- should create a IntStream[0m
[32mStreamCodec[0m
[32m- should create a groupStream[0m
[32mStreamCodec[0m
[32m- should create a filledStream[0m
[32mStreamCodec[0m
[32m- should flatten a filledStream[0m
Running TaskDef(StreamDecoderSpec, org.scalatest.tools.Framework$$anon$1@61a02467, false, [SuiteSelector])
[32mBase16Spec:[0m
[32mBase16[0m
[32m- should encode to BASE16[0m
Read from stdout: StreamDecoderSpec:
Read from stdout: StreamDecoder
Read from stdout: - should check allowed bytes
[32mStreamDecoderSpec:[0m
[32mStreamDecoder[0m
[32m- should check allowed bytes[0m
Read from stdout: Base64Spec:
Read from stdout: Base64
Read from stdout: - should encode to BASE64
Read from stdout: Base64
Read from stdout: - should encode to BASE64FILE
Read from stdout: Base64
Read from stdout: - should encode to BASE64URL
Read from stdout: Base64
Read from stdout: - should encode to BASE64NOPAD
Read from stdout: Base64
Read from stdout: - should encode to BASE64FILENOPAD
Read from stdout: Base64
Read from stdout: - should encode to BASE64URLNOPAD
Read from stdout: Base64
Read from stdout: - should decode from BASE64
Read from stdout: Base64
Read from stdout: - should decode from BASE64 w/o padding
Read from stdout: Base64
Read from stdout: - should fail with crap
Read from stdout: Base64
Read from stdout: - should decode from BASE64FILE
Read from stdout: Base64
Read from stdout: - should decode from BASE64FILE w/o padding
Read from stdout: Base64
Read from stdout: - should decode from BASE64URL
Read from stdout: Base32Spec:
Read from stdout: Base32
Read from stdout: - should encode to BASE32
Read from stdout: Base32
Read from stdout: - should encode to BASE32NOPAD
Read from stdout: Base32
Read from stdout: - should encode to BASE32URL
Read from stdout: Base32
Read from stdout: - should encode to BASE32HEX
Read from stdout: Base32
Read from stdout: - should encode to BASE32HEXNOPAD
Read from stdout: Base32
Read from stdout: - should encode to BASE32HEXURL
Read from stdout: Base32
Read from stdout: - should decode from BASE32
Read from stdout: Base32
Read from stdout: - should decode from BASE32 w/o padding
Read from stdout: Base32
Read from stdout: - should decode from BASE32URL
Read from stdout: Base32
Read from stdout: - should decode from BASE32HEX
Read from stdout: Base32
[32mBase64Spec:[0m
Read from stdout: - should decode from BASE32HEX w/o padding
Read from stdout: Base32
Read from stdout: - should decode from BASE32HEXURL
[32mBase64[0m
[32m- should encode to BASE64[0m
[32mBase32Spec:[0m
[32mBase32[0m
[32m- should encode to BASE32[0m
[32mBase32[0m
[32m- should encode to BASE32NOPAD[0m
[32mBase32[0m
[32m- should encode to BASE32URL[0m
[32mBase32[0m
[32m- should encode to BASE32HEX[0m
[32mBase32[0m
[32m- should encode to BASE32HEXNOPAD[0m
[32mBase32[0m
[32m- should encode to BASE32HEXURL[0m
[32mBase32[0m
[32m- should decode from BASE32[0m
[32mBase32[0m
[32m- should decode from BASE32 w/o padding[0m
[32mBase32[0m
[32m- should decode from BASE32URL[0m
[32mBase32[0m
[32m- should decode from BASE32HEX[0m
[32mBase32[0m
[32m- should decode from BASE32HEX w/o padding[0m
[32mBase32[0m
[32m- should decode from BASE32HEXURL[0m
[32mBase64[0m
[32m- should encode to BASE64FILE[0m
[32mBase64[0m
[32m- should encode to BASE64URL[0m
[32mBase64[0m
[32m- should encode to BASE64NOPAD[0m
[32mBase64[0m
[32m- should encode to BASE64FILENOPAD[0m
[32mBase64[0m
[32m- should encode to BASE64URLNOPAD[0m
[32mBase64[0m
[32m- should decode from BASE64[0m
[32mBase64[0m
[32m- should decode from BASE64 w/o padding[0m
[32mBase64[0m
[32m- should fail with crap[0m
[32mBase64[0m
[32m- should decode from BASE64FILE[0m
[32mBase64[0m
[32m- should decode from BASE64FILE w/o padding[0m
[32mBase64[0m
[32m- should decode from BASE64URL[0m
Read from stdout: Run completed in 699 milliseconds.
Read from stdout: Total number of tests run: 31
Read from stdout: Suites: completed 5, aborted 0
Read from stdout: Tests: succeeded 31, failed 0, canceled 0, ignored 0, pending 0
Read from stdout: All tests passed.
Run completed in 699 milliseconds.
Total number of tests run: 31
Suites: completed 5, aborted 0
Tests: succeeded 31, failed 0, canceled 0, ignored 0, pending 0
All tests passed.
Passed tests:
	StreamCodecSpec
	Base64Spec
	StreamDecoderSpec
	Base32Spec
	Base16Spec
Total time: 1 s, completed 31.05.2016 22:59:17
> server-post-command-cleanup
> server-handle-next-server-request
> compile
Evaluating tasks: compile:compile
Running task... Cancel: sbt.server.ServerTaskCancellation@757a3b71, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set()
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set()

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set()

Total time: 0 s, completed 31.05.2016 22:59:31
> server-post-command-cleanup
> server-handle-next-server-request
> test
Evaluating tasks: test:test
Running task... Cancel: sbt.server.ServerTaskCancellation@19a42052, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set()
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set()

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set()

Copy resource mappings: 
	
The de.csmath.codec.Codec$ source file has the following regular definitions changed:
	needPads.
All member reference dependencies will be considered within this context.
Files invalidated by inheriting from (external) de.csmath.codec.Codec$: Set(); now invalidating by inheritance (internally).
Getting direct dependencies of all sources transitively invalidated by inheritance.
Getting sources that directly depend on (external) de.csmath.codec.Codec$.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/test/scala/Base16Spec.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/test/scala/Base32Spec.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/test/scala/Base64Spec.scala. This dependency is not being considered for invalidation.

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala)
Removed products: Set()
External API changes: API Changes: Set(NamesChange(de.csmath.codec.Codec$,ModifiedNames(regularNames = needPads, implicitNames = )))
Modified binary dependencies: Set()
Initial directly invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala)

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala)

Read from stdout: Compiling 1 Scala source to /Users/lpfeiler/develop/github/base64/target/scala-2.11/test-classes...
Compiling 1 Scala source to /Users/lpfeiler/develop/github/base64/target/scala-2.11/test-classes...
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Running cached compiler 4a2c54af, interfacing (CompilerInterface) with Scala compiler version 2.11.7
Calling Scala compiler with arguments  (CompilerInterface):
	-bootclasspath
	/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/classes:/Users/lpfeiler/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.11.7.jar
	-classpath
	/Users/lpfeiler/develop/github/base64/target/scala-2.11/test-classes:/Users/lpfeiler/develop/github/base64/target/scala-2.11/classes:/Users/lpfeiler/develop/scala/activator-dist-1.3.6/repository/org.scalatest/scalatest_2.11/2.2.4/bundles/scalatest_2.11.jar:/Users/lpfeiler/develop/scala/activator-dist-1.3.6/repository/org.scala-lang/scala-reflect/2.11.2/jars/scala-reflect.jar:/Users/lpfeiler/develop/scala/activator-dist-1.3.6/repository/org.scala-lang.modules/scala-xml_2.11/1.0.2/bundles/scala-xml_2.11.jar
Read from stdout: /Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala:20: match may not be exhaustive.
Read from stdout: It would fail on the following input: Failure(_)
/Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala:20: match may not be exhaustive.
It would fail on the following input: Failure(_)
Read from stdout: sc.t match {
      sc.t match {
Read from stdout: ^
         ^
Read from stdout: there were three feature warnings; re-run with -feature for details
there were three feature warnings; re-run with -feature for details
Read from stdout: two warnings found
two warnings found
Scala compilation took 1.496589722 s
New invalidations:
	Set()
Initial set of included nodes: Set()
Previously invalidated, but (transitively) depend on new invalidations:
	Set()
All newly invalidated sources after taking into account (previously) recompiled sources:Set()
Copy resource mappings: 
	
Framework implementation 'org.scalacheck.ScalaCheckFramework' not present.
Framework implementation 'org.specs2.runner.Specs2Framework' not present.
Framework implementation 'org.specs2.runner.SpecsFramework' not present.
Framework implementation 'org.specs.runner.SpecsFramework' not present.
Framework implementation 'com.novocode.junit.JUnitFramework' not present.
Subclass fingerprints: List((org.scalatest.Suite,false,org.scalatest.tools.Framework$$anon$1@3f3499ed))
Annotation fingerprints: List((org.scalatest.WrapWith,false,org.scalatest.tools.Framework$$anon$2@200d870d))
Running TaskDef(Base16Spec, org.scalatest.tools.Framework$$anon$1@3f3499ed, false, [SuiteSelector])
Running TaskDef(Base64Spec, org.scalatest.tools.Framework$$anon$1@3f3499ed, false, [SuiteSelector])
Running TaskDef(Base32Spec, org.scalatest.tools.Framework$$anon$1@3f3499ed, false, [SuiteSelector])
Running TaskDef(StreamDecoderSpec, org.scalatest.tools.Framework$$anon$1@3f3499ed, false, [SuiteSelector])
Read from stdout: Base16Spec:
Read from stdout: Base16
Read from stdout: - should encode to BASE16
[32mBase16Spec:[0m
[32mBase16[0m
[32m- should encode to BASE16[0m
Read from stdout: StreamDecoderSpec:
Read from stdout: StreamDecoder
Read from stdout: - should check allowed bytes
[32mStreamDecoderSpec:[0m
[32mStreamDecoder[0m
[32m- should check allowed bytes[0m
Running TaskDef(StreamCodecSpec, org.scalatest.tools.Framework$$anon$1@3f3499ed, false, [SuiteSelector])
Read from stdout: StreamCodecSpec:
Read from stdout: StreamCodec
Read from stdout: - should create a ByteStream
Read from stdout: StreamCodec
Read from stdout: - should create a IntStream
Read from stdout: StreamCodec
Read from stdout: - should create a groupStream
Read from stdout: StreamCodec
Read from stdout: - should create a filledStream
Read from stdout: StreamCodec
Read from stdout: - should flatten a filledStream
[32mStreamCodecSpec:[0m
[32mStreamCodec[0m
[32m- should create a ByteStream[0m
[32mStreamCodec[0m
[32m- should create a IntStream[0m
[32mStreamCodec[0m
[32m- should create a groupStream[0m
[32mStreamCodec[0m
[32m- should create a filledStream[0m
[32mStreamCodec[0m
[32m- should flatten a filledStream[0m
Read from stdout: Base32Spec:
Read from stdout: Base32
Read from stdout: - should encode to BASE32
Read from stdout: Base32
Read from stdout: - should encode to BASE32NOPAD
Read from stdout: Base32
Read from stdout: - should encode to BASE32URL
Read from stdout: Base32
Read from stdout: - should encode to BASE32HEX
Read from stdout: Base32
Read from stdout: - should encode to BASE32HEXNOPAD
Read from stdout: Base32
Read from stdout: - should encode to BASE32HEXURL
Read from stdout: Base32
Read from stdout: - should decode from BASE32
Read from stdout: Base32
Read from stdout: - should decode from BASE32 w/o padding
Read from stdout: Base32
Read from stdout: - should decode from BASE32URL
Read from stdout: Base32
Read from stdout: - should decode from BASE32HEX
Read from stdout: Base32
Read from stdout: - should decode from BASE32HEX w/o padding
Read from stdout: Base32
Read from stdout: - should decode from BASE32HEXURL
Read from stdout: Base64Spec:
Read from stdout: Base64
[32mBase32Spec:[0m
[32mBase32[0m
[32m- should encode to BASE32[0m
Read from stdout: - should encode to BASE64
[32mBase32[0m
[32m- should encode to BASE32NOPAD[0m
Read from stdout: Base64
[32mBase32[0m
[32m- should encode to BASE32URL[0m
Read from stdout: - should encode to BASE64FILE
[32mBase32[0m
[32m- should encode to BASE32HEX[0m
[32mBase32[0m
[32m- should encode to BASE32HEXNOPAD[0m
Read from stdout: Base64
[32mBase32[0m
[32m- should encode to BASE32HEXURL[0m
[32mBase32[0m
Read from stdout: - should encode to BASE64URL
[32m- should decode from BASE32[0m
[32mBase32[0m
Read from stdout: Base64
[32m- should decode from BASE32 w/o padding[0m
[32mBase32[0m
Read from stdout: - should encode to BASE64NOPAD
[32m- should decode from BASE32URL[0m
[32mBase32[0m
[32m- should decode from BASE32HEX[0m
[32mBase32[0m
Read from stdout: Base64
[32m- should decode from BASE32HEX w/o padding[0m
[32mBase32[0m
[32m- should decode from BASE32HEXURL[0m
Read from stdout: - should encode to BASE64FILENOPAD
Read from stdout: Base64
Read from stdout: - should encode to BASE64URLNOPAD
Read from stdout: Base64
Read from stdout: - should decode from BASE64
Read from stdout: Base64
Read from stdout: - should decode from BASE64 w/o padding
Read from stdout: Base64
Read from stdout: - should fail with crap
Read from stdout: Base64
Read from stdout: - should decode from BASE64FILE
Read from stdout: Base64
Read from stdout: - should decode from BASE64FILE w/o padding
Read from stdout: Base64
Read from stdout: - should decode from BASE64URL
[32mBase64Spec:[0m
[32mBase64[0m
[32m- should encode to BASE64[0m
[32mBase64[0m
[32m- should encode to BASE64FILE[0m
[32mBase64[0m
[32m- should encode to BASE64URL[0m
[32mBase64[0m
[32m- should encode to BASE64NOPAD[0m
[32mBase64[0m
[32m- should encode to BASE64FILENOPAD[0m
[32mBase64[0m
[32m- should encode to BASE64URLNOPAD[0m
[32mBase64[0m
[32m- should decode from BASE64[0m
[32mBase64[0m
[32m- should decode from BASE64 w/o padding[0m
[32mBase64[0m
[32m- should fail with crap[0m
[32mBase64[0m
[32m- should decode from BASE64FILE[0m
[32mBase64[0m
[32m- should decode from BASE64FILE w/o padding[0m
[32mBase64[0m
[32m- should decode from BASE64URL[0m
Read from stdout: Run completed in 476 milliseconds.
Read from stdout: Total number of tests run: 31
Read from stdout: Suites: completed 5, aborted 0
Read from stdout: Tests: succeeded 31, failed 0, canceled 0, ignored 0, pending 0
Read from stdout: All tests passed.
Run completed in 476 milliseconds.
Total number of tests run: 31
Suites: completed 5, aborted 0
Tests: succeeded 31, failed 0, canceled 0, ignored 0, pending 0
All tests passed.
Passed tests:
	StreamCodecSpec
	Base64Spec
	StreamDecoderSpec
	Base32Spec
	Base16Spec
Total time: 2 s, completed 31.05.2016 22:59:33
> server-post-command-cleanup
> server-handle-next-server-request
> compile
Evaluating tasks: compile:compile
Running task... Cancel: sbt.server.ServerTaskCancellation@4f9aa94e, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set()
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set()

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set()

Total time: 0 s, completed 31.05.2016 23:00:01
> server-post-command-cleanup
> server-handle-next-server-request
> test
Evaluating tasks: test:test
Running task... Cancel: sbt.server.ServerTaskCancellation@7dc25fe3, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set()
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set()

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set()

Copy resource mappings: 
	
The de.csmath.codec.Codec$ source file has the following regular definitions changed:
	needPads.
All member reference dependencies will be considered within this context.
Files invalidated by inheriting from (external) de.csmath.codec.Codec$: Set(); now invalidating by inheritance (internally).
Getting direct dependencies of all sources transitively invalidated by inheritance.
Getting sources that directly depend on (external) de.csmath.codec.Codec$.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/test/scala/Base16Spec.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/test/scala/Base32Spec.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/test/scala/Base64Spec.scala. This dependency is not being considered for invalidation.

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala)
Removed products: Set()
External API changes: API Changes: Set(NamesChange(de.csmath.codec.Codec$,ModifiedNames(regularNames = needPads, implicitNames = )))
Modified binary dependencies: Set()
Initial directly invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala)

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala)

Read from stdout: Compiling 1 Scala source to /Users/lpfeiler/develop/github/base64/target/scala-2.11/test-classes...
Compiling 1 Scala source to /Users/lpfeiler/develop/github/base64/target/scala-2.11/test-classes...
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Running cached compiler 576dd888, interfacing (CompilerInterface) with Scala compiler version 2.11.7
Calling Scala compiler with arguments  (CompilerInterface):
	-bootclasspath
	/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/classes:/Users/lpfeiler/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.11.7.jar
	-classpath
	/Users/lpfeiler/develop/github/base64/target/scala-2.11/test-classes:/Users/lpfeiler/develop/github/base64/target/scala-2.11/classes:/Users/lpfeiler/develop/scala/activator-dist-1.3.6/repository/org.scalatest/scalatest_2.11/2.2.4/bundles/scalatest_2.11.jar:/Users/lpfeiler/develop/scala/activator-dist-1.3.6/repository/org.scala-lang/scala-reflect/2.11.2/jars/scala-reflect.jar:/Users/lpfeiler/develop/scala/activator-dist-1.3.6/repository/org.scala-lang.modules/scala-xml_2.11/1.0.2/bundles/scala-xml_2.11.jar
Read from stdout: there were 20 feature warnings; re-run with -feature for details
there were 20 feature warnings; re-run with -feature for details
Read from stdout: one warning found
one warning found
Scala compilation took 1.735484844 s
New invalidations:
	Set()
Initial set of included nodes: Set()
Previously invalidated, but (transitively) depend on new invalidations:
	Set()
All newly invalidated sources after taking into account (previously) recompiled sources:Set()
Copy resource mappings: 
	
Framework implementation 'org.scalacheck.ScalaCheckFramework' not present.
Framework implementation 'org.specs2.runner.Specs2Framework' not present.
Framework implementation 'org.specs2.runner.SpecsFramework' not present.
Framework implementation 'org.specs.runner.SpecsFramework' not present.
Framework implementation 'com.novocode.junit.JUnitFramework' not present.
Subclass fingerprints: List((org.scalatest.Suite,false,org.scalatest.tools.Framework$$anon$1@22c74c93))
Annotation fingerprints: List((org.scalatest.WrapWith,false,org.scalatest.tools.Framework$$anon$2@78290dc6))
Running TaskDef(Base64Spec, org.scalatest.tools.Framework$$anon$1@22c74c93, false, [SuiteSelector])
Running TaskDef(Base16Spec, org.scalatest.tools.Framework$$anon$1@22c74c93, false, [SuiteSelector])
Running TaskDef(StreamCodecSpec, org.scalatest.tools.Framework$$anon$1@22c74c93, false, [SuiteSelector])
Running TaskDef(Base32Spec, org.scalatest.tools.Framework$$anon$1@22c74c93, false, [SuiteSelector])
Read from stdout: Base16Spec:
Read from stdout: Base16
Read from stdout: - should encode to BASE16
[32mBase16Spec:[0m
[32mBase16[0m
[32m- should encode to BASE16[0m
Running TaskDef(StreamDecoderSpec, org.scalatest.tools.Framework$$anon$1@22c74c93, false, [SuiteSelector])
Read from stdout: StreamCodecSpec:
Read from stdout: StreamCodec
Read from stdout: - should create a ByteStream
Read from stdout: StreamCodec
Read from stdout: - should create a IntStream
Read from stdout: StreamCodec
Read from stdout: - should create a groupStream
Read from stdout: StreamCodec
Read from stdout: - should create a filledStream
Read from stdout: StreamCodec
Read from stdout: - should flatten a filledStream
[32mStreamCodecSpec:[0m
[32mStreamCodec[0m
[32m- should create a ByteStream[0m
[32mStreamCodec[0m
[32m- should create a IntStream[0m
[32mStreamCodec[0m
[32m- should create a groupStream[0m
[32mStreamCodec[0m
[32m- should create a filledStream[0m
[32mStreamCodec[0m
[32m- should flatten a filledStream[0m
Read from stdout: StreamDecoderSpec:
Read from stdout: StreamDecoder
Read from stdout: - should check allowed bytes
[32mStreamDecoderSpec:[0m
[32mStreamDecoder[0m
[32m- should check allowed bytes[0m
Read from stdout: Base64Spec:
Read from stdout: Base64
Read from stdout: - should encode to BASE64
Read from stdout: Base64
Read from stdout: - should encode to BASE64FILE
Read from stdout: Base64
Read from stdout: - should encode to BASE64URL
Read from stdout: Base64
Read from stdout: - should encode to BASE64NOPAD
Read from stdout: Base64
Read from stdout: - should encode to BASE64FILENOPAD
Read from stdout: Base64
Read from stdout: - should encode to BASE64URLNOPAD
Read from stdout: Base64
Read from stdout: - should decode from BASE64
Read from stdout: Base64
Read from stdout: - should decode from BASE64 w/o padding
Read from stdout: Base64
Read from stdout: - should fail with crap
Read from stdout: Base64
Read from stdout: - should decode from BASE64FILE
Read from stdout: Base64
Read from stdout: - should decode from BASE64FILE w/o padding
Read from stdout: Base64
Read from stdout: - should decode from BASE64URL
[32mBase64Spec:[0m
[32mBase64[0m
[32m- should encode to BASE64[0m
[32mBase64[0m
[32m- should encode to BASE64FILE[0m
[32mBase64[0m
[32m- should encode to BASE64URL[0m
[32mBase64[0m
[32m- should encode to BASE64NOPAD[0m
[32mBase64[0m
[32m- should encode to BASE64FILENOPAD[0m
[32mBase64[0m
[32m- should encode to BASE64URLNOPAD[0m
[32mBase64[0m
[32m- should decode from BASE64[0m
[32mBase64[0m
[32m- should decode from BASE64 w/o padding[0m
[32mBase64[0m
[32m- should fail with crap[0m
[32mBase64[0m
[32m- should decode from BASE64FILE[0m
[32mBase64[0m
Read from stdout: Base32Spec:
[32m- should decode from BASE64FILE w/o padding[0m
Read from stdout: Base32
Read from stdout: - should encode to BASE32
Read from stdout: Base32
Read from stdout: - should encode to BASE32NOPAD
Read from stdout: Base32
Read from stdout: - should encode to BASE32URL
Read from stdout: Base32
Read from stdout: - should encode to BASE32HEX
Read from stdout: Base32
Read from stdout: - should encode to BASE32HEXNOPAD
Read from stdout: Base32
Read from stdout: - should encode to BASE32HEXURL
Read from stdout: Base32
Read from stdout: - should decode from BASE32
Read from stdout: Base32
Read from stdout: - should decode from BASE32 w/o padding
Read from stdout: Base32
Read from stdout: - should decode from BASE32URL
Read from stdout: Base32
Read from stdout: - should decode from BASE32HEX
Read from stdout: Base32
Read from stdout: - should decode from BASE32HEX w/o padding
Read from stdout: Base32
Read from stdout: - should decode from BASE32HEXURL
[32mBase32Spec:[0m
[32mBase32[0m
[32m- should encode to BASE32[0m
[32mBase32[0m
[32m- should encode to BASE32NOPAD[0m
[32mBase32[0m
[32m- should encode to BASE32URL[0m
[32mBase32[0m
[32m- should encode to BASE32HEX[0m
[32mBase32[0m
[32m- should encode to BASE32HEXNOPAD[0m
[32mBase32[0m
[32m- should encode to BASE32HEXURL[0m
[32mBase32[0m
[32m- should decode from BASE32[0m
[32mBase32[0m
[32m- should decode from BASE32 w/o padding[0m
[32mBase32[0m
[32m- should decode from BASE32URL[0m
[32mBase32[0m
[32m- should decode from BASE32HEX[0m
[32mBase32[0m
[32m- should decode from BASE32HEX w/o padding[0m
[32mBase32[0m
[32m- should decode from BASE32HEXURL[0m
[32mBase64[0m
[32m- should decode from BASE64URL[0m
Read from stdout: Run completed in 390 milliseconds.
Read from stdout: Total number of tests run: 31
Read from stdout: Suites: completed 5, aborted 0
Read from stdout: Tests: succeeded 31, failed 0, canceled 0, ignored 0, pending 0
Read from stdout: All tests passed.
Run completed in 390 milliseconds.
Total number of tests run: 31
Suites: completed 5, aborted 0
Tests: succeeded 31, failed 0, canceled 0, ignored 0, pending 0
All tests passed.
Passed tests:
	StreamCodecSpec
	Base64Spec
	StreamDecoderSpec
	Base32Spec
	Base16Spec
Total time: 3 s, completed 31.05.2016 23:00:03
> server-post-command-cleanup
> server-handle-next-server-request
> compile
Evaluating tasks: compile:compile
Running task... Cancel: sbt.server.ServerTaskCancellation@a5dfa62, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set()
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set()

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set()

Total time: 0 s, completed 31.05.2016 23:00:11
> server-post-command-cleanup
> server-handle-next-server-request
> test
Evaluating tasks: test:test
Running task... Cancel: sbt.server.ServerTaskCancellation@21ae77a1, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set()
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set()

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set()

Copy resource mappings: 
	
The de.csmath.codec.Codec$ source file has the following regular definitions changed:
	needPads.
All member reference dependencies will be considered within this context.
Files invalidated by inheriting from (external) de.csmath.codec.Codec$: Set(); now invalidating by inheritance (internally).
Getting direct dependencies of all sources transitively invalidated by inheritance.
Getting sources that directly depend on (external) de.csmath.codec.Codec$.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/test/scala/Base16Spec.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/test/scala/Base32Spec.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/test/scala/Base64Spec.scala. This dependency is not being considered for invalidation.

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala)
Removed products: Set()
External API changes: API Changes: Set(NamesChange(de.csmath.codec.Codec$,ModifiedNames(regularNames = needPads, implicitNames = )))
Modified binary dependencies: Set()
Initial directly invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala)

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala)

Read from stdout: Compiling 1 Scala source to /Users/lpfeiler/develop/github/base64/target/scala-2.11/test-classes...
Compiling 1 Scala source to /Users/lpfeiler/develop/github/base64/target/scala-2.11/test-classes...
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Running cached compiler 1e15b7e4, interfacing (CompilerInterface) with Scala compiler version 2.11.7
Calling Scala compiler with arguments  (CompilerInterface):
	-bootclasspath
	/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/classes:/Users/lpfeiler/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.11.7.jar
	-classpath
	/Users/lpfeiler/develop/github/base64/target/scala-2.11/test-classes:/Users/lpfeiler/develop/github/base64/target/scala-2.11/classes:/Users/lpfeiler/develop/scala/activator-dist-1.3.6/repository/org.scalatest/scalatest_2.11/2.2.4/bundles/scalatest_2.11.jar:/Users/lpfeiler/develop/scala/activator-dist-1.3.6/repository/org.scala-lang/scala-reflect/2.11.2/jars/scala-reflect.jar:/Users/lpfeiler/develop/scala/activator-dist-1.3.6/repository/org.scala-lang.modules/scala-xml_2.11/1.0.2/bundles/scala-xml_2.11.jar
Read from stdout: there were 20 feature warnings; re-run with -feature for details
there were 20 feature warnings; re-run with -feature for details
Read from stdout: one warning found
one warning found
Scala compilation took 1.873810012 s
New invalidations:
	Set()
Initial set of included nodes: Set()
Previously invalidated, but (transitively) depend on new invalidations:
	Set()
All newly invalidated sources after taking into account (previously) recompiled sources:Set()
Copy resource mappings: 
	
Framework implementation 'org.scalacheck.ScalaCheckFramework' not present.
Framework implementation 'org.specs2.runner.Specs2Framework' not present.
Framework implementation 'org.specs2.runner.SpecsFramework' not present.
Framework implementation 'org.specs.runner.SpecsFramework' not present.
Framework implementation 'com.novocode.junit.JUnitFramework' not present.
Subclass fingerprints: List((org.scalatest.Suite,false,org.scalatest.tools.Framework$$anon$1@ab0b5ba))
Annotation fingerprints: List((org.scalatest.WrapWith,false,org.scalatest.tools.Framework$$anon$2@5e1bc1))
Running TaskDef(Base16Spec, org.scalatest.tools.Framework$$anon$1@ab0b5ba, false, [SuiteSelector])
Running TaskDef(StreamDecoderSpec, org.scalatest.tools.Framework$$anon$1@ab0b5ba, false, [SuiteSelector])
Running TaskDef(Base32Spec, org.scalatest.tools.Framework$$anon$1@ab0b5ba, false, [SuiteSelector])
Running TaskDef(StreamCodecSpec, org.scalatest.tools.Framework$$anon$1@ab0b5ba, false, [SuiteSelector])
Read from stdout: StreamDecoderSpec:
Read from stdout: StreamDecoder
Read from stdout: - should check allowed bytes
Read from stdout: Base16Spec:
Read from stdout: Base16
Read from stdout: - should encode to BASE16
[32mBase16Spec:[0m
[32mBase16[0m
[32m- should encode to BASE16[0m
[32mStreamDecoderSpec:[0m
Running TaskDef(Base64Spec, org.scalatest.tools.Framework$$anon$1@ab0b5ba, false, [SuiteSelector])
[32mStreamDecoder[0m
[32m- should check allowed bytes[0m
Read from stdout: StreamCodecSpec:
Read from stdout: StreamCodec
Read from stdout: - should create a ByteStream
Read from stdout: StreamCodec
Read from stdout: - should create a IntStream
Read from stdout: StreamCodec
Read from stdout: - should create a groupStream
Read from stdout: StreamCodec
Read from stdout: - should create a filledStream
Read from stdout: StreamCodec
Read from stdout: - should flatten a filledStream
Read from stdout: Base32Spec:
Read from stdout: Base32
Read from stdout: - should encode to BASE32
Read from stdout: Base32
Read from stdout: - should encode to BASE32NOPAD
[32mStreamCodecSpec:[0m
[32mStreamCodec[0m
[32m- should create a ByteStream[0m
[32mStreamCodec[0m
[32m- should create a IntStream[0m
[32mStreamCodec[0m
[32m- should create a groupStream[0m
[32mStreamCodec[0m
[32m- should create a filledStream[0m
[32mStreamCodec[0m
[32m- should flatten a filledStream[0m
Read from stdout: Base32
Read from stdout: - should encode to BASE32URL
Read from stdout: Base32
Read from stdout: - should encode to BASE32HEX
Read from stdout: Base32
Read from stdout: - should encode to BASE32HEXNOPAD
Read from stdout: Base32
Read from stdout: - should encode to BASE32HEXURL
Read from stdout: Base32
Read from stdout: - should decode from BASE32
Read from stdout: Base32
Read from stdout: - should decode from BASE32 w/o padding
Read from stdout: Base32
Read from stdout: - should decode from BASE32URL
Read from stdout: Base32
Read from stdout: - should decode from BASE32HEX
Read from stdout: Base32
Read from stdout: - should decode from BASE32HEX w/o padding
Read from stdout: Base32
Read from stdout: - should decode from BASE32HEXURL
[32mBase32Spec:[0m
[32mBase32[0m
[32m- should encode to BASE32[0m
[32mBase32[0m
[32m- should encode to BASE32NOPAD[0m
[32mBase32[0m
[32m- should encode to BASE32URL[0m
[32mBase32[0m
[32m- should encode to BASE32HEX[0m
[32mBase32[0m
[32m- should encode to BASE32HEXNOPAD[0m
[32mBase32[0m
[32m- should encode to BASE32HEXURL[0m
[32mBase32[0m
[32m- should decode from BASE32[0m
[32mBase32[0m
[32m- should decode from BASE32 w/o padding[0m
[32mBase32[0m
[32m- should decode from BASE32URL[0m
[32mBase32[0m
[32m- should decode from BASE32HEX[0m
[32mBase32[0m
[32m- should decode from BASE32HEX w/o padding[0m
[32mBase32[0m
[32m- should decode from BASE32HEXURL[0m
Read from stdout: Base64Spec:
Read from stdout: Base64
Read from stdout: - should encode to BASE64
Read from stdout: Base64
Read from stdout: - should encode to BASE64FILE
Read from stdout: Base64
Read from stdout: - should encode to BASE64URL
Read from stdout: Base64
Read from stdout: - should encode to BASE64NOPAD
Read from stdout: Base64
Read from stdout: - should encode to BASE64FILENOPAD
Read from stdout: Base64
Read from stdout: - should encode to BASE64URLNOPAD
Read from stdout: Base64
Read from stdout: - should decode from BASE64
Read from stdout: Base64
Read from stdout: - should decode from BASE64 w/o padding
Read from stdout: Base64
Read from stdout: - should fail with crap
Read from stdout: Base64
Read from stdout: - should decode from BASE64FILE
Read from stdout: Base64
Read from stdout: - should decode from BASE64FILE w/o padding
Read from stdout: Base64
Read from stdout: - should decode from BASE64URL
[32mBase64Spec:[0m
[32mBase64[0m
[32m- should encode to BASE64[0m
[32mBase64[0m
[32m- should encode to BASE64FILE[0m
[32mBase64[0m
[32m- should encode to BASE64URL[0m
[32mBase64[0m
[32m- should encode to BASE64NOPAD[0m
[32mBase64[0m
[32m- should encode to BASE64FILENOPAD[0m
[32mBase64[0m
[32m- should encode to BASE64URLNOPAD[0m
[32mBase64[0m
[32m- should decode from BASE64[0m
[32mBase64[0m
[32m- should decode from BASE64 w/o padding[0m
[32mBase64[0m
[32m- should fail with crap[0m
[32mBase64[0m
[32m- should decode from BASE64FILE[0m
[32mBase64[0m
[32m- should decode from BASE64FILE w/o padding[0m
[32mBase64[0m
[32m- should decode from BASE64URL[0m
Read from stdout: Run completed in 462 milliseconds.
Read from stdout: Total number of tests run: 31
Read from stdout: Suites: completed 5, aborted 0
Read from stdout: Tests: succeeded 31, failed 0, canceled 0, ignored 0, pending 0
Read from stdout: All tests passed.
Run completed in 462 milliseconds.
Total number of tests run: 31
Suites: completed 5, aborted 0
Tests: succeeded 31, failed 0, canceled 0, ignored 0, pending 0
All tests passed.
Passed tests:
	StreamCodecSpec
	Base64Spec
	StreamDecoderSpec
	Base32Spec
	Base16Spec
Total time: 3 s, completed 31.05.2016 23:00:14
> server-post-command-cleanup
> server-handle-next-server-request
> compile
Evaluating tasks: compile:compile
Running task... Cancel: sbt.server.ServerTaskCancellation@2ecd551f, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set()
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set()

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set()

Total time: 0 s, completed 31.05.2016 23:00:40
> server-post-command-cleanup
> server-handle-next-server-request
> compile
Evaluating tasks: compile:compile
Running task... Cancel: sbt.server.ServerTaskCancellation@3d41c339, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala)
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala)

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala)

Read from stdout: Compiling 1 Scala source to /Users/lpfeiler/develop/github/base64/target/scala-2.11/classes...
Compiling 1 Scala source to /Users/lpfeiler/develop/github/base64/target/scala-2.11/classes...
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Running cached compiler 1800826e, interfacing (CompilerInterface) with Scala compiler version 2.11.7
Calling Scala compiler with arguments  (CompilerInterface):
	-bootclasspath
	/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/classes:/Users/lpfeiler/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.11.7.jar
	-classpath
	/Users/lpfeiler/develop/github/base64/target/scala-2.11/classes
Scala compilation took 1.014504487 s
Invalidating /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala...
Invalidating (transitively) by inheritance from /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala...
Initial set of included nodes: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala)
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Decoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Decoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala
Invalidated by transitive inheritance dependency: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Decoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala)
The /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala source file has the following regular definitions changed:
	takeNonPads, checkPrePadding, decodeGroup, bitdec, checkLength, invertBytes.
All member reference dependencies will be considered within this context.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseN.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Decoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala. This dependency is not being considered for invalidation.
New invalidations:
	Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Decoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala)
Initial set of included nodes: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Decoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala)
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Decoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala
Previously invalidated, but (transitively) depend on new invalidations:
	Set()
All newly invalidated sources after taking into account (previously) recompiled sources:Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Decoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala)
Read from stdout: Compiling 7 Scala sources to /Users/lpfeiler/develop/github/base64/target/scala-2.11/classes...
Compiling 7 Scala sources to /Users/lpfeiler/develop/github/base64/target/scala-2.11/classes...
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Running cached compiler 3400e73b, interfacing (CompilerInterface) with Scala compiler version 2.11.7
Calling Scala compiler with arguments  (CompilerInterface):
	-bootclasspath
	/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/classes:/Users/lpfeiler/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.11.7.jar
	-classpath
	/Users/lpfeiler/develop/github/base64/target/scala-2.11/classes
Scala compilation took 0.926175949 s
Invalidating /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala...
Invalidating (transitively) by inheritance from /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala...
Initial set of included nodes: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala)
Invalidated by transitive inheritance dependency: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala)
The /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala source file has the following regular definitions changed:
	takeNonPads, checkPrePadding, decodeGroup, checkLength, invertBytes.
All member reference dependencies will be considered within this context.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
Invalidating /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala...
Invalidating (transitively) by inheritance from /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala...
Initial set of included nodes: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala)
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala
Invalidated by transitive inheritance dependency: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala)
The /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala source file has the following regular definitions changed:
	takeNonPads, checkPrePadding, decodeGroup, checkLength, invertBytes.
All member reference dependencies will be considered within this context.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
Invalidating /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala...
Invalidating (transitively) by inheritance from /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala...
Initial set of included nodes: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala)
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala
Invalidated by transitive inheritance dependency: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala)
The /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala source file has the following regular definitions changed:
	takeNonPads, checkPrePadding, decodeGroup, checkLength, invertBytes.
All member reference dependencies will be considered within this context.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
Invalidating /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Decoder.scala...
Invalidating (transitively) by inheritance from /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Decoder.scala...
Initial set of included nodes: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Decoder.scala)
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Decoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala
Invalidated by transitive inheritance dependency: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Decoder.scala)
The /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Decoder.scala source file has the following regular definitions changed:
	takeNonPads, checkPrePadding, decodeGroup, checkLength, invertBytes.
All member reference dependencies will be considered within this context.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
Invalidating /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala...
Invalidating (transitively) by inheritance from /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala...
Initial set of included nodes: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala)
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala
Invalidated by transitive inheritance dependency: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala)
The /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala source file has the following regular definitions changed:
	takeNonPads, checkPrePadding, decodeGroup, checkLength, invertBytes.
All member reference dependencies will be considered within this context.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
Invalidating /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala...
Invalidating (transitively) by inheritance from /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala...
Initial set of included nodes: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala)
Invalidated by transitive inheritance dependency: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala)
The /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala source file has the following regular definitions changed:
	takeNonPads, checkPrePadding, decodeGroup, checkLength, invertBytes.
All member reference dependencies will be considered within this context.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
Invalidating /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala...
Invalidating (transitively) by inheritance from /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala...
Initial set of included nodes: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala)
Invalidated by transitive inheritance dependency: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala)
The /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala source file has the following regular definitions changed:
	takeNonPads, checkPrePadding, decodeGroup, checkLength, invertBytes.
All member reference dependencies will be considered within this context.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
New invalidations:
	Set()
Initial set of included nodes: Set()
Previously invalidated, but (transitively) depend on new invalidations:
	Set()
All newly invalidated sources after taking into account (previously) recompiled sources:Set()
Total time: 2 s, completed 31.05.2016 23:02:11
> server-post-command-cleanup
> server-handle-next-server-request
> test
Evaluating tasks: test:test
Running task... Cancel: sbt.server.ServerTaskCancellation@2529bd37, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set()
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set()

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set()

Copy resource mappings: 
	
The de.csmath.codec.Codec$ source file has the following regular definitions changed:
	needPads.
All member reference dependencies will be considered within this context.
Files invalidated by inheriting from (external) de.csmath.codec.Codec$: Set(); now invalidating by inheritance (internally).
Getting direct dependencies of all sources transitively invalidated by inheritance.
Getting sources that directly depend on (external) de.csmath.codec.Codec$.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/test/scala/Base16Spec.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/test/scala/Base32Spec.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/test/scala/Base64Spec.scala. This dependency is not being considered for invalidation.

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala)
Removed products: Set()
External API changes: API Changes: Set(NamesChange(de.csmath.codec.Codec$,ModifiedNames(regularNames = needPads, implicitNames = )))
Modified binary dependencies: Set()
Initial directly invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala)

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala)

Read from stdout: Compiling 1 Scala source to /Users/lpfeiler/develop/github/base64/target/scala-2.11/test-classes...
Compiling 1 Scala source to /Users/lpfeiler/develop/github/base64/target/scala-2.11/test-classes...
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Running cached compiler 2dc78c10, interfacing (CompilerInterface) with Scala compiler version 2.11.7
Calling Scala compiler with arguments  (CompilerInterface):
	-bootclasspath
	/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/classes:/Users/lpfeiler/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.11.7.jar
	-classpath
	/Users/lpfeiler/develop/github/base64/target/scala-2.11/test-classes:/Users/lpfeiler/develop/github/base64/target/scala-2.11/classes:/Users/lpfeiler/develop/scala/activator-dist-1.3.6/repository/org.scalatest/scalatest_2.11/2.2.4/bundles/scalatest_2.11.jar:/Users/lpfeiler/develop/scala/activator-dist-1.3.6/repository/org.scala-lang/scala-reflect/2.11.2/jars/scala-reflect.jar:/Users/lpfeiler/develop/scala/activator-dist-1.3.6/repository/org.scala-lang.modules/scala-xml_2.11/1.0.2/bundles/scala-xml_2.11.jar
Read from stdout: there were 20 feature warnings; re-run with -feature for details
there were 20 feature warnings; re-run with -feature for details
Read from stdout: one warning found
one warning found
Scala compilation took 1.491239368 s
New invalidations:
	Set()
Initial set of included nodes: Set()
Previously invalidated, but (transitively) depend on new invalidations:
	Set()
All newly invalidated sources after taking into account (previously) recompiled sources:Set()
Copy resource mappings: 
	
Framework implementation 'org.scalacheck.ScalaCheckFramework' not present.
Framework implementation 'org.specs2.runner.Specs2Framework' not present.
Framework implementation 'org.specs2.runner.SpecsFramework' not present.
Framework implementation 'org.specs.runner.SpecsFramework' not present.
Framework implementation 'com.novocode.junit.JUnitFramework' not present.
Subclass fingerprints: List((org.scalatest.Suite,false,org.scalatest.tools.Framework$$anon$1@6e0e586))
Annotation fingerprints: List((org.scalatest.WrapWith,false,org.scalatest.tools.Framework$$anon$2@2cbb0153))
Running TaskDef(Base16Spec, org.scalatest.tools.Framework$$anon$1@6e0e586, false, [SuiteSelector])
Running TaskDef(Base64Spec, org.scalatest.tools.Framework$$anon$1@6e0e586, false, [SuiteSelector])
Running TaskDef(StreamDecoderSpec, org.scalatest.tools.Framework$$anon$1@6e0e586, false, [SuiteSelector])
Running TaskDef(Base32Spec, org.scalatest.tools.Framework$$anon$1@6e0e586, false, [SuiteSelector])
Read from stdout: StreamDecoderSpec:
Read from stdout: StreamDecoder
Read from stdout: - should check allowed bytes
Read from stdout: Base16Spec:
Read from stdout: Base16
Read from stdout: - should encode to BASE16
[32mStreamDecoderSpec:[0m
[32mStreamDecoder[0m
[32m- should check allowed bytes[0m
[32mBase16Spec:[0m
[32mBase16[0m
[32m- should encode to BASE16[0m
Running TaskDef(StreamCodecSpec, org.scalatest.tools.Framework$$anon$1@6e0e586, false, [SuiteSelector])
Read from stdout: StreamCodecSpec:
Read from stdout: StreamCodec
Read from stdout: - should create a ByteStream
Read from stdout: StreamCodec
Read from stdout: - should create a IntStream
Read from stdout: StreamCodec
Read from stdout: - should create a groupStream
Read from stdout: StreamCodec
Read from stdout: - should create a filledStream
Read from stdout: StreamCodec
Read from stdout: - should flatten a filledStream
[32mStreamCodecSpec:[0m
[32mStreamCodec[0m
[32m- should create a ByteStream[0m
[32mStreamCodec[0m
[32m- should create a IntStream[0m
[32mStreamCodec[0m
[32m- should create a groupStream[0m
[32mStreamCodec[0m
[32m- should create a filledStream[0m
[32mStreamCodec[0m
[32m- should flatten a filledStream[0m
Read from stdout: Base64Spec:
Read from stdout: Base64
Read from stdout: - should encode to BASE64
Read from stdout: Base64
Read from stdout: - should encode to BASE64FILE
Read from stdout: Base64
Read from stdout: - should encode to BASE64URL
Read from stdout: Base64
Read from stdout: - should encode to BASE64NOPAD
Read from stdout: Base64
Read from stdout: - should encode to BASE64FILENOPAD
Read from stdout: Base64
Read from stdout: - should encode to BASE64URLNOPAD
Read from stdout: Base64
Read from stdout: - should decode from BASE64
Read from stdout: Base64
Read from stdout: - should decode from BASE64 w/o padding
Read from stdout: Base64
Read from stdout: - should fail with crap
Read from stdout: Base64
Read from stdout: - should decode from BASE64FILE
Read from stdout: Base64
Read from stdout: - should decode from BASE64FILE w/o padding
Read from stdout: Base64
Read from stdout: - should decode from BASE64URL
[32mBase64Spec:[0m
[32mBase64[0m
[32m- should encode to BASE64[0m
[32mBase64[0m
[32m- should encode to BASE64FILE[0m
[32mBase64[0m
[32m- should encode to BASE64URL[0m
[32mBase64[0m
[32m- should encode to BASE64NOPAD[0m
[32mBase64[0m
[32m- should encode to BASE64FILENOPAD[0m
[32mBase64[0m
[32m- should encode to BASE64URLNOPAD[0m
[32mBase64[0m
[32m- should decode from BASE64[0m
[32mBase64[0m
[32m- should decode from BASE64 w/o padding[0m
[32mBase64[0m
[32m- should fail with crap[0m
[32mBase64[0m
[32m- should decode from BASE64FILE[0m
[32mBase64[0m
[32m- should decode from BASE64FILE w/o padding[0m
[32mBase64[0m
[32m- should decode from BASE64URL[0m
Read from stdout: Base32Spec:
Read from stdout: Base32
Read from stdout: - should encode to BASE32
Read from stdout: Base32
Read from stdout: - should encode to BASE32NOPAD
Read from stdout: Base32
Read from stdout: - should encode to BASE32URL
Read from stdout: Base32
Read from stdout: - should encode to BASE32HEX
Read from stdout: Base32
Read from stdout: - should encode to BASE32HEXNOPAD
Read from stdout: Base32
Read from stdout: - should encode to BASE32HEXURL
Read from stdout: Base32
Read from stdout: - should decode from BASE32
Read from stdout: Base32
Read from stdout: - should decode from BASE32 w/o padding
Read from stdout: Base32
Read from stdout: - should decode from BASE32URL
Read from stdout: Base32
Read from stdout: - should decode from BASE32HEX
Read from stdout: Base32
Read from stdout: - should decode from BASE32HEX w/o padding
Read from stdout: Base32
Read from stdout: - should decode from BASE32HEXURL
[32mBase32Spec:[0m
[32mBase32[0m
[32m- should encode to BASE32[0m
[32mBase32[0m
[32m- should encode to BASE32NOPAD[0m
[32mBase32[0m
[32m- should encode to BASE32URL[0m
[32mBase32[0m
[32m- should encode to BASE32HEX[0m
[32mBase32[0m
[32m- should encode to BASE32HEXNOPAD[0m
[32mBase32[0m
[32m- should encode to BASE32HEXURL[0m
[32mBase32[0m
[32m- should decode from BASE32[0m
[32mBase32[0m
[32m- should decode from BASE32 w/o padding[0m
[32mBase32[0m
[32m- should decode from BASE32URL[0m
[32mBase32[0m
[32m- should decode from BASE32HEX[0m
[32mBase32[0m
[32m- should decode from BASE32HEX w/o padding[0m
[32mBase32[0m
[32m- should decode from BASE32HEXURL[0m
Read from stdout: Run completed in 368 milliseconds.
Read from stdout: Total number of tests run: 31
Read from stdout: Suites: completed 5, aborted 0
Read from stdout: Tests: succeeded 31, failed 0, canceled 0, ignored 0, pending 0
Read from stdout: All tests passed.
Run completed in 368 milliseconds.
Total number of tests run: 31
Suites: completed 5, aborted 0
Tests: succeeded 31, failed 0, canceled 0, ignored 0, pending 0
All tests passed.
Passed tests:
	StreamCodecSpec
	Base64Spec
	StreamDecoderSpec
	Base32Spec
	Base16Spec
Total time: 2 s, completed 31.05.2016 23:02:13
> server-post-command-cleanup
> server-handle-next-server-request
> compile
Evaluating tasks: compile:compile
Running task... Cancel: sbt.server.ServerTaskCancellation@1aa9f96f, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set()
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set()

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set()

Total time: 0 s, completed 31.05.2016 23:02:20
> server-post-command-cleanup
> server-handle-next-server-request
> test
Evaluating tasks: test:test
Running task... Cancel: sbt.server.ServerTaskCancellation@2b2a2cdd, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set()
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set()

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set()

Copy resource mappings: 
	
The de.csmath.codec.Codec$ source file has the following regular definitions changed:
	needPads.
All member reference dependencies will be considered within this context.
Files invalidated by inheriting from (external) de.csmath.codec.Codec$: Set(); now invalidating by inheritance (internally).
Getting direct dependencies of all sources transitively invalidated by inheritance.
Getting sources that directly depend on (external) de.csmath.codec.Codec$.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/test/scala/Base16Spec.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/test/scala/Base32Spec.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/test/scala/Base64Spec.scala. This dependency is not being considered for invalidation.

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set()
Removed products: Set()
External API changes: API Changes: Set(NamesChange(de.csmath.codec.Codec$,ModifiedNames(regularNames = needPads, implicitNames = )))
Modified binary dependencies: Set()
Initial directly invalidated sources: Set()

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set()

Copy resource mappings: 
	
Framework implementation 'org.scalacheck.ScalaCheckFramework' not present.
Framework implementation 'org.specs2.runner.Specs2Framework' not present.
Framework implementation 'org.specs2.runner.SpecsFramework' not present.
Framework implementation 'org.specs.runner.SpecsFramework' not present.
Framework implementation 'com.novocode.junit.JUnitFramework' not present.
Subclass fingerprints: List((org.scalatest.Suite,false,org.scalatest.tools.Framework$$anon$1@54bf0144))
Annotation fingerprints: List((org.scalatest.WrapWith,false,org.scalatest.tools.Framework$$anon$2@5209548c))
Running TaskDef(StreamDecoderSpec, org.scalatest.tools.Framework$$anon$1@54bf0144, false, [SuiteSelector])
Running TaskDef(Base16Spec, org.scalatest.tools.Framework$$anon$1@54bf0144, false, [SuiteSelector])
Running TaskDef(Base64Spec, org.scalatest.tools.Framework$$anon$1@54bf0144, false, [SuiteSelector])
Running TaskDef(StreamCodecSpec, org.scalatest.tools.Framework$$anon$1@54bf0144, false, [SuiteSelector])
Read from stdout: Base16Spec:
Read from stdout: Base16
Read from stdout: - should encode to BASE16
[32mBase16Spec:[0m
[32mBase16[0m
[32m- should encode to BASE16[0m
Running TaskDef(Base32Spec, org.scalatest.tools.Framework$$anon$1@54bf0144, false, [SuiteSelector])
Read from stdout: StreamDecoderSpec:
Read from stdout: StreamDecoder
Read from stdout: - should check allowed bytes
Read from stdout: StreamCodecSpec:
Read from stdout: StreamCodec
Read from stdout: - should create a ByteStream
Read from stdout: StreamCodec
Read from stdout: - should create a IntStream
Read from stdout: StreamCodec
Read from stdout: - should create a groupStream
Read from stdout: StreamCodec
Read from stdout: - should create a filledStream
Read from stdout: StreamCodec
Read from stdout: - should flatten a filledStream
[32mStreamCodecSpec:[0m
[32mStreamCodec[0m
[32m- should create a ByteStream[0m
[32mStreamCodec[0m
[32m- should create a IntStream[0m
[32mStreamCodec[0m
[32m- should create a groupStream[0m
[32mStreamCodec[0m
[32m- should create a filledStream[0m
[32mStreamCodec[0m
[32m- should flatten a filledStream[0m
[32mStreamDecoderSpec:[0m
[32mStreamDecoder[0m
[32m- should check allowed bytes[0m
Read from stdout: Base64Spec:
Read from stdout: Base64
Read from stdout: - should encode to BASE64
Read from stdout: Base64
Read from stdout: - should encode to BASE64FILE
Read from stdout: Base64
Read from stdout: - should encode to BASE64URL
Read from stdout: Base64
Read from stdout: - should encode to BASE64NOPAD
Read from stdout: Base64
Read from stdout: - should encode to BASE64FILENOPAD
Read from stdout: Base64
Read from stdout: - should encode to BASE64URLNOPAD
Read from stdout: Base64
Read from stdout: - should decode from BASE64
Read from stdout: Base64
Read from stdout: - should decode from BASE64 w/o padding
Read from stdout: Base64
Read from stdout: - should fail with crap
Read from stdout: Base64
Read from stdout: - should decode from BASE64FILE
Read from stdout: Base64
Read from stdout: - should decode from BASE64FILE w/o padding
Read from stdout: Base64
Read from stdout: - should decode from BASE64URL
[32mBase64Spec:[0m
[32mBase64[0m
[32m- should encode to BASE64[0m
[32mBase64[0m
[32m- should encode to BASE64FILE[0m
[32mBase64[0m
[32m- should encode to BASE64URL[0m
[32mBase64[0m
[32m- should encode to BASE64NOPAD[0m
[32mBase64[0m
[32m- should encode to BASE64FILENOPAD[0m
[32mBase64[0m
[32m- should encode to BASE64URLNOPAD[0m
[32mBase64[0m
[32m- should decode from BASE64[0m
[32mBase64[0m
[32m- should decode from BASE64 w/o padding[0m
[32mBase64[0m
[32m- should fail with crap[0m
[32mBase64[0m
[32m- should decode from BASE64FILE[0m
[32mBase64[0m
[32m- should decode from BASE64FILE w/o padding[0m
[32mBase64[0m
[32m- should decode from BASE64URL[0m
Read from stdout: Base32Spec:
Read from stdout: Base32
Read from stdout: - should encode to BASE32
Read from stdout: Base32
Read from stdout: - should encode to BASE32NOPAD
Read from stdout: Base32
Read from stdout: - should encode to BASE32URL
Read from stdout: Base32
Read from stdout: - should encode to BASE32HEX
Read from stdout: Base32
Read from stdout: - should encode to BASE32HEXNOPAD
Read from stdout: Base32
Read from stdout: - should encode to BASE32HEXURL
Read from stdout: Base32
Read from stdout: - should decode from BASE32
Read from stdout: Base32
Read from stdout: - should decode from BASE32 w/o padding
Read from stdout: Base32
Read from stdout: - should decode from BASE32URL
Read from stdout: Base32
Read from stdout: - should decode from BASE32HEX
Read from stdout: Base32
Read from stdout: - should decode from BASE32HEX w/o padding
Read from stdout: Base32
Read from stdout: - should decode from BASE32HEXURL
[32mBase32Spec:[0m
[32mBase32[0m
[32m- should encode to BASE32[0m
[32mBase32[0m
[32m- should encode to BASE32NOPAD[0m
[32mBase32[0m
[32m- should encode to BASE32URL[0m
[32mBase32[0m
[32m- should encode to BASE32HEX[0m
[32mBase32[0m
[32m- should encode to BASE32HEXNOPAD[0m
[32mBase32[0m
[32m- should encode to BASE32HEXURL[0m
[32mBase32[0m
[32m- should decode from BASE32[0m
[32mBase32[0m
[32m- should decode from BASE32 w/o padding[0m
[32mBase32[0m
[32m- should decode from BASE32URL[0m
[32mBase32[0m
[32m- should decode from BASE32HEX[0m
[32mBase32[0m
[32m- should decode from BASE32HEX w/o padding[0m
[32mBase32[0m
[32m- should decode from BASE32HEXURL[0m
Read from stdout: Run completed in 483 milliseconds.
Read from stdout: Total number of tests run: 31
Read from stdout: Suites: completed 5, aborted 0
Read from stdout: Tests: succeeded 31, failed 0, canceled 0, ignored 0, pending 0
Read from stdout: All tests passed.
Run completed in 483 milliseconds.
Total number of tests run: 31
Suites: completed 5, aborted 0
Tests: succeeded 31, failed 0, canceled 0, ignored 0, pending 0
All tests passed.
Passed tests:
	StreamCodecSpec
	Base64Spec
	StreamDecoderSpec
	Base32Spec
	Base16Spec
Total time: 1 s, completed 31.05.2016 23:02:21
> server-post-command-cleanup
> server-handle-next-server-request
> compile
Evaluating tasks: compile:compile
Running task... Cancel: sbt.server.ServerTaskCancellation@29819c81, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala)
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala)

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala)

Read from stdout: Compiling 1 Scala source to /Users/lpfeiler/develop/github/base64/target/scala-2.11/classes...
Compiling 1 Scala source to /Users/lpfeiler/develop/github/base64/target/scala-2.11/classes...
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Running cached compiler 30ec5c82, interfacing (CompilerInterface) with Scala compiler version 2.11.7
Calling Scala compiler with arguments  (CompilerInterface):
	-bootclasspath
	/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/classes:/Users/lpfeiler/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.11.7.jar
	-classpath
	/Users/lpfeiler/develop/github/base64/target/scala-2.11/classes
Scala compilation took 0.803131375 s
Invalidating /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala...
Invalidating (transitively) by inheritance from /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala...
Initial set of included nodes: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala)
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Decoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Decoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala
Invalidated by transitive inheritance dependency: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Decoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala)
The /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala source file has the following regular definitions changed:
	checkIntPadding.
All member reference dependencies will be considered within this context.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseN.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Decoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala. This dependency is not being considered for invalidation.
New invalidations:
	Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Decoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala)
Initial set of included nodes: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Decoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala)
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Decoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala
Previously invalidated, but (transitively) depend on new invalidations:
	Set()
All newly invalidated sources after taking into account (previously) recompiled sources:Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Decoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala)
Read from stdout: Compiling 7 Scala sources to /Users/lpfeiler/develop/github/base64/target/scala-2.11/classes...
Compiling 7 Scala sources to /Users/lpfeiler/develop/github/base64/target/scala-2.11/classes...
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Running cached compiler 590baabd, interfacing (CompilerInterface) with Scala compiler version 2.11.7
Calling Scala compiler with arguments  (CompilerInterface):
	-bootclasspath
	/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/classes:/Users/lpfeiler/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.11.7.jar
	-classpath
	/Users/lpfeiler/develop/github/base64/target/scala-2.11/classes
Scala compilation took 1.145373412 s
Invalidating /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala...
Invalidating (transitively) by inheritance from /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala...
Initial set of included nodes: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala)
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala
Invalidated by transitive inheritance dependency: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala)
The /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala source file has the following regular definitions changed:
	checkIntPadding.
All member reference dependencies will be considered within this context.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
Invalidating /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala...
Invalidating (transitively) by inheritance from /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala...
Initial set of included nodes: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala)
Invalidated by transitive inheritance dependency: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala)
The /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala source file has the following regular definitions changed:
	checkIntPadding.
All member reference dependencies will be considered within this context.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
Invalidating /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala...
Invalidating (transitively) by inheritance from /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala...
Initial set of included nodes: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala)
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala
Invalidated by transitive inheritance dependency: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala)
The /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala source file has the following regular definitions changed:
	checkIntPadding.
All member reference dependencies will be considered within this context.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
Invalidating /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala...
Invalidating (transitively) by inheritance from /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala...
Initial set of included nodes: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala)
Invalidated by transitive inheritance dependency: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala)
The /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala source file has the following regular definitions changed:
	checkIntPadding.
All member reference dependencies will be considered within this context.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
Invalidating /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala...
Invalidating (transitively) by inheritance from /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala...
Initial set of included nodes: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala)
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala
Invalidated by transitive inheritance dependency: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala)
The /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala source file has the following regular definitions changed:
	checkIntPadding.
All member reference dependencies will be considered within this context.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
Invalidating /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Decoder.scala...
Invalidating (transitively) by inheritance from /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Decoder.scala...
Initial set of included nodes: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Decoder.scala)
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Decoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala
Invalidated by transitive inheritance dependency: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Decoder.scala)
The /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Decoder.scala source file has the following regular definitions changed:
	checkIntPadding.
All member reference dependencies will be considered within this context.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
Invalidating /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala...
Invalidating (transitively) by inheritance from /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala...
Initial set of included nodes: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala)
Invalidated by transitive inheritance dependency: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala)
The /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala source file has the following regular definitions changed:
	checkIntPadding.
All member reference dependencies will be considered within this context.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
New invalidations:
	Set()
Initial set of included nodes: Set()
Previously invalidated, but (transitively) depend on new invalidations:
	Set()
All newly invalidated sources after taking into account (previously) recompiled sources:Set()
Total time: 2 s, completed 31.05.2016 23:03:13
> server-post-command-cleanup
> server-handle-next-server-request
> test
Evaluating tasks: test:test
Running task... Cancel: sbt.server.ServerTaskCancellation@6c5bd7a2, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set()
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set()

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set()

Copy resource mappings: 
	
The de.csmath.codec.Codec$ source file has the following regular definitions changed:
	needPads.
All member reference dependencies will be considered within this context.
Files invalidated by inheriting from (external) de.csmath.codec.Codec$: Set(); now invalidating by inheritance (internally).
Getting direct dependencies of all sources transitively invalidated by inheritance.
Getting sources that directly depend on (external) de.csmath.codec.Codec$.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/test/scala/Base16Spec.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/test/scala/Base32Spec.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/test/scala/Base64Spec.scala. This dependency is not being considered for invalidation.

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set()
Removed products: Set()
External API changes: API Changes: Set(NamesChange(de.csmath.codec.Codec$,ModifiedNames(regularNames = needPads, implicitNames = )))
Modified binary dependencies: Set()
Initial directly invalidated sources: Set()

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set()

Copy resource mappings: 
	
Framework implementation 'org.scalacheck.ScalaCheckFramework' not present.
Framework implementation 'org.specs2.runner.Specs2Framework' not present.
Framework implementation 'org.specs2.runner.SpecsFramework' not present.
Framework implementation 'org.specs.runner.SpecsFramework' not present.
Framework implementation 'com.novocode.junit.JUnitFramework' not present.
Subclass fingerprints: List((org.scalatest.Suite,false,org.scalatest.tools.Framework$$anon$1@5c7895f2))
Annotation fingerprints: List((org.scalatest.WrapWith,false,org.scalatest.tools.Framework$$anon$2@1f07693f))
Running TaskDef(StreamDecoderSpec, org.scalatest.tools.Framework$$anon$1@5c7895f2, false, [SuiteSelector])
Running TaskDef(StreamCodecSpec, org.scalatest.tools.Framework$$anon$1@5c7895f2, false, [SuiteSelector])
Running TaskDef(Base32Spec, org.scalatest.tools.Framework$$anon$1@5c7895f2, false, [SuiteSelector])
Running TaskDef(Base16Spec, org.scalatest.tools.Framework$$anon$1@5c7895f2, false, [SuiteSelector])
Read from stdout: StreamDecoderSpec:
Read from stdout: StreamDecoder
Read from stdout: - should check allowed bytes
[32mStreamDecoderSpec:[0m
[32mStreamDecoder[0m
[32m- should check allowed bytes[0m
Read from stdout: Base16Spec:
Read from stdout: Base16
Read from stdout: - should encode to BASE16
[32mBase16Spec:[0m
[32mBase16[0m
[32m- should encode to BASE16[0m
Running TaskDef(Base64Spec, org.scalatest.tools.Framework$$anon$1@5c7895f2, false, [SuiteSelector])
Read from stdout: StreamCodecSpec:
Read from stdout: StreamCodec
Read from stdout: - should create a ByteStream
Read from stdout: StreamCodec
Read from stdout: - should create a IntStream
Read from stdout: StreamCodec
Read from stdout: - should create a groupStream
Read from stdout: StreamCodec
Read from stdout: - should create a filledStream
Read from stdout: StreamCodec
Read from stdout: - should flatten a filledStream
[32mStreamCodecSpec:[0m
[32mStreamCodec[0m
[32m- should create a ByteStream[0m
[32mStreamCodec[0m
[32m- should create a IntStream[0m
[32mStreamCodec[0m
[32m- should create a groupStream[0m
[32mStreamCodec[0m
[32m- should create a filledStream[0m
[32mStreamCodec[0m
[32m- should flatten a filledStream[0m
Read from stdout: Base32Spec:
Read from stdout: Base32
Read from stdout: - should encode to BASE32
Read from stdout: Base32
Read from stdout: - should encode to BASE32NOPAD
Read from stdout: Base32
Read from stdout: - should encode to BASE32URL
Read from stdout: Base32
Read from stdout: - should encode to BASE32HEX
Read from stdout: Base32
Read from stdout: - should encode to BASE32HEXNOPAD
Read from stdout: Base32
Read from stdout: - should encode to BASE32HEXURL
Read from stdout: Base32
Read from stdout: - should decode from BASE32
Read from stdout: Base32
Read from stdout: - should decode from BASE32 w/o padding
Read from stdout: Base32
Read from stdout: - should decode from BASE32URL
Read from stdout: Base32
Read from stdout: - should decode from BASE32HEX
Read from stdout: Base32
Read from stdout: - should decode from BASE32HEX w/o padding
Read from stdout: Base32
Read from stdout: - should decode from BASE32HEXURL
[32mBase32Spec:[0m
[32mBase32[0m
[32m- should encode to BASE32[0m
[32mBase32[0m
[32m- should encode to BASE32NOPAD[0m
[32mBase32[0m
[32m- should encode to BASE32URL[0m
[32mBase32[0m
[32m- should encode to BASE32HEX[0m
[32mBase32[0m
[32m- should encode to BASE32HEXNOPAD[0m
[32mBase32[0m
[32m- should encode to BASE32HEXURL[0m
[32mBase32[0m
[32m- should decode from BASE32[0m
[32mBase32[0m
[32m- should decode from BASE32 w/o padding[0m
[32mBase32[0m
[32m- should decode from BASE32URL[0m
[32mBase32[0m
[32m- should decode from BASE32HEX[0m
[32mBase32[0m
[32m- should decode from BASE32HEX w/o padding[0m
[32mBase32[0m
[32m- should decode from BASE32HEXURL[0m
Read from stdout: Base64Spec:
Read from stdout: Base64
Read from stdout: - should encode to BASE64
Read from stdout: Base64
Read from stdout: - should encode to BASE64FILE
Read from stdout: Base64
Read from stdout: - should encode to BASE64URL
Read from stdout: Base64
Read from stdout: - should encode to BASE64NOPAD
Read from stdout: Base64
Read from stdout: - should encode to BASE64FILENOPAD
Read from stdout: Base64
Read from stdout: - should encode to BASE64URLNOPAD
Read from stdout: Base64
Read from stdout: - should decode from BASE64
Read from stdout: Base64
Read from stdout: - should decode from BASE64 w/o padding
Read from stdout: Base64
Read from stdout: - should fail with crap
Read from stdout: Base64
Read from stdout: - should decode from BASE64FILE
Read from stdout: Base64
Read from stdout: - should decode from BASE64FILE w/o padding
Read from stdout: Base64
Read from stdout: - should decode from BASE64URL
[32mBase64Spec:[0m
[32mBase64[0m
[32m- should encode to BASE64[0m
[32mBase64[0m
[32m- should encode to BASE64FILE[0m
[32mBase64[0m
[32m- should encode to BASE64URL[0m
[32mBase64[0m
[32m- should encode to BASE64NOPAD[0m
[32mBase64[0m
[32m- should encode to BASE64FILENOPAD[0m
[32mBase64[0m
[32m- should encode to BASE64URLNOPAD[0m
[32mBase64[0m
[32m- should decode from BASE64[0m
[32mBase64[0m
[32m- should decode from BASE64 w/o padding[0m
[32mBase64[0m
[32m- should fail with crap[0m
[32mBase64[0m
[32m- should decode from BASE64FILE[0m
[32mBase64[0m
[32m- should decode from BASE64FILE w/o padding[0m
[32mBase64[0m
[32m- should decode from BASE64URL[0m
Read from stdout: Run completed in 304 milliseconds.
Read from stdout: Total number of tests run: 31
Read from stdout: Suites: completed 5, aborted 0
Read from stdout: Tests: succeeded 31, failed 0, canceled 0, ignored 0, pending 0
Read from stdout: All tests passed.
Run completed in 304 milliseconds.
Total number of tests run: 31
Suites: completed 5, aborted 0
Tests: succeeded 31, failed 0, canceled 0, ignored 0, pending 0
All tests passed.
Passed tests:
	StreamCodecSpec
	Base64Spec
	StreamDecoderSpec
	Base32Spec
	Base16Spec
Total time: 1 s, completed 31.05.2016 23:03:14
> server-post-command-cleanup
> server-handle-next-server-request
> compile
Evaluating tasks: compile:compile
Running task... Cancel: sbt.server.ServerTaskCancellation@211b458f, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala)
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala)

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala)

Read from stdout: Compiling 1 Scala source to /Users/lpfeiler/develop/github/base64/target/scala-2.11/classes...
Compiling 1 Scala source to /Users/lpfeiler/develop/github/base64/target/scala-2.11/classes...
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Running cached compiler 31243959, interfacing (CompilerInterface) with Scala compiler version 2.11.7
Calling Scala compiler with arguments  (CompilerInterface):
	-bootclasspath
	/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/classes:/Users/lpfeiler/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.11.7.jar
	-classpath
	/Users/lpfeiler/develop/github/base64/target/scala-2.11/classes
Scala compilation took 1.187327666 s
New invalidations:
	Set()
Initial set of included nodes: Set()
Previously invalidated, but (transitively) depend on new invalidations:
	Set()
All newly invalidated sources after taking into account (previously) recompiled sources:Set()
Total time: 1 s, completed 01.06.2016 09:25:18
> server-post-command-cleanup
> server-handle-next-server-request
> test
Evaluating tasks: test:test
Running task... Cancel: sbt.server.ServerTaskCancellation@7a5b8e03, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set()
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set()

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set()

Copy resource mappings: 
	
The de.csmath.codec.Codec$ source file has the following regular definitions changed:
	needPads.
All member reference dependencies will be considered within this context.
Files invalidated by inheriting from (external) de.csmath.codec.Codec$: Set(); now invalidating by inheritance (internally).
Getting direct dependencies of all sources transitively invalidated by inheritance.
Getting sources that directly depend on (external) de.csmath.codec.Codec$.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/test/scala/Base16Spec.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/test/scala/Base32Spec.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/test/scala/Base64Spec.scala. This dependency is not being considered for invalidation.

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set()
Removed products: Set()
External API changes: API Changes: Set(NamesChange(de.csmath.codec.Codec$,ModifiedNames(regularNames = needPads, implicitNames = )))
Modified binary dependencies: Set()
Initial directly invalidated sources: Set()

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set()

Copy resource mappings: 
	
Framework implementation 'org.scalacheck.ScalaCheckFramework' not present.
Framework implementation 'org.specs2.runner.Specs2Framework' not present.
Framework implementation 'org.specs2.runner.SpecsFramework' not present.
Framework implementation 'org.specs.runner.SpecsFramework' not present.
Framework implementation 'com.novocode.junit.JUnitFramework' not present.
Subclass fingerprints: List((org.scalatest.Suite,false,org.scalatest.tools.Framework$$anon$1@6a940fbe))
Annotation fingerprints: List((org.scalatest.WrapWith,false,org.scalatest.tools.Framework$$anon$2@6162e1dd))
Running TaskDef(Base64Spec, org.scalatest.tools.Framework$$anon$1@6a940fbe, false, [SuiteSelector])
Running TaskDef(Base16Spec, org.scalatest.tools.Framework$$anon$1@6a940fbe, false, [SuiteSelector])
Running TaskDef(Base32Spec, org.scalatest.tools.Framework$$anon$1@6a940fbe, false, [SuiteSelector])
Running TaskDef(StreamDecoderSpec, org.scalatest.tools.Framework$$anon$1@6a940fbe, false, [SuiteSelector])
Read from stdout: Base16Spec:
Read from stdout: Base16
Read from stdout: - should encode to BASE16
Read from stdout: StreamDecoderSpec:
[32mBase16Spec:[0m
[32mBase16[0m
[32m- should encode to BASE16[0m
Read from stdout: StreamDecoder
Read from stdout: - should check allowed bytes
[32mStreamDecoderSpec:[0m
[32mStreamDecoder[0m
[32m- should check allowed bytes[0m
Running TaskDef(StreamCodecSpec, org.scalatest.tools.Framework$$anon$1@6a940fbe, false, [SuiteSelector])
Read from stdout: StreamCodecSpec:
Read from stdout: StreamCodec
Read from stdout: - should create a ByteStream
Read from stdout: StreamCodec
Read from stdout: - should create a IntStream
Read from stdout: StreamCodec
Read from stdout: - should create a groupStream
Read from stdout: StreamCodec
Read from stdout: - should create a filledStream
Read from stdout: StreamCodec
Read from stdout: - should flatten a filledStream
[32mStreamCodecSpec:[0m
[32mStreamCodec[0m
[32m- should create a ByteStream[0m
[32mStreamCodec[0m
[32m- should create a IntStream[0m
[32mStreamCodec[0m
[32m- should create a groupStream[0m
[32mStreamCodec[0m
[32m- should create a filledStream[0m
[32mStreamCodec[0m
[32m- should flatten a filledStream[0m
Read from stdout: Base64Spec:
Read from stdout: Base64
Read from stdout: - should encode to BASE64
Read from stdout: Base64
Read from stdout: - should encode to BASE64FILE
Read from stdout: Base64
Read from stdout: - should encode to BASE64URL
Read from stdout: Base64
Read from stdout: - should encode to BASE64NOPAD
Read from stdout: Base64
Read from stdout: - should encode to BASE64FILENOPAD
Read from stdout: Base64
Read from stdout: - should encode to BASE64URLNOPAD
Read from stdout: Base64
Read from stdout: - should decode from BASE64 *** FAILED ***
Read from stdout: Failure(java.lang.IllegalArgumentException: Length Error) did not equal Success("f") (Base64Spec.scala:75)
Read from stdout: Base64
Read from stdout: - should decode from BASE64 w/o padding *** FAILED ***
Read from stdout: Success("") did not equal Success("f") (Base64Spec.scala:86)
Read from stdout: Base64
Read from stdout: - should fail with crap *** FAILED ***
Read from stdout: false did not equal true (Base64Spec.scala:97)
Read from stdout: Base64
Read from stdout: - should decode from BASE64FILE *** FAILED ***
Read from stdout: Failure(java.lang.IllegalArgumentException: Length Error) did not equal Success("f") (Base64Spec.scala:104)
Read from stdout: Base64
Read from stdout: - should decode from BASE64FILE w/o padding *** FAILED ***
Read from stdout: Success("") did not equal Success("f") (Base64Spec.scala:115)
Read from stdout: Base64
Read from stdout: - should decode from BASE64URL *** FAILED ***
Read from stdout: Failure(java.lang.IllegalArgumentException: Length Error) did not equal Success("f") (Base64Spec.scala:126)
Read from stdout: Base32Spec:
Read from stdout: Base32
Read from stdout: - should encode to BASE32
[32mBase64Spec:[0m
Read from stdout: Base32
[32mBase64[0m
Read from stdout: - should encode to BASE32NOPAD
[32m- should encode to BASE64[0m
[32mBase64[0m
Read from stdout: Base32
[32m- should encode to BASE64FILE[0m
[32mBase64[0m
[32m- should encode to BASE64URL[0m
[32mBase64[0m
[32m- should encode to BASE64NOPAD[0m
Read from stdout: - should encode to BASE32URL
[32mBase64[0m
[32m- should encode to BASE64FILENOPAD[0m
Read from stdout: Base32
[32mBase64[0m
[32m- should encode to BASE64URLNOPAD[0m
[32mBase64[0m
[31m- should decode from BASE64 *** FAILED ***[0m
[31m  Failure(java.lang.IllegalArgumentException: Length Error) did not equal Success("f") (Base64Spec.scala:75)[0m
[32mBase64[0m
[31m- should decode from BASE64 w/o padding *** FAILED ***[0m
[31m  Success("") did not equal Success("f") (Base64Spec.scala:86)[0m
[32mBase64[0m
[31m- should fail with crap *** FAILED ***[0m
[31m  false did not equal true (Base64Spec.scala:97)[0m
[32mBase64[0m
[31m- should decode from BASE64FILE *** FAILED ***[0m
[31m  Failure(java.lang.IllegalArgumentException: Length Error) did not equal Success("f") (Base64Spec.scala:104)[0m
[32mBase64[0m
[31m- should decode from BASE64FILE w/o padding *** FAILED ***[0m
Read from stdout: - should encode to BASE32HEX
[31m  Success("") did not equal Success("f") (Base64Spec.scala:115)[0m
[32mBase64[0m
[31m- should decode from BASE64URL *** FAILED ***[0m
Read from stdout: Base32
[31m  Failure(java.lang.IllegalArgumentException: Length Error) did not equal Success("f") (Base64Spec.scala:126)[0m
Read from stdout: - should encode to BASE32HEXNOPAD
Read from stdout: Base32
Read from stdout: - should encode to BASE32HEXURL
Read from stdout: Base32
Read from stdout: - should decode from BASE32 *** FAILED ***
Read from stdout: Success("") did not equal Success("f") (Base32Spec.scala:72)
Read from stdout: Base32
Read from stdout: - should decode from BASE32 w/o padding *** FAILED ***
Read from stdout: Success("") did not equal Success("f") (Base32Spec.scala:82)
Read from stdout: Base32
Read from stdout: - should decode from BASE32URL *** FAILED ***
Read from stdout: Success("") did not equal Success("f") (Base32Spec.scala:92)
Read from stdout: Base32
Read from stdout: - should decode from BASE32HEX *** FAILED ***
Read from stdout: Success("") did not equal Success("f") (Base32Spec.scala:102)
Read from stdout: Base32
Read from stdout: - should decode from BASE32HEX w/o padding *** FAILED ***
Read from stdout: Success("") did not equal Success("f") (Base32Spec.scala:112)
Read from stdout: Base32
Read from stdout: - should decode from BASE32HEXURL *** FAILED ***
Read from stdout: Success("") did not equal Success("f") (Base32Spec.scala:122)
[32mBase32Spec:[0m
[32mBase32[0m
[32m- should encode to BASE32[0m
[32mBase32[0m
[32m- should encode to BASE32NOPAD[0m
[32mBase32[0m
[32m- should encode to BASE32URL[0m
[32mBase32[0m
[32m- should encode to BASE32HEX[0m
[32mBase32[0m
[32m- should encode to BASE32HEXNOPAD[0m
[32mBase32[0m
[32m- should encode to BASE32HEXURL[0m
[32mBase32[0m
[31m- should decode from BASE32 *** FAILED ***[0m
[31m  Success("") did not equal Success("f") (Base32Spec.scala:72)[0m
[32mBase32[0m
[31m- should decode from BASE32 w/o padding *** FAILED ***[0m
[31m  Success("") did not equal Success("f") (Base32Spec.scala:82)[0m
[32mBase32[0m
[31m- should decode from BASE32URL *** FAILED ***[0m
[31m  Success("") did not equal Success("f") (Base32Spec.scala:92)[0m
[32mBase32[0m
[31m- should decode from BASE32HEX *** FAILED ***[0m
[31m  Success("") did not equal Success("f") (Base32Spec.scala:102)[0m
[32mBase32[0m
[31m- should decode from BASE32HEX w/o padding *** FAILED ***[0m
[31m  Success("") did not equal Success("f") (Base32Spec.scala:112)[0m
[32mBase32[0m
[31m- should decode from BASE32HEXURL *** FAILED ***[0m
[31m  Success("") did not equal Success("f") (Base32Spec.scala:122)[0m
Read from stdout: Run completed in 524 milliseconds.
Read from stdout: Total number of tests run: 31
Read from stdout: Suites: completed 5, aborted 0
Read from stdout: Tests: succeeded 19, failed 12, canceled 0, ignored 0, pending 0
Read from stdout: *** 12 TESTS FAILED ***
Run completed in 524 milliseconds.
Total number of tests run: 31
Suites: completed 5, aborted 0
Tests: succeeded 19, failed 12, canceled 0, ignored 0, pending 0
*** 12 TESTS FAILED ***
Passed tests:
	StreamCodecSpec
	StreamDecoderSpec
	Base16Spec
Read from stdout: Failed tests:
Failed tests:
Read from stdout: 	Base64Spec
Read from stdout: 	Base32Spec
	Base64Spec
	Base32Spec
Read from stdout: (test:test) sbt.TestsFailedException: Tests unsuccessful
(test:test) sbt.TestsFailedException: Tests unsuccessful
Total time: 1 s, completed 01.06.2016 09:25:19
> server-post-command-error-handler
> server-post-command-cleanup
> server-handle-next-server-request
> compile
Evaluating tasks: compile:compile
Running task... Cancel: sbt.server.ServerTaskCancellation@76ef2104, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala)
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala)

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala)

Read from stdout: Compiling 1 Scala source to /Users/lpfeiler/develop/github/base64/target/scala-2.11/classes...
Compiling 1 Scala source to /Users/lpfeiler/develop/github/base64/target/scala-2.11/classes...
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Running cached compiler 38938bfd, interfacing (CompilerInterface) with Scala compiler version 2.11.7
Calling Scala compiler with arguments  (CompilerInterface):
	-bootclasspath
	/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/classes:/Users/lpfeiler/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.11.7.jar
	-classpath
	/Users/lpfeiler/develop/github/base64/target/scala-2.11/classes
Scala compilation took 0.875925095 s
New invalidations:
	Set()
Initial set of included nodes: Set()
Previously invalidated, but (transitively) depend on new invalidations:
	Set()
All newly invalidated sources after taking into account (previously) recompiled sources:Set()
Total time: 1 s, completed 01.06.2016 09:27:13
> server-post-command-cleanup
> server-handle-next-server-request
> test
Evaluating tasks: test:test
Running task... Cancel: sbt.server.ServerTaskCancellation@7aea614f, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set()
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set()

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set()

Copy resource mappings: 
	
The de.csmath.codec.Codec$ source file has the following regular definitions changed:
	needPads.
All member reference dependencies will be considered within this context.
Files invalidated by inheriting from (external) de.csmath.codec.Codec$: Set(); now invalidating by inheritance (internally).
Getting direct dependencies of all sources transitively invalidated by inheritance.
Getting sources that directly depend on (external) de.csmath.codec.Codec$.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/test/scala/Base16Spec.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/test/scala/Base32Spec.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/test/scala/Base64Spec.scala. This dependency is not being considered for invalidation.

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set()
Removed products: Set()
External API changes: API Changes: Set(NamesChange(de.csmath.codec.Codec$,ModifiedNames(regularNames = needPads, implicitNames = )))
Modified binary dependencies: Set()
Initial directly invalidated sources: Set()

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set()

Copy resource mappings: 
	
Framework implementation 'org.scalacheck.ScalaCheckFramework' not present.
Framework implementation 'org.specs2.runner.Specs2Framework' not present.
Framework implementation 'org.specs2.runner.SpecsFramework' not present.
Framework implementation 'org.specs.runner.SpecsFramework' not present.
Framework implementation 'com.novocode.junit.JUnitFramework' not present.
Subclass fingerprints: List((org.scalatest.Suite,false,org.scalatest.tools.Framework$$anon$1@4502d916))
Annotation fingerprints: List((org.scalatest.WrapWith,false,org.scalatest.tools.Framework$$anon$2@a160a7c))
Running TaskDef(StreamCodecSpec, org.scalatest.tools.Framework$$anon$1@4502d916, false, [SuiteSelector])
Running TaskDef(Base16Spec, org.scalatest.tools.Framework$$anon$1@4502d916, false, [SuiteSelector])
Running TaskDef(Base64Spec, org.scalatest.tools.Framework$$anon$1@4502d916, false, [SuiteSelector])
Running TaskDef(Base32Spec, org.scalatest.tools.Framework$$anon$1@4502d916, false, [SuiteSelector])
Read from stdout: Base16Spec:
Read from stdout: Base16
Read from stdout: - should encode to BASE16
[32mBase16Spec:[0m
[32mBase16[0m
[32m- should encode to BASE16[0m
Running TaskDef(StreamDecoderSpec, org.scalatest.tools.Framework$$anon$1@4502d916, false, [SuiteSelector])
Read from stdout: StreamCodecSpec:
Read from stdout: StreamCodec
Read from stdout: - should create a ByteStream
Read from stdout: StreamCodec
Read from stdout: - should create a IntStream
Read from stdout: StreamCodec
Read from stdout: - should create a groupStream
Read from stdout: StreamCodec
Read from stdout: - should create a filledStream
Read from stdout: StreamCodec
Read from stdout: - should flatten a filledStream
[32mStreamCodecSpec:[0m
Read from stdout: StreamDecoderSpec:
[32mStreamCodec[0m
Read from stdout: StreamDecoder
[32m- should create a ByteStream[0m
Read from stdout: - should check allowed bytes
[32mStreamCodec[0m
[32m- should create a IntStream[0m
[32mStreamCodec[0m
[32mStreamDecoderSpec:[0m
[32mStreamDecoder[0m
[32m- should check allowed bytes[0m
[32m- should create a groupStream[0m
[32mStreamCodec[0m
[32m- should create a filledStream[0m
[32mStreamCodec[0m
[32m- should flatten a filledStream[0m
Read from stdout: Base64Spec:
Read from stdout: Base64
Read from stdout: - should encode to BASE64
Read from stdout: Base64
Read from stdout: - should encode to BASE64FILE
Read from stdout: Base64
Read from stdout: - should encode to BASE64URL
Read from stdout: Base64
Read from stdout: - should encode to BASE64NOPAD
Read from stdout: Base64
Read from stdout: - should encode to BASE64FILENOPAD
Read from stdout: Base64
Read from stdout: - should encode to BASE64URLNOPAD
Read from stdout: Base64
Read from stdout: - should decode from BASE64 *** FAILED ***
Read from stdout: Failure(java.lang.IllegalArgumentException: Length Error) did not equal Success("f") (Base64Spec.scala:75)
Read from stdout: Base64
Read from stdout: - should decode from BASE64 w/o padding
Read from stdout: Base64
Read from stdout: - should fail with crap *** FAILED ***
Read from stdout: false did not equal true (Base64Spec.scala:97)
Read from stdout: Base64
Read from stdout: - should decode from BASE64FILE *** FAILED ***
Read from stdout: Failure(java.lang.IllegalArgumentException: Length Error) did not equal Success("f") (Base64Spec.scala:104)
Read from stdout: Base64
Read from stdout: - should decode from BASE64FILE w/o padding
Read from stdout: Base64
Read from stdout: - should decode from BASE64URL *** FAILED ***
Read from stdout: Failure(java.lang.IllegalArgumentException: Length Error) did not equal Success("f") (Base64Spec.scala:126)
[32mBase64Spec:[0m
[32mBase64[0m
[32m- should encode to BASE64[0m
[32mBase64[0m
[32m- should encode to BASE64FILE[0m
[32mBase64[0m
[32m- should encode to BASE64URL[0m
[32mBase64[0m
[32m- should encode to BASE64NOPAD[0m
[32mBase64[0m
[32m- should encode to BASE64FILENOPAD[0m
[32mBase64[0m
[32m- should encode to BASE64URLNOPAD[0m
[32mBase64[0m
[31m- should decode from BASE64 *** FAILED ***[0m
[31m  Failure(java.lang.IllegalArgumentException: Length Error) did not equal Success("f") (Base64Spec.scala:75)[0m
[32mBase64[0m
[32m- should decode from BASE64 w/o padding[0m
[32mBase64[0m
[31m- should fail with crap *** FAILED ***[0m
[31m  false did not equal true (Base64Spec.scala:97)[0m
[32mBase64[0m
[31m- should decode from BASE64FILE *** FAILED ***[0m
[31m  Failure(java.lang.IllegalArgumentException: Length Error) did not equal Success("f") (Base64Spec.scala:104)[0m
[32mBase64[0m
[32m- should decode from BASE64FILE w/o padding[0m
[32mBase64[0m
[31m- should decode from BASE64URL *** FAILED ***[0m
Read from stdout: Base32Spec:
[31m  Failure(java.lang.IllegalArgumentException: Length Error) did not equal Success("f") (Base64Spec.scala:126)[0m
Read from stdout: Base32
Read from stdout: - should encode to BASE32
Read from stdout: Base32
Read from stdout: - should encode to BASE32NOPAD
Read from stdout: Base32
Read from stdout: - should encode to BASE32URL
Read from stdout: Base32
Read from stdout: - should encode to BASE32HEX
Read from stdout: Base32
Read from stdout: - should encode to BASE32HEXNOPAD
Read from stdout: Base32
Read from stdout: - should encode to BASE32HEXURL
Read from stdout: Base32
Read from stdout: - should decode from BASE32 *** FAILED ***
Read from stdout: Failure(java.lang.IllegalArgumentException: Length Error) did not equal Success("f") (Base32Spec.scala:72)
Read from stdout: Base32
Read from stdout: - should decode from BASE32 w/o padding
Read from stdout: Base32
Read from stdout: - should decode from BASE32URL *** FAILED ***
Read from stdout: Failure(java.lang.IllegalArgumentException: Length Error) did not equal Success("f") (Base32Spec.scala:92)
Read from stdout: Base32
Read from stdout: - should decode from BASE32HEX *** FAILED ***
Read from stdout: Failure(java.lang.IllegalArgumentException: Length Error) did not equal Success("f") (Base32Spec.scala:102)
Read from stdout: Base32
Read from stdout: - should decode from BASE32HEX w/o padding
Read from stdout: Base32
Read from stdout: - should decode from BASE32HEXURL *** FAILED ***
Read from stdout: Failure(java.lang.IllegalArgumentException: Length Error) did not equal Success("f") (Base32Spec.scala:122)
[32mBase32Spec:[0m
[32mBase32[0m
[32m- should encode to BASE32[0m
[32mBase32[0m
[32m- should encode to BASE32NOPAD[0m
[32mBase32[0m
[32m- should encode to BASE32URL[0m
[32mBase32[0m
[32m- should encode to BASE32HEX[0m
[32mBase32[0m
[32m- should encode to BASE32HEXNOPAD[0m
[32mBase32[0m
[32m- should encode to BASE32HEXURL[0m
[32mBase32[0m
[31m- should decode from BASE32 *** FAILED ***[0m
[31m  Failure(java.lang.IllegalArgumentException: Length Error) did not equal Success("f") (Base32Spec.scala:72)[0m
[32mBase32[0m
[32m- should decode from BASE32 w/o padding[0m
[32mBase32[0m
[31m- should decode from BASE32URL *** FAILED ***[0m
[31m  Failure(java.lang.IllegalArgumentException: Length Error) did not equal Success("f") (Base32Spec.scala:92)[0m
[32mBase32[0m
[31m- should decode from BASE32HEX *** FAILED ***[0m
[31m  Failure(java.lang.IllegalArgumentException: Length Error) did not equal Success("f") (Base32Spec.scala:102)[0m
[32mBase32[0m
[32m- should decode from BASE32HEX w/o padding[0m
[32mBase32[0m
[31m- should decode from BASE32HEXURL *** FAILED ***[0m
[31m  Failure(java.lang.IllegalArgumentException: Length Error) did not equal Success("f") (Base32Spec.scala:122)[0m
Read from stdout: Run completed in 565 milliseconds.
Read from stdout: Total number of tests run: 31
Read from stdout: Suites: completed 5, aborted 0
Read from stdout: Tests: succeeded 23, failed 8, canceled 0, ignored 0, pending 0
Read from stdout: *** 8 TESTS FAILED ***
Run completed in 565 milliseconds.
Total number of tests run: 31
Suites: completed 5, aborted 0
Tests: succeeded 23, failed 8, canceled 0, ignored 0, pending 0
*** 8 TESTS FAILED ***
Passed tests:
	StreamCodecSpec
	StreamDecoderSpec
	Base16Spec
Read from stdout: Failed tests:
Failed tests:
Read from stdout: 	Base64Spec
Read from stdout: 	Base32Spec
	Base64Spec
	Base32Spec
Read from stdout: (test:test) sbt.TestsFailedException: Tests unsuccessful
(test:test) sbt.TestsFailedException: Tests unsuccessful
Total time: 1 s, completed 01.06.2016 09:27:14
> server-post-command-error-handler
> server-post-command-cleanup
> server-handle-next-server-request
> compile
Evaluating tasks: compile:compile
Running task... Cancel: sbt.server.ServerTaskCancellation@24b17f5, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala)
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala)

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala)

Read from stdout: Compiling 1 Scala source to /Users/lpfeiler/develop/github/base64/target/scala-2.11/classes...
Compiling 1 Scala source to /Users/lpfeiler/develop/github/base64/target/scala-2.11/classes...
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Running cached compiler 1eef98e8, interfacing (CompilerInterface) with Scala compiler version 2.11.7
Calling Scala compiler with arguments  (CompilerInterface):
	-bootclasspath
	/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/classes:/Users/lpfeiler/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.11.7.jar
	-classpath
	/Users/lpfeiler/develop/github/base64/target/scala-2.11/classes
Scala compilation took 0.737205921 s
New invalidations:
	Set()
Initial set of included nodes: Set()
Previously invalidated, but (transitively) depend on new invalidations:
	Set()
All newly invalidated sources after taking into account (previously) recompiled sources:Set()
Total time: 1 s, completed 01.06.2016 09:28:06
> server-post-command-cleanup
> server-handle-next-server-request
> test
Evaluating tasks: test:test
Running task... Cancel: sbt.server.ServerTaskCancellation@3eb59c60, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set()
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set()

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set()

Copy resource mappings: 
	
The de.csmath.codec.Codec$ source file has the following regular definitions changed:
	needPads.
All member reference dependencies will be considered within this context.
Files invalidated by inheriting from (external) de.csmath.codec.Codec$: Set(); now invalidating by inheritance (internally).
Getting direct dependencies of all sources transitively invalidated by inheritance.
Getting sources that directly depend on (external) de.csmath.codec.Codec$.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/test/scala/Base16Spec.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/test/scala/Base32Spec.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/test/scala/Base64Spec.scala. This dependency is not being considered for invalidation.

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set()
Removed products: Set()
External API changes: API Changes: Set(NamesChange(de.csmath.codec.Codec$,ModifiedNames(regularNames = needPads, implicitNames = )))
Modified binary dependencies: Set()
Initial directly invalidated sources: Set()

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set()

Copy resource mappings: 
	
Framework implementation 'org.scalacheck.ScalaCheckFramework' not present.
Framework implementation 'org.specs2.runner.Specs2Framework' not present.
Framework implementation 'org.specs2.runner.SpecsFramework' not present.
Framework implementation 'org.specs.runner.SpecsFramework' not present.
Framework implementation 'com.novocode.junit.JUnitFramework' not present.
Subclass fingerprints: List((org.scalatest.Suite,false,org.scalatest.tools.Framework$$anon$1@45852aab))
Annotation fingerprints: List((org.scalatest.WrapWith,false,org.scalatest.tools.Framework$$anon$2@4d997334))
Running TaskDef(Base32Spec, org.scalatest.tools.Framework$$anon$1@45852aab, false, [SuiteSelector])
Running TaskDef(Base16Spec, org.scalatest.tools.Framework$$anon$1@45852aab, false, [SuiteSelector])
Running TaskDef(StreamDecoderSpec, org.scalatest.tools.Framework$$anon$1@45852aab, false, [SuiteSelector])
Running TaskDef(Base64Spec, org.scalatest.tools.Framework$$anon$1@45852aab, false, [SuiteSelector])
Read from stdout: StreamDecoderSpec:
Read from stdout: StreamDecoder
Read from stdout: - should check allowed bytes
[32mStreamDecoderSpec:[0m
[32mStreamDecoder[0m
[32m- should check allowed bytes[0m
Read from stdout: Base16Spec:
Read from stdout: Base16
Read from stdout: - should encode to BASE16
Running TaskDef(StreamCodecSpec, org.scalatest.tools.Framework$$anon$1@45852aab, false, [SuiteSelector])
[32mBase16Spec:[0m
[32mBase16[0m
[32m- should encode to BASE16[0m
Read from stdout: StreamCodecSpec:
Read from stdout: StreamCodec
Read from stdout: - should create a ByteStream
Read from stdout: StreamCodec
Read from stdout: - should create a IntStream
Read from stdout: StreamCodec
Read from stdout: - should create a groupStream
Read from stdout: StreamCodec
Read from stdout: - should create a filledStream
Read from stdout: StreamCodec
Read from stdout: - should flatten a filledStream
[32mStreamCodecSpec:[0m
[32mStreamCodec[0m
[32m- should create a ByteStream[0m
[32mStreamCodec[0m
[32m- should create a IntStream[0m
[32mStreamCodec[0m
[32m- should create a groupStream[0m
[32mStreamCodec[0m
[32m- should create a filledStream[0m
[32mStreamCodec[0m
[32m- should flatten a filledStream[0m
Read from stdout: Base32Spec:
Read from stdout: Base32
Read from stdout: - should encode to BASE32
Read from stdout: Base32
Read from stdout: - should encode to BASE32NOPAD
Read from stdout: Base32
Read from stdout: - should encode to BASE32URL
Read from stdout: Base32
Read from stdout: - should encode to BASE32HEX
Read from stdout: Base32
Read from stdout: - should encode to BASE32HEXNOPAD
Read from stdout: Base32
Read from stdout: - should encode to BASE32HEXURL
Read from stdout: Base32
Read from stdout: - should decode from BASE32
Read from stdout: Base32
Read from stdout: - should decode from BASE32 w/o padding
Read from stdout: Base32
Read from stdout: - should decode from BASE32URL
Read from stdout: Base32
Read from stdout: - should decode from BASE32HEX
Read from stdout: Base32
Read from stdout: - should decode from BASE32HEX w/o padding
Read from stdout: Base32
Read from stdout: - should decode from BASE32HEXURL
Read from stdout: Base64Spec:
Read from stdout: Base64
Read from stdout: - should encode to BASE64
Read from stdout: Base64
Read from stdout: - should encode to BASE64FILE
Read from stdout: Base64
Read from stdout: - should encode to BASE64URL
Read from stdout: Base64
Read from stdout: - should encode to BASE64NOPAD
Read from stdout: Base64
Read from stdout: - should encode to BASE64FILENOPAD
Read from stdout: Base64
Read from stdout: - should encode to BASE64URLNOPAD
Read from stdout: Base64
Read from stdout: - should decode from BASE64
Read from stdout: Base64
Read from stdout: - should decode from BASE64 w/o padding
Read from stdout: Base64
Read from stdout: - should fail with crap
Read from stdout: Base64
Read from stdout: - should decode from BASE64FILE
Read from stdout: Base64
Read from stdout: - should decode from BASE64FILE w/o padding
[32mBase32Spec:[0m
Read from stdout: Base64
[32mBase32[0m
Read from stdout: - should decode from BASE64URL
[32m- should encode to BASE32[0m
[32mBase64Spec:[0m
[32mBase64[0m
[32m- should encode to BASE64[0m
[32mBase64[0m
[32m- should encode to BASE64FILE[0m
[32mBase64[0m
[32m- should encode to BASE64URL[0m
[32mBase64[0m
[32m- should encode to BASE64NOPAD[0m
[32mBase32[0m
[32mBase64[0m
[32m- should encode to BASE64FILENOPAD[0m
[32m- should encode to BASE32NOPAD[0m
[32mBase32[0m
[32m- should encode to BASE32URL[0m
[32mBase64[0m
[32m- should encode to BASE64URLNOPAD[0m
[32mBase64[0m
[32mBase32[0m
[32m- should decode from BASE64[0m
[32m- should encode to BASE32HEX[0m
[32mBase64[0m
[32mBase32[0m
[32m- should encode to BASE32HEXNOPAD[0m
[32mBase32[0m
[32m- should decode from BASE64 w/o padding[0m
[32mBase64[0m
[32m- should fail with crap[0m
[32mBase64[0m
[32m- should decode from BASE64FILE[0m
[32mBase64[0m
[32m- should decode from BASE64FILE w/o padding[0m
[32mBase64[0m
[32m- should decode from BASE64URL[0m
[32m- should encode to BASE32HEXURL[0m
[32mBase32[0m
[32m- should decode from BASE32[0m
[32mBase32[0m
[32m- should decode from BASE32 w/o padding[0m
[32mBase32[0m
[32m- should decode from BASE32URL[0m
[32mBase32[0m
[32m- should decode from BASE32HEX[0m
[32mBase32[0m
[32m- should decode from BASE32HEX w/o padding[0m
[32mBase32[0m
[32m- should decode from BASE32HEXURL[0m
Read from stdout: Run completed in 538 milliseconds.
Read from stdout: Total number of tests run: 31
Read from stdout: Suites: completed 5, aborted 0
Read from stdout: Tests: succeeded 31, failed 0, canceled 0, ignored 0, pending 0
Read from stdout: All tests passed.
Run completed in 538 milliseconds.
Total number of tests run: 31
Suites: completed 5, aborted 0
Tests: succeeded 31, failed 0, canceled 0, ignored 0, pending 0
All tests passed.
Passed tests:
	StreamCodecSpec
	Base64Spec
	StreamDecoderSpec
	Base32Spec
	Base16Spec
Total time: 1 s, completed 01.06.2016 09:28:07
> server-post-command-cleanup
> server-handle-next-server-request
> compile
Evaluating tasks: compile:compile
Running task... Cancel: sbt.server.ServerTaskCancellation@710552c9, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala)
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala)

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala)

Read from stdout: Compiling 1 Scala source to /Users/lpfeiler/develop/github/base64/target/scala-2.11/classes...
Compiling 1 Scala source to /Users/lpfeiler/develop/github/base64/target/scala-2.11/classes...
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Running cached compiler 7beb2124, interfacing (CompilerInterface) with Scala compiler version 2.11.7
Calling Scala compiler with arguments  (CompilerInterface):
	-bootclasspath
	/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/classes:/Users/lpfeiler/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.11.7.jar
	-classpath
	/Users/lpfeiler/develop/github/base64/target/scala-2.11/classes
Scala compilation took 1.281299111 s
New invalidations:
	Set()
Initial set of included nodes: Set()
Previously invalidated, but (transitively) depend on new invalidations:
	Set()
All newly invalidated sources after taking into account (previously) recompiled sources:Set()
Total time: 1 s, completed 01.06.2016 09:28:21
> server-post-command-cleanup
> server-handle-next-server-request
> test
Evaluating tasks: test:test
Running task... Cancel: sbt.server.ServerTaskCancellation@2d121b7a, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set()
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set()

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set()

Copy resource mappings: 
	
The de.csmath.codec.Codec$ source file has the following regular definitions changed:
	needPads.
All member reference dependencies will be considered within this context.
Files invalidated by inheriting from (external) de.csmath.codec.Codec$: Set(); now invalidating by inheritance (internally).
Getting direct dependencies of all sources transitively invalidated by inheritance.
Getting sources that directly depend on (external) de.csmath.codec.Codec$.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/test/scala/Base16Spec.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/test/scala/Base32Spec.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/test/scala/Base64Spec.scala. This dependency is not being considered for invalidation.

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set()
Removed products: Set()
External API changes: API Changes: Set(NamesChange(de.csmath.codec.Codec$,ModifiedNames(regularNames = needPads, implicitNames = )))
Modified binary dependencies: Set()
Initial directly invalidated sources: Set()

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set()

Copy resource mappings: 
	
Framework implementation 'org.scalacheck.ScalaCheckFramework' not present.
Framework implementation 'org.specs2.runner.Specs2Framework' not present.
Framework implementation 'org.specs2.runner.SpecsFramework' not present.
Framework implementation 'org.specs.runner.SpecsFramework' not present.
Framework implementation 'com.novocode.junit.JUnitFramework' not present.
Subclass fingerprints: List((org.scalatest.Suite,false,org.scalatest.tools.Framework$$anon$1@7babcf3c))
Annotation fingerprints: List((org.scalatest.WrapWith,false,org.scalatest.tools.Framework$$anon$2@8d42e3d))
Running TaskDef(Base64Spec, org.scalatest.tools.Framework$$anon$1@7babcf3c, false, [SuiteSelector])
Running TaskDef(StreamDecoderSpec, org.scalatest.tools.Framework$$anon$1@7babcf3c, false, [SuiteSelector])
Running TaskDef(StreamCodecSpec, org.scalatest.tools.Framework$$anon$1@7babcf3c, false, [SuiteSelector])
Running TaskDef(Base16Spec, org.scalatest.tools.Framework$$anon$1@7babcf3c, false, [SuiteSelector])
Read from stdout: Base16Spec:
Read from stdout: Base16
Read from stdout: - should encode to BASE16
[32mBase16Spec:[0m
[32mBase16[0m
[32m- should encode to BASE16[0m
Read from stdout: StreamDecoderSpec:
Read from stdout: StreamDecoder
Read from stdout: - should check allowed bytes
[32mStreamDecoderSpec:[0m
[32mStreamDecoder[0m
[32m- should check allowed bytes[0m
Running TaskDef(Base32Spec, org.scalatest.tools.Framework$$anon$1@7babcf3c, false, [SuiteSelector])
Read from stdout: StreamCodecSpec:
Read from stdout: StreamCodec
Read from stdout: - should create a ByteStream
Read from stdout: StreamCodec
Read from stdout: - should create a IntStream
Read from stdout: StreamCodec
Read from stdout: - should create a groupStream
Read from stdout: StreamCodec
Read from stdout: - should create a filledStream
Read from stdout: StreamCodec
Read from stdout: - should flatten a filledStream
[32mStreamCodecSpec:[0m
[32mStreamCodec[0m
[32m- should create a ByteStream[0m
[32mStreamCodec[0m
[32m- should create a IntStream[0m
[32mStreamCodec[0m
[32m- should create a groupStream[0m
[32mStreamCodec[0m
[32m- should create a filledStream[0m
[32mStreamCodec[0m
[32m- should flatten a filledStream[0m
Read from stdout: Base64Spec:
Read from stdout: Base64
Read from stdout: - should encode to BASE64
Read from stdout: Base64
Read from stdout: - should encode to BASE64FILE
Read from stdout: Base64
Read from stdout: - should encode to BASE64URL
Read from stdout: Base64
Read from stdout: - should encode to BASE64NOPAD
Read from stdout: Base64
Read from stdout: - should encode to BASE64FILENOPAD
Read from stdout: Base64
Read from stdout: - should encode to BASE64URLNOPAD
Read from stdout: Base64
Read from stdout: - should decode from BASE64
Read from stdout: Base64
Read from stdout: - should decode from BASE64 w/o padding
Read from stdout: Base64
Read from stdout: - should fail with crap
Read from stdout: Base64
Read from stdout: - should decode from BASE64FILE
Read from stdout: Base64
Read from stdout: - should decode from BASE64FILE w/o padding
Read from stdout: Base64
Read from stdout: - should decode from BASE64URL
[32mBase64Spec:[0m
[32mBase64[0m
[32m- should encode to BASE64[0m
[32mBase64[0m
[32m- should encode to BASE64FILE[0m
[32mBase64[0m
[32m- should encode to BASE64URL[0m
[32mBase64[0m
[32m- should encode to BASE64NOPAD[0m
[32mBase64[0m
[32m- should encode to BASE64FILENOPAD[0m
[32mBase64[0m
[32m- should encode to BASE64URLNOPAD[0m
[32mBase64[0m
[32m- should decode from BASE64[0m
[32mBase64[0m
[32m- should decode from BASE64 w/o padding[0m
[32mBase64[0m
[32m- should fail with crap[0m
Read from stdout: Base32Spec:
[32mBase64[0m
Read from stdout: Base32
[32m- should decode from BASE64FILE[0m
Read from stdout: - should encode to BASE32
Read from stdout: Base32
Read from stdout: - should encode to BASE32NOPAD
Read from stdout: Base32
Read from stdout: - should encode to BASE32URL
Read from stdout: Base32
[32mBase64[0m
[32m- should decode from BASE64FILE w/o padding[0m
Read from stdout: - should encode to BASE32HEX
Read from stdout: Base32
Read from stdout: - should encode to BASE32HEXNOPAD
Read from stdout: Base32
[32mBase64[0m
Read from stdout: - should encode to BASE32HEXURL
[32m- should decode from BASE64URL[0m
Read from stdout: Base32
Read from stdout: - should decode from BASE32
Read from stdout: Base32
Read from stdout: - should decode from BASE32 w/o padding
Read from stdout: Base32
Read from stdout: - should decode from BASE32URL
Read from stdout: Base32
Read from stdout: - should decode from BASE32HEX
Read from stdout: Base32
Read from stdout: - should decode from BASE32HEX w/o padding
Read from stdout: Base32
Read from stdout: - should decode from BASE32HEXURL
[32mBase32Spec:[0m
[32mBase32[0m
[32m- should encode to BASE32[0m
[32mBase32[0m
[32m- should encode to BASE32NOPAD[0m
[32mBase32[0m
[32m- should encode to BASE32URL[0m
[32mBase32[0m
[32m- should encode to BASE32HEX[0m
[32mBase32[0m
[32m- should encode to BASE32HEXNOPAD[0m
[32mBase32[0m
[32m- should encode to BASE32HEXURL[0m
[32mBase32[0m
[32m- should decode from BASE32[0m
[32mBase32[0m
[32m- should decode from BASE32 w/o padding[0m
[32mBase32[0m
[32m- should decode from BASE32URL[0m
[32mBase32[0m
[32m- should decode from BASE32HEX[0m
[32mBase32[0m
[32m- should decode from BASE32HEX w/o padding[0m
[32mBase32[0m
[32m- should decode from BASE32HEXURL[0m
Read from stdout: Run completed in 633 milliseconds.
Read from stdout: Total number of tests run: 31
Read from stdout: Suites: completed 5, aborted 0
Read from stdout: Tests: succeeded 31, failed 0, canceled 0, ignored 0, pending 0
Read from stdout: All tests passed.
Run completed in 633 milliseconds.
Total number of tests run: 31
Suites: completed 5, aborted 0
Tests: succeeded 31, failed 0, canceled 0, ignored 0, pending 0
All tests passed.
Passed tests:
	StreamCodecSpec
	Base64Spec
	StreamDecoderSpec
	Base32Spec
	Base16Spec
Total time: 1 s, completed 01.06.2016 09:28:22
> server-post-command-cleanup
> server-handle-next-server-request
> compile
Evaluating tasks: compile:compile
Running task... Cancel: sbt.server.ServerTaskCancellation@4554902, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala)
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala)

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala)

Read from stdout: Compiling 1 Scala source to /Users/lpfeiler/develop/github/base64/target/scala-2.11/classes...
Compiling 1 Scala source to /Users/lpfeiler/develop/github/base64/target/scala-2.11/classes...
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Running cached compiler 5fdac88, interfacing (CompilerInterface) with Scala compiler version 2.11.7
Calling Scala compiler with arguments  (CompilerInterface):
	-bootclasspath
	/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/classes:/Users/lpfeiler/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.11.7.jar
	-classpath
	/Users/lpfeiler/develop/github/base64/target/scala-2.11/classes
Scala compilation took 0.679410221 s
New invalidations:
	Set()
Initial set of included nodes: Set()
Previously invalidated, but (transitively) depend on new invalidations:
	Set()
All newly invalidated sources after taking into account (previously) recompiled sources:Set()
Total time: 1 s, completed 01.06.2016 09:29:31
> server-post-command-cleanup
> server-handle-next-server-request
> test
Evaluating tasks: test:test
Running task... Cancel: sbt.server.ServerTaskCancellation@514f87c1, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set()
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set()

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set()

Copy resource mappings: 
	
The de.csmath.codec.Codec$ source file has the following regular definitions changed:
	needPads.
All member reference dependencies will be considered within this context.
Files invalidated by inheriting from (external) de.csmath.codec.Codec$: Set(); now invalidating by inheritance (internally).
Getting direct dependencies of all sources transitively invalidated by inheritance.
Getting sources that directly depend on (external) de.csmath.codec.Codec$.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/test/scala/Base16Spec.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/test/scala/Base32Spec.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/test/scala/Base64Spec.scala. This dependency is not being considered for invalidation.

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set()
Removed products: Set()
External API changes: API Changes: Set(NamesChange(de.csmath.codec.Codec$,ModifiedNames(regularNames = needPads, implicitNames = )))
Modified binary dependencies: Set()
Initial directly invalidated sources: Set()

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set()

Copy resource mappings: 
	
Framework implementation 'org.scalacheck.ScalaCheckFramework' not present.
Framework implementation 'org.specs2.runner.Specs2Framework' not present.
Framework implementation 'org.specs2.runner.SpecsFramework' not present.
Framework implementation 'org.specs.runner.SpecsFramework' not present.
Framework implementation 'com.novocode.junit.JUnitFramework' not present.
Subclass fingerprints: List((org.scalatest.Suite,false,org.scalatest.tools.Framework$$anon$1@197ff1f2))
Annotation fingerprints: List((org.scalatest.WrapWith,false,org.scalatest.tools.Framework$$anon$2@1a9e1c71))
Running TaskDef(StreamDecoderSpec, org.scalatest.tools.Framework$$anon$1@197ff1f2, false, [SuiteSelector])
Running TaskDef(Base64Spec, org.scalatest.tools.Framework$$anon$1@197ff1f2, false, [SuiteSelector])
Running TaskDef(StreamCodecSpec, org.scalatest.tools.Framework$$anon$1@197ff1f2, false, [SuiteSelector])
Running TaskDef(Base32Spec, org.scalatest.tools.Framework$$anon$1@197ff1f2, false, [SuiteSelector])
Read from stdout: StreamDecoderSpec:
Read from stdout: StreamDecoder
Read from stdout: - should check allowed bytes
[32mStreamDecoderSpec:[0m
[32mStreamDecoder[0m
[32m- should check allowed bytes[0m
Running TaskDef(Base16Spec, org.scalatest.tools.Framework$$anon$1@197ff1f2, false, [SuiteSelector])
Read from stdout: StreamCodecSpec:
Read from stdout: StreamCodec
Read from stdout: - should create a ByteStream
Read from stdout: StreamCodec
Read from stdout: - should create a IntStream
Read from stdout: StreamCodec
Read from stdout: - should create a groupStream
Read from stdout: StreamCodec
Read from stdout: - should create a filledStream
Read from stdout: StreamCodec
Read from stdout: - should flatten a filledStream
[32mStreamCodecSpec:[0m
[32mStreamCodec[0m
[32m- should create a ByteStream[0m
[32mStreamCodec[0m
[32m- should create a IntStream[0m
[32mStreamCodec[0m
[32m- should create a groupStream[0m
[32mStreamCodec[0m
[32m- should create a filledStream[0m
[32mStreamCodec[0m
[32m- should flatten a filledStream[0m
Read from stdout: Base16Spec:
Read from stdout: Base16
Read from stdout: - should encode to BASE16
[32mBase16Spec:[0m
[32mBase16[0m
[32m- should encode to BASE16[0m
Read from stdout: Base64Spec:
Read from stdout: Base64
Read from stdout: - should encode to BASE64
Read from stdout: Base64
Read from stdout: - should encode to BASE64FILE
Read from stdout: Base64
Read from stdout: - should encode to BASE64URL
Read from stdout: Base64
Read from stdout: - should encode to BASE64NOPAD
Read from stdout: Base64
Read from stdout: - should encode to BASE64FILENOPAD
Read from stdout: Base64
Read from stdout: - should encode to BASE64URLNOPAD
Read from stdout: Base64
Read from stdout: - should decode from BASE64
Read from stdout: Base64
Read from stdout: - should decode from BASE64 w/o padding
Read from stdout: Base64
Read from stdout: - should fail with crap
Read from stdout: Base64
Read from stdout: - should decode from BASE64FILE
Read from stdout: Base64
Read from stdout: - should decode from BASE64FILE w/o padding
Read from stdout: Base64
Read from stdout: - should decode from BASE64URL
[32mBase64Spec:[0m
[32mBase64[0m
[32m- should encode to BASE64[0m
[32mBase64[0m
[32m- should encode to BASE64FILE[0m
[32mBase64[0m
[32m- should encode to BASE64URL[0m
[32mBase64[0m
[32m- should encode to BASE64NOPAD[0m
[32mBase64[0m
[32m- should encode to BASE64FILENOPAD[0m
[32mBase64[0m
[32m- should encode to BASE64URLNOPAD[0m
[32mBase64[0m
[32m- should decode from BASE64[0m
[32mBase64[0m
[32m- should decode from BASE64 w/o padding[0m
[32mBase64[0m
[32m- should fail with crap[0m
[32mBase64[0m
[32m- should decode from BASE64FILE[0m
[32mBase64[0m
[32m- should decode from BASE64FILE w/o padding[0m
[32mBase64[0m
[32m- should decode from BASE64URL[0m
Read from stdout: Base32Spec:
Read from stdout: Base32
Read from stdout: - should encode to BASE32
Read from stdout: Base32
Read from stdout: - should encode to BASE32NOPAD
Read from stdout: Base32
Read from stdout: - should encode to BASE32URL
Read from stdout: Base32
Read from stdout: - should encode to BASE32HEX
Read from stdout: Base32
Read from stdout: - should encode to BASE32HEXNOPAD
Read from stdout: Base32
Read from stdout: - should encode to BASE32HEXURL
Read from stdout: Base32
Read from stdout: - should decode from BASE32
Read from stdout: Base32
Read from stdout: - should decode from BASE32 w/o padding
Read from stdout: Base32
Read from stdout: - should decode from BASE32URL
Read from stdout: Base32
Read from stdout: - should decode from BASE32HEX
Read from stdout: Base32
Read from stdout: - should decode from BASE32HEX w/o padding
Read from stdout: Base32
Read from stdout: - should decode from BASE32HEXURL
[32mBase32Spec:[0m
[32mBase32[0m
[32m- should encode to BASE32[0m
[32mBase32[0m
[32m- should encode to BASE32NOPAD[0m
[32mBase32[0m
[32m- should encode to BASE32URL[0m
[32mBase32[0m
[32m- should encode to BASE32HEX[0m
[32mBase32[0m
[32m- should encode to BASE32HEXNOPAD[0m
[32mBase32[0m
[32m- should encode to BASE32HEXURL[0m
[32mBase32[0m
[32m- should decode from BASE32[0m
[32mBase32[0m
[32m- should decode from BASE32 w/o padding[0m
[32mBase32[0m
[32m- should decode from BASE32URL[0m
[32mBase32[0m
[32m- should decode from BASE32HEX[0m
[32mBase32[0m
[32m- should decode from BASE32HEX w/o padding[0m
[32mBase32[0m
[32m- should decode from BASE32HEXURL[0m
Read from stdout: Run completed in 389 milliseconds.
Read from stdout: Total number of tests run: 31
Read from stdout: Suites: completed 5, aborted 0
Read from stdout: Tests: succeeded 31, failed 0, canceled 0, ignored 0, pending 0
Read from stdout: All tests passed.
Run completed in 389 milliseconds.
Total number of tests run: 31
Suites: completed 5, aborted 0
Tests: succeeded 31, failed 0, canceled 0, ignored 0, pending 0
All tests passed.
Passed tests:
	StreamCodecSpec
	Base64Spec
	StreamDecoderSpec
	Base32Spec
	Base16Spec
Total time: 1 s, completed 01.06.2016 09:29:31
> server-post-command-cleanup
> server-handle-next-server-request
> compile
Evaluating tasks: compile:compile
Running task... Cancel: sbt.server.ServerTaskCancellation@6f3d02ac, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala)
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala)

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala)

Read from stdout: Compiling 1 Scala source to /Users/lpfeiler/develop/github/base64/target/scala-2.11/classes...
Compiling 1 Scala source to /Users/lpfeiler/develop/github/base64/target/scala-2.11/classes...
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Running cached compiler 2ca4f5a6, interfacing (CompilerInterface) with Scala compiler version 2.11.7
Calling Scala compiler with arguments  (CompilerInterface):
	-bootclasspath
	/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/classes:/Users/lpfeiler/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.11.7.jar
	-classpath
	/Users/lpfeiler/develop/github/base64/target/scala-2.11/classes
Scala compilation took 0.738174413 s
New invalidations:
	Set()
Initial set of included nodes: Set()
Previously invalidated, but (transitively) depend on new invalidations:
	Set()
All newly invalidated sources after taking into account (previously) recompiled sources:Set()
Total time: 1 s, completed 01.06.2016 09:30:31
> server-post-command-cleanup
> server-handle-next-server-request
> test
Evaluating tasks: test:test
Running task... Cancel: sbt.server.ServerTaskCancellation@67837803, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set()
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set()

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set()

Copy resource mappings: 
	
The de.csmath.codec.Codec$ source file has the following regular definitions changed:
	needPads.
All member reference dependencies will be considered within this context.
Files invalidated by inheriting from (external) de.csmath.codec.Codec$: Set(); now invalidating by inheritance (internally).
Getting direct dependencies of all sources transitively invalidated by inheritance.
Getting sources that directly depend on (external) de.csmath.codec.Codec$.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/test/scala/Base16Spec.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/test/scala/Base32Spec.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/test/scala/Base64Spec.scala. This dependency is not being considered for invalidation.

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set()
Removed products: Set()
External API changes: API Changes: Set(NamesChange(de.csmath.codec.Codec$,ModifiedNames(regularNames = needPads, implicitNames = )))
Modified binary dependencies: Set()
Initial directly invalidated sources: Set()

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set()

Copy resource mappings: 
	
Framework implementation 'org.scalacheck.ScalaCheckFramework' not present.
Framework implementation 'org.specs2.runner.Specs2Framework' not present.
Framework implementation 'org.specs2.runner.SpecsFramework' not present.
Framework implementation 'org.specs.runner.SpecsFramework' not present.
Framework implementation 'com.novocode.junit.JUnitFramework' not present.
Subclass fingerprints: List((org.scalatest.Suite,false,org.scalatest.tools.Framework$$anon$1@652634b8))
Annotation fingerprints: List((org.scalatest.WrapWith,false,org.scalatest.tools.Framework$$anon$2@56c26a0c))
Running TaskDef(Base64Spec, org.scalatest.tools.Framework$$anon$1@652634b8, false, [SuiteSelector])
Running TaskDef(Base16Spec, org.scalatest.tools.Framework$$anon$1@652634b8, false, [SuiteSelector])
Running TaskDef(Base32Spec, org.scalatest.tools.Framework$$anon$1@652634b8, false, [SuiteSelector])
Running TaskDef(StreamDecoderSpec, org.scalatest.tools.Framework$$anon$1@652634b8, false, [SuiteSelector])
Read from stdout: Base16Spec:
Read from stdout: Base16
Read from stdout: - should encode to BASE16
[32mBase16Spec:[0m
[32mBase16[0m
[32m- should encode to BASE16[0m
Read from stdout: StreamDecoderSpec:
Read from stdout: StreamDecoder
Read from stdout: - should check allowed bytes
[32mStreamDecoderSpec:[0m
[32mStreamDecoder[0m
[32m- should check allowed bytes[0m
Running TaskDef(StreamCodecSpec, org.scalatest.tools.Framework$$anon$1@652634b8, false, [SuiteSelector])
Read from stdout: StreamCodecSpec:
Read from stdout: StreamCodec
Read from stdout: - should create a ByteStream
Read from stdout: StreamCodec
Read from stdout: - should create a IntStream
Read from stdout: StreamCodec
Read from stdout: - should create a groupStream
Read from stdout: StreamCodec
Read from stdout: - should create a filledStream
Read from stdout: StreamCodec
Read from stdout: - should flatten a filledStream
[32mStreamCodecSpec:[0m
[32mStreamCodec[0m
[32m- should create a ByteStream[0m
[32mStreamCodec[0m
[32m- should create a IntStream[0m
[32mStreamCodec[0m
[32m- should create a groupStream[0m
[32mStreamCodec[0m
[32m- should create a filledStream[0m
[32mStreamCodec[0m
[32m- should flatten a filledStream[0m
Read from stdout: Base64Spec:
Read from stdout: Base64
Read from stdout: - should encode to BASE64
Read from stdout: Base64
Read from stdout: - should encode to BASE64FILE
Read from stdout: Base64
Read from stdout: - should encode to BASE64URL
Read from stdout: Base64
Read from stdout: - should encode to BASE64NOPAD
Read from stdout: Base64
Read from stdout: - should encode to BASE64FILENOPAD
Read from stdout: Base64
Read from stdout: - should encode to BASE64URLNOPAD
Read from stdout: Base64
Read from stdout: - should decode from BASE64
Read from stdout: Base64
Read from stdout: - should decode from BASE64 w/o padding
Read from stdout: Base64
Read from stdout: - should fail with crap
Read from stdout: Base64
Read from stdout: - should decode from BASE64FILE
Read from stdout: Base64
Read from stdout: - should decode from BASE64FILE w/o padding
Read from stdout: Base64
Read from stdout: - should decode from BASE64URL
Read from stdout: Base32Spec:
Read from stdout: Base32
Read from stdout: - should encode to BASE32
Read from stdout: Base32
Read from stdout: - should encode to BASE32NOPAD
Read from stdout: Base32
Read from stdout: - should encode to BASE32URL
Read from stdout: Base32
Read from stdout: - should encode to BASE32HEX
[32mBase64Spec:[0m
Read from stdout: Base32
Read from stdout: - should encode to BASE32HEXNOPAD
[32mBase64[0m
Read from stdout: Base32
[32m- should encode to BASE64[0m
Read from stdout: - should encode to BASE32HEXURL
Read from stdout: Base32
Read from stdout: - should decode from BASE32
[32mBase64[0m
Read from stdout: Base32
[32m- should encode to BASE64FILE[0m
Read from stdout: - should decode from BASE32 w/o padding
[32mBase64[0m
Read from stdout: Base32
Read from stdout: - should decode from BASE32URL
Read from stdout: Base32
Read from stdout: - should decode from BASE32HEX
Read from stdout: Base32
Read from stdout: - should decode from BASE32HEX w/o padding
Read from stdout: Base32
Read from stdout: - should decode from BASE32HEXURL
[32m- should encode to BASE64URL[0m
[32mBase32Spec:[0m
[32mBase64[0m
[32m- should encode to BASE64NOPAD[0m
[32mBase32[0m
[32m- should encode to BASE32[0m
[32mBase64[0m
[32mBase32[0m
[32m- should encode to BASE64FILENOPAD[0m
[32m- should encode to BASE32NOPAD[0m
[32mBase64[0m
[32mBase32[0m
[32m- should encode to BASE32URL[0m
[32mBase32[0m
[32m- should encode to BASE32HEX[0m
[32mBase32[0m
[32m- should encode to BASE32HEXNOPAD[0m
[32mBase32[0m
[32m- should encode to BASE32HEXURL[0m
[32mBase32[0m
[32m- should decode from BASE32[0m
[32mBase32[0m
[32m- should decode from BASE32 w/o padding[0m
[32mBase32[0m
[32m- should decode from BASE32URL[0m
[32mBase32[0m
[32m- should decode from BASE32HEX[0m
[32mBase32[0m
[32m- should decode from BASE32HEX w/o padding[0m
[32mBase32[0m
[32m- should decode from BASE32HEXURL[0m
[32m- should encode to BASE64URLNOPAD[0m
[32mBase64[0m
[32m- should decode from BASE64[0m
[32mBase64[0m
[32m- should decode from BASE64 w/o padding[0m
[32mBase64[0m
[32m- should fail with crap[0m
[32mBase64[0m
[32m- should decode from BASE64FILE[0m
[32mBase64[0m
[32m- should decode from BASE64FILE w/o padding[0m
[32mBase64[0m
[32m- should decode from BASE64URL[0m
Read from stdout: Run completed in 670 milliseconds.
Read from stdout: Total number of tests run: 31
Read from stdout: Suites: completed 5, aborted 0
Read from stdout: Tests: succeeded 31, failed 0, canceled 0, ignored 0, pending 0
Read from stdout: All tests passed.
Run completed in 670 milliseconds.
Total number of tests run: 31
Suites: completed 5, aborted 0
Tests: succeeded 31, failed 0, canceled 0, ignored 0, pending 0
All tests passed.
Passed tests:
	StreamCodecSpec
	Base64Spec
	StreamDecoderSpec
	Base32Spec
	Base16Spec
Total time: 2 s, completed 01.06.2016 09:30:33
> server-post-command-cleanup
> server-handle-next-server-request
> compile
Evaluating tasks: compile:compile
Running task... Cancel: sbt.server.ServerTaskCancellation@2f9a7f01, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala)
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala)

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala)

Read from stdout: Compiling 1 Scala source to /Users/lpfeiler/develop/github/base64/target/scala-2.11/classes...
Compiling 1 Scala source to /Users/lpfeiler/develop/github/base64/target/scala-2.11/classes...
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Running cached compiler eb5c67e, interfacing (CompilerInterface) with Scala compiler version 2.11.7
Calling Scala compiler with arguments  (CompilerInterface):
	-bootclasspath
	/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/classes:/Users/lpfeiler/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.11.7.jar
	-classpath
	/Users/lpfeiler/develop/github/base64/target/scala-2.11/classes
Read from stdout: /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala:30: ')' expected but ']' found.
/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala:30: ')' expected but ']' found.
Read from stdout: def countedGroups(s: Stream[Seq[Byte]]]): Stream[(Int,Seq[Byte])] =
    def countedGroups(s: Stream[Seq[Byte]]]): Stream[(Int,Seq[Byte])] =
Read from stdout: ^
                                          ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala:37: '=' expected but '.' found.
/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala:37: '=' expected but '.' found.
Read from stdout: decode(data,enc) map ( s => (s map (_.toChar)).mkString )
        decode(data,enc) map ( s => (s map (_.toChar)).mkString )
Read from stdout: ^
                                                      ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala:113: illegal start of simple expression
/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala:113: illegal start of simple expression
Read from stdout: }
}
Read from stdout: ^
^
Read from stdout: three errors found
three errors found
Compilation failed (CompilerInterface)
Read from stdout: (compile:compileIncremental) Compilation failed
(compile:compileIncremental) Compilation failed
Total time: 0 s, completed 01.06.2016 09:38:14
> server-post-command-error-handler
> server-post-command-cleanup
> server-handle-next-server-request
> compile
Evaluating tasks: compile:compile
Running task... Cancel: sbt.server.ServerTaskCancellation@a29943b, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala)
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala)

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala)

Read from stdout: Compiling 1 Scala source to /Users/lpfeiler/develop/github/base64/target/scala-2.11/classes...
Compiling 1 Scala source to /Users/lpfeiler/develop/github/base64/target/scala-2.11/classes...
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Running cached compiler 6ee99149, interfacing (CompilerInterface) with Scala compiler version 2.11.7
Calling Scala compiler with arguments  (CompilerInterface):
	-bootclasspath
	/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/classes:/Users/lpfeiler/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.11.7.jar
	-classpath
	/Users/lpfeiler/develop/github/base64/target/scala-2.11/classes
Scala compilation took 0.857895896 s
Invalidating /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala...
Invalidating (transitively) by inheritance from /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala...
Initial set of included nodes: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala)
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Decoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Decoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala
Invalidated by transitive inheritance dependency: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Decoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala)
The /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala source file has the following regular definitions changed:
	countedGroups.
All member reference dependencies will be considered within this context.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseN.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Decoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala. This dependency is not being considered for invalidation.
New invalidations:
	Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Decoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala)
Initial set of included nodes: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Decoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala)
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Decoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala
Previously invalidated, but (transitively) depend on new invalidations:
	Set()
All newly invalidated sources after taking into account (previously) recompiled sources:Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Decoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala)
Read from stdout: Compiling 7 Scala sources to /Users/lpfeiler/develop/github/base64/target/scala-2.11/classes...
Compiling 7 Scala sources to /Users/lpfeiler/develop/github/base64/target/scala-2.11/classes...
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Running cached compiler 2778a4b6, interfacing (CompilerInterface) with Scala compiler version 2.11.7
Calling Scala compiler with arguments  (CompilerInterface):
	-bootclasspath
	/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/classes:/Users/lpfeiler/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.11.7.jar
	-classpath
	/Users/lpfeiler/develop/github/base64/target/scala-2.11/classes
Scala compilation took 0.992891187 s
Invalidating /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Decoder.scala...
Invalidating (transitively) by inheritance from /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Decoder.scala...
Initial set of included nodes: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Decoder.scala)
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Decoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala
Invalidated by transitive inheritance dependency: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Decoder.scala)
The /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Decoder.scala source file has the following regular definitions changed:
	countedGroups.
All member reference dependencies will be considered within this context.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
Invalidating /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala...
Invalidating (transitively) by inheritance from /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala...
Initial set of included nodes: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala)
Invalidated by transitive inheritance dependency: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala)
The /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala source file has the following regular definitions changed:
	countedGroups.
All member reference dependencies will be considered within this context.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
Invalidating /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala...
Invalidating (transitively) by inheritance from /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala...
Initial set of included nodes: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala)
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala
Invalidated by transitive inheritance dependency: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala)
The /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala source file has the following regular definitions changed:
	countedGroups.
All member reference dependencies will be considered within this context.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
Invalidating /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala...
Invalidating (transitively) by inheritance from /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala...
Initial set of included nodes: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala)
Invalidated by transitive inheritance dependency: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala)
The /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala source file has the following regular definitions changed:
	countedGroups.
All member reference dependencies will be considered within this context.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
Invalidating /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala...
Invalidating (transitively) by inheritance from /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala...
Initial set of included nodes: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala)
Invalidated by transitive inheritance dependency: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala)
The /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala source file has the following regular definitions changed:
	countedGroups.
All member reference dependencies will be considered within this context.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
Invalidating /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala...
Invalidating (transitively) by inheritance from /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala...
Initial set of included nodes: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala)
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala
Invalidated by transitive inheritance dependency: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala)
The /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala source file has the following regular definitions changed:
	countedGroups.
All member reference dependencies will be considered within this context.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
Invalidating /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala...
Invalidating (transitively) by inheritance from /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala...
Initial set of included nodes: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala)
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala
Invalidated by transitive inheritance dependency: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala)
The /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala source file has the following regular definitions changed:
	countedGroups.
All member reference dependencies will be considered within this context.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
New invalidations:
	Set()
Initial set of included nodes: Set()
Previously invalidated, but (transitively) depend on new invalidations:
	Set()
All newly invalidated sources after taking into account (previously) recompiled sources:Set()
Total time: 2 s, completed 01.06.2016 09:38:50
> server-post-command-cleanup
> server-handle-next-server-request
> test
Evaluating tasks: test:test
Running task... Cancel: sbt.server.ServerTaskCancellation@6d51d869, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set()
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set()

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set()

Copy resource mappings: 
	
The de.csmath.codec.Codec$ source file has the following regular definitions changed:
	needPads.
All member reference dependencies will be considered within this context.
Files invalidated by inheriting from (external) de.csmath.codec.Codec$: Set(); now invalidating by inheritance (internally).
Getting direct dependencies of all sources transitively invalidated by inheritance.
Getting sources that directly depend on (external) de.csmath.codec.Codec$.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/test/scala/Base16Spec.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/test/scala/Base32Spec.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/test/scala/Base64Spec.scala. This dependency is not being considered for invalidation.

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set()
Removed products: Set()
External API changes: API Changes: Set(NamesChange(de.csmath.codec.Codec$,ModifiedNames(regularNames = needPads, implicitNames = )))
Modified binary dependencies: Set()
Initial directly invalidated sources: Set()

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set()

Copy resource mappings: 
	
Framework implementation 'org.scalacheck.ScalaCheckFramework' not present.
Framework implementation 'org.specs2.runner.Specs2Framework' not present.
Framework implementation 'org.specs2.runner.SpecsFramework' not present.
Framework implementation 'org.specs.runner.SpecsFramework' not present.
Framework implementation 'com.novocode.junit.JUnitFramework' not present.
Subclass fingerprints: List((org.scalatest.Suite,false,org.scalatest.tools.Framework$$anon$1@2b6aca8d))
Annotation fingerprints: List((org.scalatest.WrapWith,false,org.scalatest.tools.Framework$$anon$2@7b453245))
Running TaskDef(StreamDecoderSpec, org.scalatest.tools.Framework$$anon$1@2b6aca8d, false, [SuiteSelector])
Running TaskDef(Base32Spec, org.scalatest.tools.Framework$$anon$1@2b6aca8d, false, [SuiteSelector])
Running TaskDef(Base64Spec, org.scalatest.tools.Framework$$anon$1@2b6aca8d, false, [SuiteSelector])
Running TaskDef(StreamCodecSpec, org.scalatest.tools.Framework$$anon$1@2b6aca8d, false, [SuiteSelector])
Read from stdout: StreamDecoderSpec:
Read from stdout: StreamDecoder
Read from stdout: - should check allowed bytes
[32mStreamDecoderSpec:[0m
[32mStreamDecoder[0m
[32m- should check allowed bytes[0m
Running TaskDef(Base16Spec, org.scalatest.tools.Framework$$anon$1@2b6aca8d, false, [SuiteSelector])
Read from stdout: Base16Spec:
Read from stdout: Base16
Read from stdout: - should encode to BASE16
[32mBase16Spec:[0m
[32mBase16[0m
[32m- should encode to BASE16[0m
Read from stdout: StreamCodecSpec:
Read from stdout: StreamCodec
Read from stdout: - should create a ByteStream
Read from stdout: StreamCodec
Read from stdout: - should create a IntStream
Read from stdout: StreamCodec
Read from stdout: - should create a groupStream
Read from stdout: StreamCodec
Read from stdout: - should create a filledStream
Read from stdout: StreamCodec
Read from stdout: - should flatten a filledStream
[32mStreamCodecSpec:[0m
[32mStreamCodec[0m
[32m- should create a ByteStream[0m
[32mStreamCodec[0m
[32m- should create a IntStream[0m
[32mStreamCodec[0m
[32m- should create a groupStream[0m
[32mStreamCodec[0m
[32m- should create a filledStream[0m
[32mStreamCodec[0m
[32m- should flatten a filledStream[0m
Read from stdout: Base32Spec:
Read from stdout: Base32
Read from stdout: - should encode to BASE32
Read from stdout: Base32
Read from stdout: - should encode to BASE32NOPAD
Read from stdout: Base32
Read from stdout: - should encode to BASE32URL
Read from stdout: Base32
Read from stdout: - should encode to BASE32HEX
Read from stdout: Base32
Read from stdout: - should encode to BASE32HEXNOPAD
Read from stdout: Base32
Read from stdout: - should encode to BASE32HEXURL
Read from stdout: Base32
Read from stdout: - should decode from BASE32
Read from stdout: Base32
Read from stdout: - should decode from BASE32 w/o padding
Read from stdout: Base32
Read from stdout: - should decode from BASE32URL
Read from stdout: Base32
Read from stdout: - should decode from BASE32HEX
Read from stdout: Base32
Read from stdout: - should decode from BASE32HEX w/o padding
Read from stdout: Base32
Read from stdout: - should decode from BASE32HEXURL
Read from stdout: Base64Spec:
Read from stdout: Base64
Read from stdout: - should encode to BASE64
Read from stdout: Base64
Read from stdout: - should encode to BASE64FILE
Read from stdout: Base64
Read from stdout: - should encode to BASE64URL
Read from stdout: Base64
Read from stdout: - should encode to BASE64NOPAD
Read from stdout: Base64
Read from stdout: - should encode to BASE64FILENOPAD
Read from stdout: Base64
[32mBase32Spec:[0m
Read from stdout: - should encode to BASE64URLNOPAD
[32mBase32[0m
Read from stdout: Base64
Read from stdout: - should decode from BASE64
[32m- should encode to BASE32[0m
Read from stdout: Base64
[32mBase32[0m
Read from stdout: - should decode from BASE64 w/o padding
[32m- should encode to BASE32NOPAD[0m
Read from stdout: Base64
[32mBase32[0m
Read from stdout: - should fail with crap
Read from stdout: Base64
Read from stdout: - should decode from BASE64FILE
Read from stdout: Base64
Read from stdout: - should decode from BASE64FILE w/o padding
Read from stdout: Base64
Read from stdout: - should decode from BASE64URL
[32m- should encode to BASE32URL[0m
[32mBase32[0m
[32m- should encode to BASE32HEX[0m
[32mBase32[0m
[32mBase64Spec:[0m
[32mBase64[0m
[32m- should encode to BASE64[0m
[32mBase64[0m
[32m- should encode to BASE64FILE[0m
[32mBase64[0m
[32m- should encode to BASE32HEXNOPAD[0m
[32m- should encode to BASE64URL[0m
[32mBase64[0m
[32mBase32[0m
[32m- should encode to BASE64NOPAD[0m
[32m- should encode to BASE32HEXURL[0m
[32mBase32[0m
[32mBase64[0m
[32m- should encode to BASE64FILENOPAD[0m
[32m- should decode from BASE32[0m
[32mBase64[0m
[32m- should encode to BASE64URLNOPAD[0m
[32mBase32[0m
[32mBase64[0m
[32m- should decode from BASE64[0m
[32mBase64[0m
[32m- should decode from BASE64 w/o padding[0m
[32mBase64[0m
[32m- should fail with crap[0m
[32mBase64[0m
[32m- should decode from BASE64FILE[0m
[32mBase64[0m
[32m- should decode from BASE64FILE w/o padding[0m
[32mBase64[0m
[32m- should decode from BASE64URL[0m
[32m- should decode from BASE32 w/o padding[0m
[32mBase32[0m
[32m- should decode from BASE32URL[0m
[32mBase32[0m
[32m- should decode from BASE32HEX[0m
[32mBase32[0m
[32m- should decode from BASE32HEX w/o padding[0m
[32mBase32[0m
[32m- should decode from BASE32HEXURL[0m
Read from stdout: Run completed in 522 milliseconds.
Read from stdout: Total number of tests run: 31
Read from stdout: Suites: completed 5, aborted 0
Read from stdout: Tests: succeeded 31, failed 0, canceled 0, ignored 0, pending 0
Read from stdout: All tests passed.
Run completed in 522 milliseconds.
Total number of tests run: 31
Suites: completed 5, aborted 0
Tests: succeeded 31, failed 0, canceled 0, ignored 0, pending 0
All tests passed.
Passed tests:
	StreamCodecSpec
	Base64Spec
	StreamDecoderSpec
	Base32Spec
	Base16Spec
Total time: 1 s, completed 01.06.2016 09:38:51
> server-post-command-cleanup
> server-handle-next-server-request
> compile
Evaluating tasks: compile:compile
Running task... Cancel: sbt.server.ServerTaskCancellation@fcdaff1, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala)
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala)

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala)

Read from stdout: Compiling 1 Scala source to /Users/lpfeiler/develop/github/base64/target/scala-2.11/classes...
Compiling 1 Scala source to /Users/lpfeiler/develop/github/base64/target/scala-2.11/classes...
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Running cached compiler 116bdeea, interfacing (CompilerInterface) with Scala compiler version 2.11.7
Calling Scala compiler with arguments  (CompilerInterface):
	-bootclasspath
	/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/classes:/Users/lpfeiler/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.11.7.jar
	-classpath
	/Users/lpfeiler/develop/github/base64/target/scala-2.11/classes
Scala compilation took 0.697671079 s
Invalidating /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala...
Invalidating (transitively) by inheritance from /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala...
Initial set of included nodes: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala)
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Decoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Decoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala
Invalidated by transitive inheritance dependency: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Decoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala)
The /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala source file has the following regular definitions changed:
	countedGroups.
All member reference dependencies will be considered within this context.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseN.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Decoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala. This dependency is not being considered for invalidation.
New invalidations:
	Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Decoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala)
Initial set of included nodes: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Decoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala)
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Decoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala
Previously invalidated, but (transitively) depend on new invalidations:
	Set()
All newly invalidated sources after taking into account (previously) recompiled sources:Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Decoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala)
Read from stdout: Compiling 7 Scala sources to /Users/lpfeiler/develop/github/base64/target/scala-2.11/classes...
Compiling 7 Scala sources to /Users/lpfeiler/develop/github/base64/target/scala-2.11/classes...
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Running cached compiler 57931f00, interfacing (CompilerInterface) with Scala compiler version 2.11.7
Calling Scala compiler with arguments  (CompilerInterface):
	-bootclasspath
	/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/classes:/Users/lpfeiler/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.11.7.jar
	-classpath
	/Users/lpfeiler/develop/github/base64/target/scala-2.11/classes
Scala compilation took 0.820014251 s
Invalidating /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Decoder.scala...
Invalidating (transitively) by inheritance from /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Decoder.scala...
Initial set of included nodes: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Decoder.scala)
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Decoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala
Invalidated by transitive inheritance dependency: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Decoder.scala)
The /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Decoder.scala source file has the following regular definitions changed:
	countedGroups.
All member reference dependencies will be considered within this context.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
Invalidating /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala...
Invalidating (transitively) by inheritance from /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala...
Initial set of included nodes: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala)
Invalidated by transitive inheritance dependency: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala)
The /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala source file has the following regular definitions changed:
	countedGroups.
All member reference dependencies will be considered within this context.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
Invalidating /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala...
Invalidating (transitively) by inheritance from /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala...
Initial set of included nodes: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala)
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala
Invalidated by transitive inheritance dependency: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala)
The /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala source file has the following regular definitions changed:
	countedGroups.
All member reference dependencies will be considered within this context.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
Invalidating /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala...
Invalidating (transitively) by inheritance from /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala...
Initial set of included nodes: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala)
Invalidated by transitive inheritance dependency: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala)
The /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala source file has the following regular definitions changed:
	countedGroups.
All member reference dependencies will be considered within this context.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
Invalidating /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala...
Invalidating (transitively) by inheritance from /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala...
Initial set of included nodes: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala)
Invalidated by transitive inheritance dependency: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala)
The /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala source file has the following regular definitions changed:
	countedGroups.
All member reference dependencies will be considered within this context.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
Invalidating /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala...
Invalidating (transitively) by inheritance from /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala...
Initial set of included nodes: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala)
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala
Invalidated by transitive inheritance dependency: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala)
The /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala source file has the following regular definitions changed:
	countedGroups.
All member reference dependencies will be considered within this context.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
Invalidating /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala...
Invalidating (transitively) by inheritance from /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala...
Initial set of included nodes: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala)
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala
Invalidated by transitive inheritance dependency: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala)
The /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala source file has the following regular definitions changed:
	countedGroups.
All member reference dependencies will be considered within this context.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
New invalidations:
	Set()
Initial set of included nodes: Set()
Previously invalidated, but (transitively) depend on new invalidations:
	Set()
All newly invalidated sources after taking into account (previously) recompiled sources:Set()
Total time: 2 s, completed 01.06.2016 09:39:37
> server-post-command-cleanup
> server-handle-next-server-request
> test
Evaluating tasks: test:test
Running task... Cancel: sbt.server.ServerTaskCancellation@361d4eab, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set()
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set()

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set()

Copy resource mappings: 
	
The de.csmath.codec.Codec$ source file has the following regular definitions changed:
	needPads.
All member reference dependencies will be considered within this context.
Files invalidated by inheriting from (external) de.csmath.codec.Codec$: Set(); now invalidating by inheritance (internally).
Getting direct dependencies of all sources transitively invalidated by inheritance.
Getting sources that directly depend on (external) de.csmath.codec.Codec$.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/test/scala/Base16Spec.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/test/scala/Base32Spec.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/test/scala/Base64Spec.scala. This dependency is not being considered for invalidation.

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set()
Removed products: Set()
External API changes: API Changes: Set(NamesChange(de.csmath.codec.Codec$,ModifiedNames(regularNames = needPads, implicitNames = )))
Modified binary dependencies: Set()
Initial directly invalidated sources: Set()

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set()

Copy resource mappings: 
	
Framework implementation 'org.scalacheck.ScalaCheckFramework' not present.
Framework implementation 'org.specs2.runner.Specs2Framework' not present.
Framework implementation 'org.specs2.runner.SpecsFramework' not present.
Framework implementation 'org.specs.runner.SpecsFramework' not present.
Framework implementation 'com.novocode.junit.JUnitFramework' not present.
Subclass fingerprints: List((org.scalatest.Suite,false,org.scalatest.tools.Framework$$anon$1@6fff1b6))
Annotation fingerprints: List((org.scalatest.WrapWith,false,org.scalatest.tools.Framework$$anon$2@51cbb2ef))
Running TaskDef(StreamDecoderSpec, org.scalatest.tools.Framework$$anon$1@6fff1b6, false, [SuiteSelector])
Running TaskDef(Base64Spec, org.scalatest.tools.Framework$$anon$1@6fff1b6, false, [SuiteSelector])
Running TaskDef(StreamCodecSpec, org.scalatest.tools.Framework$$anon$1@6fff1b6, false, [SuiteSelector])
Running TaskDef(Base16Spec, org.scalatest.tools.Framework$$anon$1@6fff1b6, false, [SuiteSelector])
Read from stdout: Base16Spec:
Read from stdout: Base16
Read from stdout: - should encode to BASE16
Read from stdout: StreamDecoderSpec:
Read from stdout: StreamDecoder
Read from stdout: - should check allowed bytes
[32mStreamDecoderSpec:[0m
[32mStreamDecoder[0m
[32m- should check allowed bytes[0m
Running TaskDef(Base32Spec, org.scalatest.tools.Framework$$anon$1@6fff1b6, false, [SuiteSelector])
[32mBase16Spec:[0m
Read from stdout: StreamCodecSpec:
Read from stdout: StreamCodec
Read from stdout: - should create a ByteStream
Read from stdout: StreamCodec
Read from stdout: - should create a IntStream
Read from stdout: StreamCodec
Read from stdout: - should create a groupStream
[32mBase16[0m
Read from stdout: StreamCodec
Read from stdout: - should create a filledStream
Read from stdout: StreamCodec
Read from stdout: - should flatten a filledStream
[32m- should encode to BASE16[0m
[32mStreamCodecSpec:[0m
[32mStreamCodec[0m
[32m- should create a ByteStream[0m
[32mStreamCodec[0m
[32m- should create a IntStream[0m
[32mStreamCodec[0m
[32m- should create a groupStream[0m
[32mStreamCodec[0m
[32m- should create a filledStream[0m
[32mStreamCodec[0m
[32m- should flatten a filledStream[0m
Read from stdout: Base64Spec:
Read from stdout: Base64
Read from stdout: - should encode to BASE64
Read from stdout: Base64
Read from stdout: - should encode to BASE64FILE
Read from stdout: Base64
Read from stdout: - should encode to BASE64URL
Read from stdout: Base64
Read from stdout: - should encode to BASE64NOPAD
Read from stdout: Base64
Read from stdout: - should encode to BASE64FILENOPAD
Read from stdout: Base64
Read from stdout: - should encode to BASE64URLNOPAD
Read from stdout: Base64
Read from stdout: - should decode from BASE64
Read from stdout: Base64
Read from stdout: - should decode from BASE64 w/o padding
Read from stdout: Base64
Read from stdout: - should fail with crap
Read from stdout: Base64
Read from stdout: - should decode from BASE64FILE
Read from stdout: Base64
Read from stdout: - should decode from BASE64FILE w/o padding
Read from stdout: Base64
Read from stdout: - should decode from BASE64URL
[32mBase64Spec:[0m
[32mBase64[0m
[32m- should encode to BASE64[0m
[32mBase64[0m
[32m- should encode to BASE64FILE[0m
[32mBase64[0m
[32m- should encode to BASE64URL[0m
[32mBase64[0m
[32m- should encode to BASE64NOPAD[0m
[32mBase64[0m
[32m- should encode to BASE64FILENOPAD[0m
[32mBase64[0m
[32m- should encode to BASE64URLNOPAD[0m
[32mBase64[0m
[32m- should decode from BASE64[0m
[32mBase64[0m
[32m- should decode from BASE64 w/o padding[0m
[32mBase64[0m
[32m- should fail with crap[0m
[32mBase64[0m
[32m- should decode from BASE64FILE[0m
[32mBase64[0m
[32m- should decode from BASE64FILE w/o padding[0m
[32mBase64[0m
[32m- should decode from BASE64URL[0m
Read from stdout: Base32Spec:
Read from stdout: Base32
Read from stdout: - should encode to BASE32
Read from stdout: Base32
Read from stdout: - should encode to BASE32NOPAD
Read from stdout: Base32
Read from stdout: - should encode to BASE32URL
Read from stdout: Base32
Read from stdout: - should encode to BASE32HEX
Read from stdout: Base32
Read from stdout: - should encode to BASE32HEXNOPAD
Read from stdout: Base32
Read from stdout: - should encode to BASE32HEXURL
Read from stdout: Base32
Read from stdout: - should decode from BASE32
Read from stdout: Base32
Read from stdout: - should decode from BASE32 w/o padding
Read from stdout: Base32
Read from stdout: - should decode from BASE32URL
Read from stdout: Base32
Read from stdout: - should decode from BASE32HEX
Read from stdout: Base32
Read from stdout: - should decode from BASE32HEX w/o padding
Read from stdout: Base32
Read from stdout: - should decode from BASE32HEXURL
[32mBase32Spec:[0m
[32mBase32[0m
[32m- should encode to BASE32[0m
[32mBase32[0m
[32m- should encode to BASE32NOPAD[0m
[32mBase32[0m
[32m- should encode to BASE32URL[0m
[32mBase32[0m
[32m- should encode to BASE32HEX[0m
[32mBase32[0m
[32m- should encode to BASE32HEXNOPAD[0m
[32mBase32[0m
[32m- should encode to BASE32HEXURL[0m
[32mBase32[0m
[32m- should decode from BASE32[0m
[32mBase32[0m
[32m- should decode from BASE32 w/o padding[0m
[32mBase32[0m
[32m- should decode from BASE32URL[0m
[32mBase32[0m
[32m- should decode from BASE32HEX[0m
[32mBase32[0m
[32m- should decode from BASE32HEX w/o padding[0m
[32mBase32[0m
[32m- should decode from BASE32HEXURL[0m
Read from stdout: Run completed in 473 milliseconds.
Read from stdout: Total number of tests run: 31
Read from stdout: Suites: completed 5, aborted 0
Read from stdout: Tests: succeeded 31, failed 0, canceled 0, ignored 0, pending 0
Read from stdout: All tests passed.
Run completed in 473 milliseconds.
Total number of tests run: 31
Suites: completed 5, aborted 0
Tests: succeeded 31, failed 0, canceled 0, ignored 0, pending 0
All tests passed.
Passed tests:
	StreamCodecSpec
	Base64Spec
	StreamDecoderSpec
	Base32Spec
	Base16Spec
Total time: 1 s, completed 01.06.2016 09:39:38
> server-post-command-cleanup
> server-handle-next-server-request
> compile
Evaluating tasks: compile:compile
Running task... Cancel: sbt.server.ServerTaskCancellation@76fcfc7f, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamEncoder.scala)
	modified: Set()
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamEncoder.scala)

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamEncoder.scala)

Read from stdout: Compiling 1 Scala source to /Users/lpfeiler/develop/github/base64/target/scala-2.11/classes...
Compiling 1 Scala source to /Users/lpfeiler/develop/github/base64/target/scala-2.11/classes...
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Running cached compiler 3e8994b6, interfacing (CompilerInterface) with Scala compiler version 2.11.7
Calling Scala compiler with arguments  (CompilerInterface):
	-bootclasspath
	/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/classes:/Users/lpfeiler/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.11.7.jar
	-classpath
	/Users/lpfeiler/develop/github/base64/target/scala-2.11/classes
Scala compilation took 0.163578508 s
Invalidating /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamEncoder.scala...
Invalidating (transitively) by inheritance from /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamEncoder.scala...
Initial set of included nodes: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamEncoder.scala)
Invalidated by transitive inheritance dependency: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamEncoder.scala)
The /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamEncoder.scala source file has the following regular definitions changed:
	.
All member reference dependencies will be considered within this context.
New invalidations:
	Set()
Initial set of included nodes: Set()
Previously invalidated, but (transitively) depend on new invalidations:
	Set()
All newly invalidated sources after taking into account (previously) recompiled sources:Set()
Total time: 0 s, completed 01.06.2016 09:39:56
> server-post-command-cleanup
> server-handle-next-server-request
> test
Evaluating tasks: test:test
Running task... Cancel: sbt.server.ServerTaskCancellation@30671987, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set()
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set()

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set()

Copy resource mappings: 
	
The de.csmath.codec.Codec$ source file has the following regular definitions changed:
	needPads.
All member reference dependencies will be considered within this context.
Files invalidated by inheriting from (external) de.csmath.codec.Codec$: Set(); now invalidating by inheritance (internally).
Getting direct dependencies of all sources transitively invalidated by inheritance.
Getting sources that directly depend on (external) de.csmath.codec.Codec$.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/test/scala/Base16Spec.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/test/scala/Base32Spec.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/test/scala/Base64Spec.scala. This dependency is not being considered for invalidation.

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set()
Removed products: Set()
External API changes: API Changes: Set(NamesChange(de.csmath.codec.Codec$,ModifiedNames(regularNames = needPads, implicitNames = )))
Modified binary dependencies: Set()
Initial directly invalidated sources: Set()

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set()

Copy resource mappings: 
	
Framework implementation 'org.scalacheck.ScalaCheckFramework' not present.
Framework implementation 'org.specs2.runner.Specs2Framework' not present.
Framework implementation 'org.specs2.runner.SpecsFramework' not present.
Framework implementation 'org.specs.runner.SpecsFramework' not present.
Framework implementation 'com.novocode.junit.JUnitFramework' not present.
Subclass fingerprints: List((org.scalatest.Suite,false,org.scalatest.tools.Framework$$anon$1@12584e8a))
Annotation fingerprints: List((org.scalatest.WrapWith,false,org.scalatest.tools.Framework$$anon$2@4b5e9e1a))
Running TaskDef(Base64Spec, org.scalatest.tools.Framework$$anon$1@12584e8a, false, [SuiteSelector])
Running TaskDef(Base16Spec, org.scalatest.tools.Framework$$anon$1@12584e8a, false, [SuiteSelector])
Running TaskDef(StreamCodecSpec, org.scalatest.tools.Framework$$anon$1@12584e8a, false, [SuiteSelector])
Running TaskDef(Base32Spec, org.scalatest.tools.Framework$$anon$1@12584e8a, false, [SuiteSelector])
Read from stdout: Base16Spec:
Read from stdout: Base16
Read from stdout: - should encode to BASE16
[32mBase16Spec:[0m
[32mBase16[0m
[32m- should encode to BASE16[0m
Running TaskDef(StreamDecoderSpec, org.scalatest.tools.Framework$$anon$1@12584e8a, false, [SuiteSelector])
Read from stdout: StreamCodecSpec:
Read from stdout: StreamCodec
Read from stdout: - should create a ByteStream
Read from stdout: StreamCodec
Read from stdout: - should create a IntStream
Read from stdout: StreamCodec
Read from stdout: - should create a groupStream
Read from stdout: StreamCodec
Read from stdout: - should create a filledStream
Read from stdout: StreamCodec
Read from stdout: - should flatten a filledStream
[32mStreamCodecSpec:[0m
[32mStreamCodec[0m
[32m- should create a ByteStream[0m
[32mStreamCodec[0m
[32m- should create a IntStream[0m
[32mStreamCodec[0m
[32m- should create a groupStream[0m
[32mStreamCodec[0m
[32m- should create a filledStream[0m
[32mStreamCodec[0m
[32m- should flatten a filledStream[0m
Read from stdout: StreamDecoderSpec:
Read from stdout: StreamDecoder
Read from stdout: - should check allowed bytes
[32mStreamDecoderSpec:[0m
[32mStreamDecoder[0m
[32m- should check allowed bytes[0m
Read from stdout: Base32Spec:
Read from stdout: Base32
Read from stdout: - should encode to BASE32
Read from stdout: Base32
Read from stdout: - should encode to BASE32NOPAD
Read from stdout: Base32
Read from stdout: - should encode to BASE32URL
Read from stdout: Base32
Read from stdout: - should encode to BASE32HEX
Read from stdout: Base32
Read from stdout: - should encode to BASE32HEXNOPAD
Read from stdout: Base32
Read from stdout: - should encode to BASE32HEXURL
Read from stdout: Base32
Read from stdout: - should decode from BASE32
Read from stdout: Base32
Read from stdout: - should decode from BASE32 w/o padding
Read from stdout: Base32
Read from stdout: - should decode from BASE32URL
Read from stdout: Base32
Read from stdout: - should decode from BASE32HEX
Read from stdout: Base32
Read from stdout: - should decode from BASE32HEX w/o padding
Read from stdout: Base32
Read from stdout: - should decode from BASE32HEXURL
[32mBase32Spec:[0m
[32mBase32[0m
[32m- should encode to BASE32[0m
[32mBase32[0m
[32m- should encode to BASE32NOPAD[0m
[32mBase32[0m
[32m- should encode to BASE32URL[0m
[32mBase32[0m
[32m- should encode to BASE32HEX[0m
[32mBase32[0m
[32m- should encode to BASE32HEXNOPAD[0m
[32mBase32[0m
[32m- should encode to BASE32HEXURL[0m
[32mBase32[0m
[32m- should decode from BASE32[0m
[32mBase32[0m
[32m- should decode from BASE32 w/o padding[0m
[32mBase32[0m
[32m- should decode from BASE32URL[0m
[32mBase32[0m
[32m- should decode from BASE32HEX[0m
[32mBase32[0m
[32m- should decode from BASE32HEX w/o padding[0m
[32mBase32[0m
[32m- should decode from BASE32HEXURL[0m
Read from stdout: Base64Spec:
Read from stdout: Base64
Read from stdout: - should encode to BASE64
Read from stdout: Base64
Read from stdout: - should encode to BASE64FILE
Read from stdout: Base64
Read from stdout: - should encode to BASE64URL
Read from stdout: Base64
Read from stdout: - should encode to BASE64NOPAD
Read from stdout: Base64
Read from stdout: - should encode to BASE64FILENOPAD
Read from stdout: Base64
Read from stdout: - should encode to BASE64URLNOPAD
Read from stdout: Base64
Read from stdout: - should decode from BASE64
Read from stdout: Base64
Read from stdout: - should decode from BASE64 w/o padding
Read from stdout: Base64
Read from stdout: - should fail with crap
Read from stdout: Base64
Read from stdout: - should decode from BASE64FILE
Read from stdout: Base64
Read from stdout: - should decode from BASE64FILE w/o padding
Read from stdout: Base64
Read from stdout: - should decode from BASE64URL
[32mBase64Spec:[0m
[32mBase64[0m
[32m- should encode to BASE64[0m
[32mBase64[0m
[32m- should encode to BASE64FILE[0m
[32mBase64[0m
[32m- should encode to BASE64URL[0m
[32mBase64[0m
[32m- should encode to BASE64NOPAD[0m
[32mBase64[0m
[32m- should encode to BASE64FILENOPAD[0m
[32mBase64[0m
[32m- should encode to BASE64URLNOPAD[0m
[32mBase64[0m
[32m- should decode from BASE64[0m
[32mBase64[0m
[32m- should decode from BASE64 w/o padding[0m
[32mBase64[0m
[32m- should fail with crap[0m
[32mBase64[0m
[32m- should decode from BASE64FILE[0m
[32mBase64[0m
[32m- should decode from BASE64FILE w/o padding[0m
[32mBase64[0m
[32m- should decode from BASE64URL[0m
Read from stdout: Run completed in 350 milliseconds.
Read from stdout: Total number of tests run: 31
Read from stdout: Suites: completed 5, aborted 0
Read from stdout: Tests: succeeded 31, failed 0, canceled 0, ignored 0, pending 0
Read from stdout: All tests passed.
Run completed in 350 milliseconds.
Total number of tests run: 31
Suites: completed 5, aborted 0
Tests: succeeded 31, failed 0, canceled 0, ignored 0, pending 0
All tests passed.
Passed tests:
	StreamCodecSpec
	Base64Spec
	StreamDecoderSpec
	Base32Spec
	Base16Spec
Total time: 1 s, completed 01.06.2016 09:39:56
> server-post-command-cleanup
> server-handle-next-server-request
> compile
Evaluating tasks: compile:compile
Running task... Cancel: sbt.server.ServerTaskCancellation@3ec7cac8, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamEncoder.scala)
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamEncoder.scala)

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamEncoder.scala)

Read from stdout: Compiling 1 Scala source to /Users/lpfeiler/develop/github/base64/target/scala-2.11/classes...
Compiling 1 Scala source to /Users/lpfeiler/develop/github/base64/target/scala-2.11/classes...
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Running cached compiler 4b6251fe, interfacing (CompilerInterface) with Scala compiler version 2.11.7
Calling Scala compiler with arguments  (CompilerInterface):
	-bootclasspath
	/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/classes:/Users/lpfeiler/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.11.7.jar
	-classpath
	/Users/lpfeiler/develop/github/base64/target/scala-2.11/classes
Scala compilation took 0.351361888 s
Invalidating /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamEncoder.scala...
Invalidating (transitively) by inheritance from /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamEncoder.scala...
Initial set of included nodes: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamEncoder.scala)
Invalidated by transitive inheritance dependency: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamEncoder.scala)
The /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamEncoder.scala source file has the following regular definitions changed:
	filteredStream, notify, wait, $asInstanceOf, equals, asInstanceOf, synchronized, $isInstanceOf, notifyAll, isInstanceOf, ==, clone, StreamEncoder, $init$, checkedByteStream, toString, !=, getClass, ne, eq, ##, finalize, hashCode.
All member reference dependencies will be considered within this context.
New invalidations:
	Set()
Initial set of included nodes: Set()
Previously invalidated, but (transitively) depend on new invalidations:
	Set()
All newly invalidated sources after taking into account (previously) recompiled sources:Set()
Total time: 0 s, completed 01.06.2016 09:40:16
> server-post-command-cleanup
> server-handle-next-server-request
> test
Evaluating tasks: test:test
Running task... Cancel: sbt.server.ServerTaskCancellation@3efef24d, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set()
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set()

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set()

Copy resource mappings: 
	
The de.csmath.codec.Codec$ source file has the following regular definitions changed:
	needPads.
All member reference dependencies will be considered within this context.
Files invalidated by inheriting from (external) de.csmath.codec.Codec$: Set(); now invalidating by inheritance (internally).
Getting direct dependencies of all sources transitively invalidated by inheritance.
Getting sources that directly depend on (external) de.csmath.codec.Codec$.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/test/scala/Base16Spec.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/test/scala/Base32Spec.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/test/scala/Base64Spec.scala. This dependency is not being considered for invalidation.

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set()
Removed products: Set()
External API changes: API Changes: Set(NamesChange(de.csmath.codec.Codec$,ModifiedNames(regularNames = needPads, implicitNames = )))
Modified binary dependencies: Set()
Initial directly invalidated sources: Set()

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set()

Copy resource mappings: 
	
Framework implementation 'org.scalacheck.ScalaCheckFramework' not present.
Framework implementation 'org.specs2.runner.Specs2Framework' not present.
Framework implementation 'org.specs2.runner.SpecsFramework' not present.
Framework implementation 'org.specs.runner.SpecsFramework' not present.
Framework implementation 'com.novocode.junit.JUnitFramework' not present.
Subclass fingerprints: List((org.scalatest.Suite,false,org.scalatest.tools.Framework$$anon$1@57fbca24))
Annotation fingerprints: List((org.scalatest.WrapWith,false,org.scalatest.tools.Framework$$anon$2@2e859343))
Running TaskDef(Base16Spec, org.scalatest.tools.Framework$$anon$1@57fbca24, false, [SuiteSelector])
Running TaskDef(Base32Spec, org.scalatest.tools.Framework$$anon$1@57fbca24, false, [SuiteSelector])
Running TaskDef(Base64Spec, org.scalatest.tools.Framework$$anon$1@57fbca24, false, [SuiteSelector])
Running TaskDef(StreamDecoderSpec, org.scalatest.tools.Framework$$anon$1@57fbca24, false, [SuiteSelector])
Read from stdout: Base16Spec:
Read from stdout: Base16
Read from stdout: - should encode to BASE16
[32mBase16Spec:[0m
[32mBase16[0m
[32m- should encode to BASE16[0m
Read from stdout: StreamDecoderSpec:
Read from stdout: StreamDecoder
Read from stdout: - should check allowed bytes
[32mStreamDecoderSpec:[0m
[32mStreamDecoder[0m
[32m- should check allowed bytes[0m
Running TaskDef(StreamCodecSpec, org.scalatest.tools.Framework$$anon$1@57fbca24, false, [SuiteSelector])
Read from stdout: StreamCodecSpec:
Read from stdout: StreamCodec
Read from stdout: - should create a ByteStream
Read from stdout: StreamCodec
Read from stdout: - should create a IntStream
Read from stdout: StreamCodec
Read from stdout: - should create a groupStream
Read from stdout: StreamCodec
Read from stdout: - should create a filledStream
Read from stdout: StreamCodec
Read from stdout: - should flatten a filledStream
[32mStreamCodecSpec:[0m
[32mStreamCodec[0m
[32m- should create a ByteStream[0m
[32mStreamCodec[0m
[32m- should create a IntStream[0m
[32mStreamCodec[0m
[32m- should create a groupStream[0m
[32mStreamCodec[0m
[32m- should create a filledStream[0m
[32mStreamCodec[0m
[32m- should flatten a filledStream[0m
Read from stdout: Base64Spec:
Read from stdout: Base64
Read from stdout: - should encode to BASE64
Read from stdout: Base64
Read from stdout: - should encode to BASE64FILE
Read from stdout: Base64
Read from stdout: - should encode to BASE64URL
Read from stdout: Base64
Read from stdout: - should encode to BASE64NOPAD
Read from stdout: Base64
Read from stdout: - should encode to BASE64FILENOPAD
Read from stdout: Base64
Read from stdout: - should encode to BASE64URLNOPAD
Read from stdout: Base64
Read from stdout: - should decode from BASE64
Read from stdout: Base64
Read from stdout: - should decode from BASE64 w/o padding
Read from stdout: Base64
Read from stdout: - should fail with crap
Read from stdout: Base64
Read from stdout: - should decode from BASE64FILE
Read from stdout: Base64
Read from stdout: - should decode from BASE64FILE w/o padding
Read from stdout: Base64
Read from stdout: - should decode from BASE64URL
[32mBase64Spec:[0m
[32mBase64[0m
[32m- should encode to BASE64[0m
[32mBase64[0m
[32m- should encode to BASE64FILE[0m
[32mBase64[0m
[32m- should encode to BASE64URL[0m
[32mBase64[0m
[32m- should encode to BASE64NOPAD[0m
[32mBase64[0m
[32m- should encode to BASE64FILENOPAD[0m
[32mBase64[0m
[32m- should encode to BASE64URLNOPAD[0m
[32mBase64[0m
[32m- should decode from BASE64[0m
[32mBase64[0m
[32m- should decode from BASE64 w/o padding[0m
[32mBase64[0m
[32m- should fail with crap[0m
[32mBase64[0m
[32m- should decode from BASE64FILE[0m
[32mBase64[0m
[32m- should decode from BASE64FILE w/o padding[0m
[32mBase64[0m
[32m- should decode from BASE64URL[0m
Read from stdout: Base32Spec:
Read from stdout: Base32
Read from stdout: - should encode to BASE32
Read from stdout: Base32
Read from stdout: - should encode to BASE32NOPAD
Read from stdout: Base32
Read from stdout: - should encode to BASE32URL
Read from stdout: Base32
Read from stdout: - should encode to BASE32HEX
Read from stdout: Base32
Read from stdout: - should encode to BASE32HEXNOPAD
Read from stdout: Base32
Read from stdout: - should encode to BASE32HEXURL
Read from stdout: Base32
Read from stdout: - should decode from BASE32
Read from stdout: Base32
Read from stdout: - should decode from BASE32 w/o padding
Read from stdout: Base32
Read from stdout: - should decode from BASE32URL
Read from stdout: Base32
Read from stdout: - should decode from BASE32HEX
Read from stdout: Base32
Read from stdout: - should decode from BASE32HEX w/o padding
Read from stdout: Base32
Read from stdout: - should decode from BASE32HEXURL
[32mBase32Spec:[0m
[32mBase32[0m
[32m- should encode to BASE32[0m
[32mBase32[0m
[32m- should encode to BASE32NOPAD[0m
[32mBase32[0m
[32m- should encode to BASE32URL[0m
[32mBase32[0m
[32m- should encode to BASE32HEX[0m
[32mBase32[0m
[32m- should encode to BASE32HEXNOPAD[0m
[32mBase32[0m
[32m- should encode to BASE32HEXURL[0m
[32mBase32[0m
[32m- should decode from BASE32[0m
[32mBase32[0m
[32m- should decode from BASE32 w/o padding[0m
[32mBase32[0m
[32m- should decode from BASE32URL[0m
[32mBase32[0m
[32m- should decode from BASE32HEX[0m
[32mBase32[0m
[32m- should decode from BASE32HEX w/o padding[0m
[32mBase32[0m
[32m- should decode from BASE32HEXURL[0m
Read from stdout: Run completed in 335 milliseconds.
Read from stdout: Total number of tests run: 31
Read from stdout: Suites: completed 5, aborted 0
Read from stdout: Tests: succeeded 31, failed 0, canceled 0, ignored 0, pending 0
Read from stdout: All tests passed.
Run completed in 335 milliseconds.
Total number of tests run: 31
Suites: completed 5, aborted 0
Tests: succeeded 31, failed 0, canceled 0, ignored 0, pending 0
All tests passed.
Passed tests:
	StreamCodecSpec
	Base64Spec
	StreamDecoderSpec
	Base32Spec
	Base16Spec
Total time: 1 s, completed 01.06.2016 09:40:17
> server-post-command-cleanup
> server-handle-next-server-request
> compile
Evaluating tasks: compile:compile
Running task... Cancel: sbt.server.ServerTaskCancellation@2d51f1a3, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamEncoder.scala)
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamEncoder.scala)

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamEncoder.scala)

Read from stdout: Compiling 1 Scala source to /Users/lpfeiler/develop/github/base64/target/scala-2.11/classes...
Compiling 1 Scala source to /Users/lpfeiler/develop/github/base64/target/scala-2.11/classes...
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Running cached compiler 6a1f4ca6, interfacing (CompilerInterface) with Scala compiler version 2.11.7
Calling Scala compiler with arguments  (CompilerInterface):
	-bootclasspath
	/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/classes:/Users/lpfeiler/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.11.7.jar
	-classpath
	/Users/lpfeiler/develop/github/base64/target/scala-2.11/classes
Read from stdout: /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamEncoder.scala:5: ';' expected but identifier found.
/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamEncoder.scala:5: ';' expected but identifier found.
Read from stdout: trait StreamEncoder extend StreamCodec {
trait StreamEncoder extend StreamCodec {
Read from stdout: ^
                    ^
Read from stdout: one error found
one error found
Compilation failed (CompilerInterface)
Read from stdout: (compile:compileIncremental) Compilation failed
(compile:compileIncremental) Compilation failed
Total time: 0 s, completed 01.06.2016 09:40:53
> server-post-command-error-handler
> server-post-command-cleanup
> server-handle-next-server-request
> compile
Evaluating tasks: compile:compile
Running task... Cancel: sbt.server.ServerTaskCancellation@31da5a60, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamCodec.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamEncoder.scala)
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamCodec.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamEncoder.scala)

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamCodec.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamEncoder.scala)

Read from stdout: Compiling 2 Scala sources to /Users/lpfeiler/develop/github/base64/target/scala-2.11/classes...
Compiling 2 Scala sources to /Users/lpfeiler/develop/github/base64/target/scala-2.11/classes...
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Running cached compiler 7500eb1, interfacing (CompilerInterface) with Scala compiler version 2.11.7
Calling Scala compiler with arguments  (CompilerInterface):
	-bootclasspath
	/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/classes:/Users/lpfeiler/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.11.7.jar
	-classpath
	/Users/lpfeiler/develop/github/base64/target/scala-2.11/classes
Read from stdout: /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamEncoder.scala:5: ';' expected but identifier found.
/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamEncoder.scala:5: ';' expected but identifier found.
Read from stdout: trait StreamEncoder extend StreamCodec {
trait StreamEncoder extend StreamCodec {
Read from stdout: ^
                    ^
Read from stdout: one error found
one error found
Compilation failed (CompilerInterface)
Read from stdout: (compile:compileIncremental) Compilation failed
(compile:compileIncremental) Compilation failed
Total time: 0 s, completed 01.06.2016 09:41:10
> server-post-command-error-handler
> server-post-command-cleanup
> server-handle-next-server-request
> compile
Evaluating tasks: compile:compile
Running task... Cancel: sbt.server.ServerTaskCancellation@37f34395, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamCodec.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamEncoder.scala)
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamCodec.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamEncoder.scala)

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamCodec.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamEncoder.scala)

Read from stdout: Compiling 3 Scala sources to /Users/lpfeiler/develop/github/base64/target/scala-2.11/classes...
Compiling 3 Scala sources to /Users/lpfeiler/develop/github/base64/target/scala-2.11/classes...
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Running cached compiler 11c7111e, interfacing (CompilerInterface) with Scala compiler version 2.11.7
Calling Scala compiler with arguments  (CompilerInterface):
	-bootclasspath
	/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/classes:/Users/lpfeiler/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.11.7.jar
	-classpath
	/Users/lpfeiler/develop/github/base64/target/scala-2.11/classes
Read from stdout: /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamDecoder.scala:5: ';' expected but identifier found.
/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamDecoder.scala:5: ';' expected but identifier found.
Read from stdout: trait StreamDecoder extend StreamCodec {
trait StreamDecoder extend StreamCodec {
Read from stdout: ^
                    ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamEncoder.scala:5: ';' expected but identifier found.
/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamEncoder.scala:5: ';' expected but identifier found.
Read from stdout: trait StreamEncoder extend StreamCodec {
trait StreamEncoder extend StreamCodec {
Read from stdout: ^
                    ^
Read from stdout: two errors found
two errors found
Compilation failed (CompilerInterface)
Read from stdout: (compile:compileIncremental) Compilation failed
(compile:compileIncremental) Compilation failed
Total time: 0 s, completed 01.06.2016 09:41:28
> server-post-command-error-handler
> server-post-command-cleanup
> server-handle-next-server-request
> compile
Evaluating tasks: compile:compile
Running task... Cancel: sbt.server.ServerTaskCancellation@54eb56c3, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamCodec.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamEncoder.scala)
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamCodec.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamEncoder.scala)

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamCodec.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamEncoder.scala)

Read from stdout: Compiling 4 Scala sources to /Users/lpfeiler/develop/github/base64/target/scala-2.11/classes...
Compiling 4 Scala sources to /Users/lpfeiler/develop/github/base64/target/scala-2.11/classes...
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Running cached compiler 4977a32d, interfacing (CompilerInterface) with Scala compiler version 2.11.7
Calling Scala compiler with arguments  (CompilerInterface):
	-bootclasspath
	/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/classes:/Users/lpfeiler/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.11.7.jar
	-classpath
	/Users/lpfeiler/develop/github/base64/target/scala-2.11/classes
Read from stdout: /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamDecoder.scala:5: ';' expected but identifier found.
/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamDecoder.scala:5: ';' expected but identifier found.
Read from stdout: trait StreamDecoder extend StreamCodec {
trait StreamDecoder extend StreamCodec {
Read from stdout: ^
                    ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamEncoder.scala:5: ';' expected but identifier found.
/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamEncoder.scala:5: ';' expected but identifier found.
Read from stdout: trait StreamEncoder extend StreamCodec {
trait StreamEncoder extend StreamCodec {
Read from stdout: ^
                    ^
Read from stdout: two errors found
two errors found
Compilation failed (CompilerInterface)
Read from stdout: (compile:compileIncremental) Compilation failed
(compile:compileIncremental) Compilation failed
Total time: 0 s, completed 01.06.2016 09:41:40
> server-post-command-error-handler
> server-post-command-cleanup
> server-handle-next-server-request
> compile
Evaluating tasks: compile:compile
Running task... Cancel: sbt.server.ServerTaskCancellation@c5dade4, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamCodec.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala)
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamCodec.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala)

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamCodec.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala)

Read from stdout: Compiling 5 Scala sources to /Users/lpfeiler/develop/github/base64/target/scala-2.11/classes...
Compiling 5 Scala sources to /Users/lpfeiler/develop/github/base64/target/scala-2.11/classes...
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Running cached compiler 5ecbf0f8, interfacing (CompilerInterface) with Scala compiler version 2.11.7
Calling Scala compiler with arguments  (CompilerInterface):
	-bootclasspath
	/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/classes:/Users/lpfeiler/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.11.7.jar
	-classpath
	/Users/lpfeiler/develop/github/base64/target/scala-2.11/classes
Read from stdout: /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamDecoder.scala:5: ';' expected but identifier found.
/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamDecoder.scala:5: ';' expected but identifier found.
Read from stdout: trait StreamDecoder extend StreamCodec {
trait StreamDecoder extend StreamCodec {
Read from stdout: ^
                    ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamEncoder.scala:5: ';' expected but identifier found.
/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamEncoder.scala:5: ';' expected but identifier found.
Read from stdout: trait StreamEncoder extend StreamCodec {
trait StreamEncoder extend StreamCodec {
Read from stdout: ^
                    ^
Read from stdout: two errors found
two errors found
Compilation failed (CompilerInterface)
Read from stdout: (compile:compileIncremental) Compilation failed
(compile:compileIncremental) Compilation failed
Total time: 0 s, completed 01.06.2016 09:41:58
> server-post-command-error-handler
> server-post-command-cleanup
> server-handle-next-server-request
> compile
Evaluating tasks: compile:compile
Running task... Cancel: sbt.server.ServerTaskCancellation@434cc73a, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamCodec.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala)
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamCodec.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala)

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamCodec.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala)

Read from stdout: Compiling 5 Scala sources to /Users/lpfeiler/develop/github/base64/target/scala-2.11/classes...
Compiling 5 Scala sources to /Users/lpfeiler/develop/github/base64/target/scala-2.11/classes...
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Running cached compiler 4a4461cb, interfacing (CompilerInterface) with Scala compiler version 2.11.7
Calling Scala compiler with arguments  (CompilerInterface):
	-bootclasspath
	/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/classes:/Users/lpfeiler/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.11.7.jar
	-classpath
	/Users/lpfeiler/develop/github/base64/target/scala-2.11/classes
Read from stdout: /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamEncoder.scala:5: ';' expected but identifier found.
/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamEncoder.scala:5: ';' expected but identifier found.
Read from stdout: trait StreamEncoder extend StreamCodec {
trait StreamEncoder extend StreamCodec {
Read from stdout: ^
                    ^
Read from stdout: one error found
one error found
Compilation failed (CompilerInterface)
Read from stdout: (compile:compileIncremental) Compilation failed
(compile:compileIncremental) Compilation failed
Total time: 0 s, completed 01.06.2016 09:42:26
> server-post-command-error-handler
> server-post-command-cleanup
> server-handle-next-server-request
> compile
Evaluating tasks: compile:compile
Running task... Cancel: sbt.server.ServerTaskCancellation@65d199f3, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamCodec.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala)
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamCodec.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala)

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamCodec.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala)

Read from stdout: Compiling 5 Scala sources to /Users/lpfeiler/develop/github/base64/target/scala-2.11/classes...
Compiling 5 Scala sources to /Users/lpfeiler/develop/github/base64/target/scala-2.11/classes...
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Running cached compiler 5e709784, interfacing (CompilerInterface) with Scala compiler version 2.11.7
Calling Scala compiler with arguments  (CompilerInterface):
	-bootclasspath
	/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/classes:/Users/lpfeiler/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.11.7.jar
	-classpath
	/Users/lpfeiler/develop/github/base64/target/scala-2.11/classes
Read from stdout: there were three feature warnings; re-run with -feature for details
there were three feature warnings; re-run with -feature for details
Read from stdout: one warning found
one warning found
Scala compilation took 1.110066542 s
Invalidating /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNEncoder.scala...
Invalidating (transitively) by inheritance from /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNEncoder.scala...
Initial set of included nodes: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNEncoder.scala)
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Encoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNEncoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlEncoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Encoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexEncoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Encoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlEncoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexEncoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base16Encoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNEncoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Encoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNEncoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileEncoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Encoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlEncoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileEncoder.scala
Invalidated by transitive inheritance dependency: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Encoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base16Encoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Encoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexEncoder.scala)
The /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNEncoder.scala source file has the following regular definitions changed:
	BaseNEncoder.
All member reference dependencies will be considered within this context.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileEncoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
The following modified names cause invalidation of /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Encoder.scala: Set(BaseNEncoder)
The following modified names cause invalidation of /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseN.scala: Set(BaseNEncoder)
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
The following modified names cause invalidation of /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base16Encoder.scala: Set(BaseNEncoder)
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base16.scala. This dependency is not being considered for invalidation.
The following modified names cause invalidation of /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Encoder.scala: Set(BaseNEncoder)
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base16.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlEncoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlEncoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexEncoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlEncoder.scala. This dependency is not being considered for invalidation.
Invalidating /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala...
Invalidating (transitively) by inheritance from /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala...
Initial set of included nodes: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala)
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Decoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Decoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala
Invalidated by transitive inheritance dependency: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Decoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala)
The /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala source file has the following regular definitions changed:
	intStream.
All member reference dependencies will be considered within this context.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseN.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Decoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala. This dependency is not being considered for invalidation.
Invalidating /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamDecoder.scala...
Invalidating (transitively) by inheritance from /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamDecoder.scala...
Initial set of included nodes: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamDecoder.scala)
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamDecoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Decoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Decoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/PercentDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamDecoder.scala
Invalidated by transitive inheritance dependency: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Decoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/PercentDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala)
The /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamDecoder.scala source file has the following regular definitions changed:
	flatten, filledStream, groupStreamAux, groupStream, groupBStreamAux, groupBStream, byteStream, StreamDecoder.
All member reference dependencies will be considered within this context.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
The following modified names cause invalidation of /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala: Set(flatten, groupBStream, StreamDecoder)
The following modified names cause invalidation of /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/PercentDecoder.scala: Set(StreamDecoder)
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseN.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Decoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala. This dependency is not being considered for invalidation.
Invalidating /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamCodec.scala...
Invalidating (transitively) by inheritance from /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamCodec.scala...
Initial set of included nodes: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamCodec.scala)
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamEncoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamCodec.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNEncoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamEncoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Encoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNEncoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlEncoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Encoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexEncoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Encoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlEncoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexEncoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base16Encoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNEncoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Encoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNEncoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileEncoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Encoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlEncoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileEncoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamCodec.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamDecoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Decoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Decoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/PercentDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamDecoder.scala
Invalidated by transitive inheritance dependency: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Encoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Decoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamCodec.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base16Encoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Encoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/PercentDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexEncoder.scala)
The /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamCodec.scala source file has the following regular definitions changed:
	intStream.
All member reference dependencies will be considered within this context.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileEncoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/PercentDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala. This dependency is not being considered for invalidation.
The following modified names cause invalidation of /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamEncoder.scala: Set(intStream)
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamDecoder.scala. This dependency is not being considered for invalidation.
The following modified names cause invalidation of /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNEncoder.scala: Set(intStream)
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Encoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseN.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base16Encoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base16.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Encoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base16.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlEncoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlEncoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexEncoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala. This dependency is not being considered for invalidation.
The following modified names cause invalidation of /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNEncoder.scala: Set(intStream)
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseN.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Decoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlEncoder.scala. This dependency is not being considered for invalidation.
Invalidating /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamEncoder.scala...
Invalidating (transitively) by inheritance from /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamEncoder.scala...
Initial set of included nodes: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamEncoder.scala)
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNEncoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamEncoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Encoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNEncoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlEncoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Encoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexEncoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Encoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlEncoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexEncoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base16Encoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNEncoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Encoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNEncoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileEncoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Encoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlEncoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileEncoder.scala
Invalidated by transitive inheritance dependency: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Encoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base16Encoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Encoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexEncoder.scala)
The /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamEncoder.scala source file has the following regular definitions changed:
	filteredStream, flatten, filledStream, intStream, groupStreamAux, groupStream, groupBStreamAux, groupBStream, byteStream, StreamEncoder, checkedByteStream.
All member reference dependencies will be considered within this context.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileEncoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Encoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseN.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base16Encoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base16.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Encoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base16.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlEncoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlEncoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexEncoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
The following modified names cause invalidation of /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNEncoder.scala: Set(flatten, filledStream, intStream, groupStream, StreamEncoder)
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlEncoder.scala. This dependency is not being considered for invalidation.
New invalidations:
	Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Encoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseN.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Decoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base16Encoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Encoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/PercentDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexEncoder.scala)
Initial set of included nodes: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Encoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseN.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Decoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base16Encoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Encoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/PercentDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexEncoder.scala)
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Encoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileEncoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Encoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlEncoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileEncoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base16.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseN.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseN.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Decoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexEncoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Encoder.scala
Previously invalidated, but (transitively) depend on new invalidations:
	Set()
All newly invalidated sources after taking into account (previously) recompiled sources:Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Encoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseN.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Decoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base16Encoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Encoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/PercentDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexEncoder.scala)
Recompiling all 27 sources: invalidated sources (17) exceeded 50.0% of all sources
Read from stdout: Compiling 27 Scala sources to /Users/lpfeiler/develop/github/base64/target/scala-2.11/classes...
Compiling 27 Scala sources to /Users/lpfeiler/develop/github/base64/target/scala-2.11/classes...
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Running cached compiler 3922fb85, interfacing (CompilerInterface) with Scala compiler version 2.11.7
Calling Scala compiler with arguments  (CompilerInterface):
	-bootclasspath
	/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/classes:/Users/lpfeiler/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.11.7.jar
	-classpath
	/Users/lpfeiler/develop/github/base64/target/scala-2.11/classes
Read from stdout: there were four feature warnings; re-run with -feature for details
there were four feature warnings; re-run with -feature for details
Read from stdout: one warning found
one warning found
Scala compilation took 1.943162408 s
Invalidating /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala...
Invalidating (transitively) by inheritance from /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala...
Initial set of included nodes: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala)
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala
Invalidated by transitive inheritance dependency: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala)
The /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala source file has the following regular definitions changed:
	intStream.
All member reference dependencies will be considered within this context.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
Invalidating /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala...
Invalidating (transitively) by inheritance from /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala...
Initial set of included nodes: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala)
Invalidated by transitive inheritance dependency: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala)
The /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala source file has the following regular definitions changed:
	intStream.
All member reference dependencies will be considered within this context.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
Invalidating /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala...
Invalidating (transitively) by inheritance from /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala...
Initial set of included nodes: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala)
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala
Invalidated by transitive inheritance dependency: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala)
The /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala source file has the following regular definitions changed:
	intStream.
All member reference dependencies will be considered within this context.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
Invalidating /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlEncoder.scala...
Invalidating (transitively) by inheritance from /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlEncoder.scala...
Initial set of included nodes: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlEncoder.scala)
Invalidated by transitive inheritance dependency: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlEncoder.scala)
The /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlEncoder.scala source file has the following regular definitions changed:
	Base32HexUrlEncoder.
All member reference dependencies will be considered within this context.
The following modified names cause invalidation of /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala: Set(Base32HexUrlEncoder)
Invalidating /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexEncoder.scala...
Invalidating (transitively) by inheritance from /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexEncoder.scala...
Initial set of included nodes: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexEncoder.scala)
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlEncoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexEncoder.scala
Invalidated by transitive inheritance dependency: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlEncoder.scala)
The /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexEncoder.scala source file has the following regular definitions changed:
	Base32HexEncoder.
All member reference dependencies will be considered within this context.
The following modified names cause invalidation of /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala: Set(Base32HexEncoder)
The following modified names cause invalidation of /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlEncoder.scala: Set(Base32HexEncoder)
The following modified names cause invalidation of /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala: Set(Base32HexEncoder)
Invalidating /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Decoder.scala...
Invalidating (transitively) by inheritance from /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Decoder.scala...
Initial set of included nodes: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Decoder.scala)
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Decoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala
Invalidated by transitive inheritance dependency: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Decoder.scala)
The /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Decoder.scala source file has the following regular definitions changed:
	intStream.
All member reference dependencies will be considered within this context.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
Invalidating /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlEncoder.scala...
Invalidating (transitively) by inheritance from /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlEncoder.scala...
Initial set of included nodes: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlEncoder.scala)
Invalidated by transitive inheritance dependency: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlEncoder.scala)
The /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlEncoder.scala source file has the following regular definitions changed:
	Base32UrlEncoder.
All member reference dependencies will be considered within this context.
The following modified names cause invalidation of /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala: Set(Base32UrlEncoder)
Invalidating /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Encoder.scala...
Invalidating (transitively) by inheritance from /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Encoder.scala...
Initial set of included nodes: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Encoder.scala)
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileEncoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Encoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlEncoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileEncoder.scala
Invalidated by transitive inheritance dependency: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Encoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlEncoder.scala)
The /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Encoder.scala source file has the following regular definitions changed:
	Base64Encoder.
All member reference dependencies will be considered within this context.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlEncoder.scala. This dependency is not being considered for invalidation.
The following modified names cause invalidation of /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala: Set(Base64Encoder)
The following modified names cause invalidation of /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala: Set(Base64Encoder)
The following modified names cause invalidation of /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileEncoder.scala: Set(Base64Encoder)
The following modified names cause invalidation of /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala: Set(Base64Encoder)
Invalidating /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala...
Invalidating (transitively) by inheritance from /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala...
Initial set of included nodes: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala)
Invalidated by transitive inheritance dependency: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala)
The /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala source file has the following regular definitions changed:
	intStream.
All member reference dependencies will be considered within this context.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
Invalidating /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala...
Invalidating (transitively) by inheritance from /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala...
Initial set of included nodes: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala)
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala
Invalidated by transitive inheritance dependency: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala)
The /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala source file has the following regular definitions changed:
	intStream.
All member reference dependencies will be considered within this context.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
Invalidating /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileEncoder.scala...
Invalidating (transitively) by inheritance from /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileEncoder.scala...
Initial set of included nodes: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileEncoder.scala)
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlEncoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileEncoder.scala
Invalidated by transitive inheritance dependency: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlEncoder.scala)
The /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileEncoder.scala source file has the following regular definitions changed:
	Base64FileEncoder.
All member reference dependencies will be considered within this context.
The following modified names cause invalidation of /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlEncoder.scala: Set(Base64FileEncoder)
The following modified names cause invalidation of /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala: Set(Base64FileEncoder)
The following modified names cause invalidation of /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala: Set(Base64FileEncoder)
Invalidating /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base16Encoder.scala...
Invalidating (transitively) by inheritance from /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base16Encoder.scala...
Initial set of included nodes: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base16Encoder.scala)
Invalidated by transitive inheritance dependency: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base16Encoder.scala)
The /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base16Encoder.scala source file has the following regular definitions changed:
	Base16Encoder.
All member reference dependencies will be considered within this context.
The following modified names cause invalidation of /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base16.scala: Set(Base16Encoder)
Invalidating /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlEncoder.scala...
Invalidating (transitively) by inheritance from /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlEncoder.scala...
Initial set of included nodes: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlEncoder.scala)
Invalidated by transitive inheritance dependency: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlEncoder.scala)
The /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlEncoder.scala source file has the following regular definitions changed:
	Base64UrlEncoder.
All member reference dependencies will be considered within this context.
The following modified names cause invalidation of /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala: Set(Base64UrlEncoder)
Invalidating /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala...
Invalidating (transitively) by inheritance from /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala...
Initial set of included nodes: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala)
Invalidated by transitive inheritance dependency: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala)
The /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala source file has the following regular definitions changed:
	intStream.
All member reference dependencies will be considered within this context.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
Invalidating /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/PercentDecoder.scala...
Invalidating (transitively) by inheritance from /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/PercentDecoder.scala...
Initial set of included nodes: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/PercentDecoder.scala)
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/PercentDecoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/PercentDecoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/PercentDecoder.scala
Invalidated by transitive inheritance dependency: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/PercentDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala)
The /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/PercentDecoder.scala source file has the following regular definitions changed:
	flatten, filledStream, groupStreamAux, groupStream, groupBStreamAux, groupBStream, byteStream, PercentDecoder.
All member reference dependencies will be considered within this context.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
The following modified names cause invalidation of /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala: Set(PercentDecoder)
The following modified names cause invalidation of /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala: Set(PercentDecoder)
The following modified names cause invalidation of /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala: Set(PercentDecoder)
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
Invalidating /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Encoder.scala...
Invalidating (transitively) by inheritance from /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Encoder.scala...
Initial set of included nodes: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Encoder.scala)
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlEncoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Encoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexEncoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Encoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlEncoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexEncoder.scala
Invalidated by transitive inheritance dependency: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Encoder.scala)
The /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Encoder.scala source file has the following regular definitions changed:
	Base32Encoder.
All member reference dependencies will be considered within this context.
The following modified names cause invalidation of /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala: Set(Base32Encoder)
The following modified names cause invalidation of /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala: Set(Base32Encoder)
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlEncoder.scala. This dependency is not being considered for invalidation.
The following modified names cause invalidation of /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala: Set(Base32Encoder)
The following modified names cause invalidation of /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlEncoder.scala: Set(Base32Encoder)
The following modified names cause invalidation of /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala: Set(Base32Encoder)
The following modified names cause invalidation of /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexEncoder.scala: Set(Base32Encoder)
New invalidations:
	Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base16.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala)
Initial set of included nodes: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base16.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala)
Previously invalidated, but (transitively) depend on new invalidations:
	Set()
All newly invalidated sources after taking into account (previously) recompiled sources:Set()
Total time: 3 s, completed 01.06.2016 09:42:44
> server-post-command-cleanup
> server-handle-next-server-request
> compile
Evaluating tasks: compile:compile
Running task... Cancel: sbt.server.ServerTaskCancellation@61fe30e0, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set()
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set()

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set()

Total time: 0 s, completed 01.06.2016 09:43:10
> server-post-command-cleanup
> server-handle-next-server-request
> test
Evaluating tasks: test:test
Running task... Cancel: sbt.server.ServerTaskCancellation@57e06be4, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set()
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set()

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set()

Copy resource mappings: 
	
The de.csmath.codec.Codec$ source file has the following regular definitions changed:
	needPads.
All member reference dependencies will be considered within this context.
Files invalidated by inheriting from (external) de.csmath.codec.Codec$: Set(); now invalidating by inheritance (internally).
Getting direct dependencies of all sources transitively invalidated by inheritance.
Getting sources that directly depend on (external) de.csmath.codec.Codec$.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/test/scala/Base16Spec.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/test/scala/Base32Spec.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/test/scala/Base64Spec.scala. This dependency is not being considered for invalidation.
The de.csmath.codec.StreamDecoder source file has the following regular definitions changed:
	flatten, filledStream, groupStreamAux, groupStream, groupBStreamAux, groupBStream, byteStream, StreamDecoder.
All member reference dependencies will be considered within this context.
Files invalidated by inheriting from (external) de.csmath.codec.StreamDecoder: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala); now invalidating by inheritance (internally).
Invalidating (transitively) by inheritance from /Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala...
Initial set of included nodes: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala)
Invalidated by transitive inheritance dependency: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala)
Getting direct dependencies of all sources transitively invalidated by inheritance.
Getting sources that directly depend on (external) de.csmath.codec.StreamDecoder.
The following modified names cause invalidation of /Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala: Set(StreamDecoder)
The de.csmath.codec.StreamCodec source file has the following regular definitions changed:
	intStream.
All member reference dependencies will be considered within this context.
Files invalidated by inheriting from (external) de.csmath.codec.StreamCodec: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala); now invalidating by inheritance (internally).
Invalidating (transitively) by inheritance from /Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala...
Initial set of included nodes: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala)
Invalidated by transitive inheritance dependency: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala)
Getting direct dependencies of all sources transitively invalidated by inheritance.
Getting sources that directly depend on (external) de.csmath.codec.StreamCodec.
The following modified names cause invalidation of /Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala: Set(intStream)

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set()
Removed products: Set()
External API changes: API Changes: Set(NamesChange(de.csmath.codec.Codec$,ModifiedNames(regularNames = needPads, implicitNames = )), NamesChange(de.csmath.codec.StreamDecoder,ModifiedNames(regularNames = flatten, filledStream, groupStreamAux, groupStream, groupBStreamAux, groupBStream, byteStream, StreamDecoder, implicitNames = )), NamesChange(de.csmath.codec.StreamCodec,ModifiedNames(regularNames = intStream, implicitNames = )))
Modified binary dependencies: Set()
Initial directly invalidated sources: Set()

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala, /Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala)
All initially invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala, /Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala)

Read from stdout: Compiling 2 Scala sources to /Users/lpfeiler/develop/github/base64/target/scala-2.11/test-classes...
Compiling 2 Scala sources to /Users/lpfeiler/develop/github/base64/target/scala-2.11/test-classes...
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Running cached compiler 1eddd642, interfacing (CompilerInterface) with Scala compiler version 2.11.7
Calling Scala compiler with arguments  (CompilerInterface):
	-bootclasspath
	/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/classes:/Users/lpfeiler/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.11.7.jar
	-classpath
	/Users/lpfeiler/develop/github/base64/target/scala-2.11/test-classes:/Users/lpfeiler/develop/github/base64/target/scala-2.11/classes:/Users/lpfeiler/develop/scala/activator-dist-1.3.6/repository/org.scalatest/scalatest_2.11/2.2.4/bundles/scalatest_2.11.jar:/Users/lpfeiler/develop/scala/activator-dist-1.3.6/repository/org.scala-lang/scala-reflect/2.11.2/jars/scala-reflect.jar:/Users/lpfeiler/develop/scala/activator-dist-1.3.6/repository/org.scala-lang.modules/scala-xml_2.11/1.0.2/bundles/scala-xml_2.11.jar
Read from stdout: /Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala:22: not found: value intStream
/Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala:22: not found: value intStream
Read from stdout: val s = intStream(list)
          val s = intStream(list)
Read from stdout: ^
                  ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala:34: not found: value intStream
/Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala:34: not found: value intStream
Read from stdout: val s = intStream(list)
          val s = intStream(list)
Read from stdout: ^
                  ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala:46: not found: value intStream
/Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala:46: not found: value intStream
Read from stdout: val s = intStream(list)
          val s = intStream(list)
Read from stdout: ^
                  ^
Read from stdout: three errors found
three errors found
Compilation failed (CompilerInterface)
Read from stdout: (test:compileIncremental) Compilation failed
(test:compileIncremental) Compilation failed
Total time: 1 s, completed 01.06.2016 09:43:11
> server-post-command-error-handler
> server-post-command-cleanup
> server-handle-next-server-request
> compile
Evaluating tasks: compile:compile
Running task... Cancel: sbt.server.ServerTaskCancellation@6bddf486, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set()
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set()

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set()

Total time: 0 s, completed 01.06.2016 09:43:58
> server-post-command-cleanup
> server-handle-next-server-request
> test
Evaluating tasks: test:test
Running task... Cancel: sbt.server.ServerTaskCancellation@1b37d82c, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set()
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set()

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set()

Copy resource mappings: 
	
The de.csmath.codec.Codec$ source file has the following regular definitions changed:
	needPads.
All member reference dependencies will be considered within this context.
Files invalidated by inheriting from (external) de.csmath.codec.Codec$: Set(); now invalidating by inheritance (internally).
Getting direct dependencies of all sources transitively invalidated by inheritance.
Getting sources that directly depend on (external) de.csmath.codec.Codec$.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/test/scala/Base16Spec.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/test/scala/Base32Spec.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/test/scala/Base64Spec.scala. This dependency is not being considered for invalidation.
The de.csmath.codec.StreamDecoder source file has the following regular definitions changed:
	flatten, filledStream, groupStreamAux, groupStream, groupBStreamAux, groupBStream, byteStream, StreamDecoder.
All member reference dependencies will be considered within this context.
Files invalidated by inheriting from (external) de.csmath.codec.StreamDecoder: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala); now invalidating by inheritance (internally).
Invalidating (transitively) by inheritance from /Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala...
Initial set of included nodes: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala)
Invalidated by transitive inheritance dependency: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala)
Getting direct dependencies of all sources transitively invalidated by inheritance.
Getting sources that directly depend on (external) de.csmath.codec.StreamDecoder.
The following modified names cause invalidation of /Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala: Set(StreamDecoder)
The de.csmath.codec.StreamCodec source file has the following regular definitions changed:
	intStream.
All member reference dependencies will be considered within this context.
Files invalidated by inheriting from (external) de.csmath.codec.StreamCodec: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala); now invalidating by inheritance (internally).
Invalidating (transitively) by inheritance from /Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala...
Initial set of included nodes: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala)
Invalidated by transitive inheritance dependency: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala)
Getting direct dependencies of all sources transitively invalidated by inheritance.
Getting sources that directly depend on (external) de.csmath.codec.StreamCodec.
The following modified names cause invalidation of /Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala: Set(intStream)

Initial source changes: 
	removed:Set()
	added: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamEncoderSpec.scala)
	modified: Set()
Removed products: Set()
External API changes: API Changes: Set(NamesChange(de.csmath.codec.Codec$,ModifiedNames(regularNames = needPads, implicitNames = )), NamesChange(de.csmath.codec.StreamDecoder,ModifiedNames(regularNames = flatten, filledStream, groupStreamAux, groupStream, groupBStreamAux, groupBStream, byteStream, StreamDecoder, implicitNames = )), NamesChange(de.csmath.codec.StreamCodec,ModifiedNames(regularNames = intStream, implicitNames = )))
Modified binary dependencies: Set()
Initial directly invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamEncoderSpec.scala)

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala, /Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala)
All initially invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala, /Users/lpfeiler/develop/github/base64/src/test/scala/StreamEncoderSpec.scala, /Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala)

Read from stdout: Compiling 3 Scala sources to /Users/lpfeiler/develop/github/base64/target/scala-2.11/test-classes...
Compiling 3 Scala sources to /Users/lpfeiler/develop/github/base64/target/scala-2.11/test-classes...
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Running cached compiler c463135, interfacing (CompilerInterface) with Scala compiler version 2.11.7
Calling Scala compiler with arguments  (CompilerInterface):
	-bootclasspath
	/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/classes:/Users/lpfeiler/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.11.7.jar
	-classpath
	/Users/lpfeiler/develop/github/base64/target/scala-2.11/test-classes:/Users/lpfeiler/develop/github/base64/target/scala-2.11/classes:/Users/lpfeiler/develop/scala/activator-dist-1.3.6/repository/org.scalatest/scalatest_2.11/2.2.4/bundles/scalatest_2.11.jar:/Users/lpfeiler/develop/scala/activator-dist-1.3.6/repository/org.scala-lang/scala-reflect/2.11.2/jars/scala-reflect.jar:/Users/lpfeiler/develop/scala/activator-dist-1.3.6/repository/org.scala-lang.modules/scala-xml_2.11/1.0.2/bundles/scala-xml_2.11.jar
Read from stdout: /Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala:22: not found: value intStream
/Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala:22: not found: value intStream
Read from stdout: val s = intStream(list)
          val s = intStream(list)
Read from stdout: ^
                  ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala:34: not found: value intStream
/Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala:34: not found: value intStream
Read from stdout: val s = intStream(list)
          val s = intStream(list)
Read from stdout: ^
                  ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala:46: not found: value intStream
/Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala:46: not found: value intStream
Read from stdout: val s = intStream(list)
          val s = intStream(list)
Read from stdout: ^
                  ^
Read from stdout: three errors found
three errors found
Compilation failed (CompilerInterface)
Read from stdout: (test:compileIncremental) Compilation failed
(test:compileIncremental) Compilation failed
Total time: 1 s, completed 01.06.2016 09:43:59
> server-post-command-error-handler
> server-post-command-cleanup
> server-handle-next-server-request
> compile
Evaluating tasks: compile:compile
Running task... Cancel: sbt.server.ServerTaskCancellation@523f9a36, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set()
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set()

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set()

Total time: 0 s, completed 01.06.2016 09:44:09
> server-post-command-cleanup
> server-handle-next-server-request
> test
Evaluating tasks: test:test
Running task... Cancel: sbt.server.ServerTaskCancellation@16e3204a, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set()
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set()

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set()

Copy resource mappings: 
	
The de.csmath.codec.Codec$ source file has the following regular definitions changed:
	needPads.
All member reference dependencies will be considered within this context.
Files invalidated by inheriting from (external) de.csmath.codec.Codec$: Set(); now invalidating by inheritance (internally).
Getting direct dependencies of all sources transitively invalidated by inheritance.
Getting sources that directly depend on (external) de.csmath.codec.Codec$.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/test/scala/Base16Spec.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/test/scala/Base32Spec.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/test/scala/Base64Spec.scala. This dependency is not being considered for invalidation.
The de.csmath.codec.StreamDecoder source file has the following regular definitions changed:
	flatten, filledStream, groupStreamAux, groupStream, groupBStreamAux, groupBStream, byteStream, StreamDecoder.
All member reference dependencies will be considered within this context.
Files invalidated by inheriting from (external) de.csmath.codec.StreamDecoder: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala); now invalidating by inheritance (internally).
Invalidating (transitively) by inheritance from /Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala...
Initial set of included nodes: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala)
Invalidated by transitive inheritance dependency: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala)
Getting direct dependencies of all sources transitively invalidated by inheritance.
Getting sources that directly depend on (external) de.csmath.codec.StreamDecoder.
The following modified names cause invalidation of /Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala: Set(StreamDecoder)
The de.csmath.codec.StreamCodec source file has the following regular definitions changed:
	intStream.
All member reference dependencies will be considered within this context.
Files invalidated by inheriting from (external) de.csmath.codec.StreamCodec: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala); now invalidating by inheritance (internally).
Invalidating (transitively) by inheritance from /Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala...
Initial set of included nodes: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala)
Invalidated by transitive inheritance dependency: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala)
Getting direct dependencies of all sources transitively invalidated by inheritance.
Getting sources that directly depend on (external) de.csmath.codec.StreamCodec.
The following modified names cause invalidation of /Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala: Set(intStream)

Initial source changes: 
	removed:Set()
	added: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamEncoderSpec.scala)
	modified: Set()
Removed products: Set()
External API changes: API Changes: Set(NamesChange(de.csmath.codec.Codec$,ModifiedNames(regularNames = needPads, implicitNames = )), NamesChange(de.csmath.codec.StreamDecoder,ModifiedNames(regularNames = flatten, filledStream, groupStreamAux, groupStream, groupBStreamAux, groupBStream, byteStream, StreamDecoder, implicitNames = )), NamesChange(de.csmath.codec.StreamCodec,ModifiedNames(regularNames = intStream, implicitNames = )))
Modified binary dependencies: Set()
Initial directly invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamEncoderSpec.scala)

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala, /Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala)
All initially invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala, /Users/lpfeiler/develop/github/base64/src/test/scala/StreamEncoderSpec.scala, /Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala)

Read from stdout: Compiling 3 Scala sources to /Users/lpfeiler/develop/github/base64/target/scala-2.11/test-classes...
Compiling 3 Scala sources to /Users/lpfeiler/develop/github/base64/target/scala-2.11/test-classes...
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Running cached compiler 666572a5, interfacing (CompilerInterface) with Scala compiler version 2.11.7
Calling Scala compiler with arguments  (CompilerInterface):
	-bootclasspath
	/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/classes:/Users/lpfeiler/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.11.7.jar
	-classpath
	/Users/lpfeiler/develop/github/base64/target/scala-2.11/test-classes:/Users/lpfeiler/develop/github/base64/target/scala-2.11/classes:/Users/lpfeiler/develop/scala/activator-dist-1.3.6/repository/org.scalatest/scalatest_2.11/2.2.4/bundles/scalatest_2.11.jar:/Users/lpfeiler/develop/scala/activator-dist-1.3.6/repository/org.scala-lang/scala-reflect/2.11.2/jars/scala-reflect.jar:/Users/lpfeiler/develop/scala/activator-dist-1.3.6/repository/org.scala-lang.modules/scala-xml_2.11/1.0.2/bundles/scala-xml_2.11.jar
Read from stdout: /Users/lpfeiler/develop/github/base64/src/test/scala/StreamEncoderSpec.scala:5: StreamCodecSpec is already defined as class StreamCodecSpec
/Users/lpfeiler/develop/github/base64/src/test/scala/StreamEncoderSpec.scala:5: StreamCodecSpec is already defined as class StreamCodecSpec
Read from stdout: class StreamCodecSpec extends FlatSpec with Matchers {
class StreamCodecSpec extends FlatSpec with Matchers {
Read from stdout: ^
      ^
Read from stdout: one error found
one error found
Compilation failed (CompilerInterface)
Read from stdout: (test:compileIncremental) Compilation failed
(test:compileIncremental) Compilation failed
Total time: 0 s, completed 01.06.2016 09:44:10
> server-post-command-error-handler
> server-post-command-cleanup
> server-handle-next-server-request
> compile
Evaluating tasks: compile:compile
Running task... Cancel: sbt.server.ServerTaskCancellation@1d0e5fd0, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set()
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set()

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set()

Total time: 0 s, completed 01.06.2016 09:44:53
> server-post-command-cleanup
> server-handle-next-server-request
> test
Evaluating tasks: test:test
Running task... Cancel: sbt.server.ServerTaskCancellation@e279ad8, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set()
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set()

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set()

Copy resource mappings: 
	
The de.csmath.codec.Codec$ source file has the following regular definitions changed:
	needPads.
All member reference dependencies will be considered within this context.
Files invalidated by inheriting from (external) de.csmath.codec.Codec$: Set(); now invalidating by inheritance (internally).
Getting direct dependencies of all sources transitively invalidated by inheritance.
Getting sources that directly depend on (external) de.csmath.codec.Codec$.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/test/scala/Base16Spec.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/test/scala/Base32Spec.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/test/scala/Base64Spec.scala. This dependency is not being considered for invalidation.
The de.csmath.codec.StreamDecoder source file has the following regular definitions changed:
	flatten, filledStream, groupStreamAux, groupStream, groupBStreamAux, groupBStream, byteStream, StreamDecoder.
All member reference dependencies will be considered within this context.
Files invalidated by inheriting from (external) de.csmath.codec.StreamDecoder: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala); now invalidating by inheritance (internally).
Invalidating (transitively) by inheritance from /Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala...
Initial set of included nodes: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala)
Invalidated by transitive inheritance dependency: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala)
Getting direct dependencies of all sources transitively invalidated by inheritance.
Getting sources that directly depend on (external) de.csmath.codec.StreamDecoder.
The following modified names cause invalidation of /Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala: Set(StreamDecoder)
The de.csmath.codec.StreamCodec source file has the following regular definitions changed:
	intStream.
All member reference dependencies will be considered within this context.
Files invalidated by inheriting from (external) de.csmath.codec.StreamCodec: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala); now invalidating by inheritance (internally).
Invalidating (transitively) by inheritance from /Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala...
Initial set of included nodes: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala)
Invalidated by transitive inheritance dependency: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala)
Getting direct dependencies of all sources transitively invalidated by inheritance.
Getting sources that directly depend on (external) de.csmath.codec.StreamCodec.
The following modified names cause invalidation of /Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala: Set(intStream)

Initial source changes: 
	removed:Set()
	added: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamEncoderSpec.scala)
	modified: Set()
Removed products: Set()
External API changes: API Changes: Set(NamesChange(de.csmath.codec.Codec$,ModifiedNames(regularNames = needPads, implicitNames = )), NamesChange(de.csmath.codec.StreamDecoder,ModifiedNames(regularNames = flatten, filledStream, groupStreamAux, groupStream, groupBStreamAux, groupBStream, byteStream, StreamDecoder, implicitNames = )), NamesChange(de.csmath.codec.StreamCodec,ModifiedNames(regularNames = intStream, implicitNames = )))
Modified binary dependencies: Set()
Initial directly invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamEncoderSpec.scala)

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala, /Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala)
All initially invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala, /Users/lpfeiler/develop/github/base64/src/test/scala/StreamEncoderSpec.scala, /Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala)

Read from stdout: Compiling 3 Scala sources to /Users/lpfeiler/develop/github/base64/target/scala-2.11/test-classes...
Compiling 3 Scala sources to /Users/lpfeiler/develop/github/base64/target/scala-2.11/test-classes...
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Running cached compiler 5a9ffc1a, interfacing (CompilerInterface) with Scala compiler version 2.11.7
Calling Scala compiler with arguments  (CompilerInterface):
	-bootclasspath
	/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/classes:/Users/lpfeiler/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.11.7.jar
	-classpath
	/Users/lpfeiler/develop/github/base64/target/scala-2.11/test-classes:/Users/lpfeiler/develop/github/base64/target/scala-2.11/classes:/Users/lpfeiler/develop/scala/activator-dist-1.3.6/repository/org.scalatest/scalatest_2.11/2.2.4/bundles/scalatest_2.11.jar:/Users/lpfeiler/develop/scala/activator-dist-1.3.6/repository/org.scala-lang/scala-reflect/2.11.2/jars/scala-reflect.jar:/Users/lpfeiler/develop/scala/activator-dist-1.3.6/repository/org.scala-lang.modules/scala-xml_2.11/1.0.2/bundles/scala-xml_2.11.jar
Read from stdout: /Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala:22: not found: value intStream
/Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala:22: not found: value intStream
Read from stdout: val s = intStream(list)
          val s = intStream(list)
Read from stdout: ^
                  ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala:34: not found: value intStream
/Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala:34: not found: value intStream
Read from stdout: val s = intStream(list)
          val s = intStream(list)
Read from stdout: ^
                  ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala:46: not found: value intStream
/Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala:46: not found: value intStream
Read from stdout: val s = intStream(list)
          val s = intStream(list)
Read from stdout: ^
                  ^
Read from stdout: three errors found
three errors found
Compilation failed (CompilerInterface)
Read from stdout: (test:compileIncremental) Compilation failed
(test:compileIncremental) Compilation failed
Total time: 1 s, completed 01.06.2016 09:44:54
> server-post-command-error-handler
> server-post-command-cleanup
> server-handle-next-server-request
> compile
Evaluating tasks: compile:compile
Running task... Cancel: sbt.server.ServerTaskCancellation@76d2e613, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set()
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set()

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set()

Total time: 0 s, completed 01.06.2016 09:45:22
> server-post-command-cleanup
> server-handle-next-server-request
> test
Evaluating tasks: test:test
Running task... Cancel: sbt.server.ServerTaskCancellation@64dcefc4, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set()
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set()

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set()

Copy resource mappings: 
	
The de.csmath.codec.Codec$ source file has the following regular definitions changed:
	needPads.
All member reference dependencies will be considered within this context.
Files invalidated by inheriting from (external) de.csmath.codec.Codec$: Set(); now invalidating by inheritance (internally).
Getting direct dependencies of all sources transitively invalidated by inheritance.
Getting sources that directly depend on (external) de.csmath.codec.Codec$.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/test/scala/Base16Spec.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/test/scala/Base32Spec.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/test/scala/Base64Spec.scala. This dependency is not being considered for invalidation.
The de.csmath.codec.StreamDecoder source file has the following regular definitions changed:
	flatten, filledStream, groupStreamAux, groupStream, groupBStreamAux, groupBStream, byteStream, StreamDecoder.
All member reference dependencies will be considered within this context.
Files invalidated by inheriting from (external) de.csmath.codec.StreamDecoder: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala); now invalidating by inheritance (internally).
Invalidating (transitively) by inheritance from /Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala...
Initial set of included nodes: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala)
Invalidated by transitive inheritance dependency: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala)
Getting direct dependencies of all sources transitively invalidated by inheritance.
Getting sources that directly depend on (external) de.csmath.codec.StreamDecoder.
The following modified names cause invalidation of /Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala: Set(StreamDecoder)
The de.csmath.codec.StreamCodec source file has the following regular definitions changed:
	intStream.
All member reference dependencies will be considered within this context.
Files invalidated by inheriting from (external) de.csmath.codec.StreamCodec: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala); now invalidating by inheritance (internally).
Invalidating (transitively) by inheritance from /Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala...
Initial set of included nodes: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala)
Invalidated by transitive inheritance dependency: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala)
Getting direct dependencies of all sources transitively invalidated by inheritance.
Getting sources that directly depend on (external) de.csmath.codec.StreamCodec.
The following modified names cause invalidation of /Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala: Set(intStream)

Initial source changes: 
	removed:Set()
	added: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamEncoderSpec.scala)
	modified: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala)
Removed products: Set()
External API changes: API Changes: Set(NamesChange(de.csmath.codec.Codec$,ModifiedNames(regularNames = needPads, implicitNames = )), NamesChange(de.csmath.codec.StreamDecoder,ModifiedNames(regularNames = flatten, filledStream, groupStreamAux, groupStream, groupBStreamAux, groupBStream, byteStream, StreamDecoder, implicitNames = )), NamesChange(de.csmath.codec.StreamCodec,ModifiedNames(regularNames = intStream, implicitNames = )))
Modified binary dependencies: Set()
Initial directly invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala, /Users/lpfeiler/develop/github/base64/src/test/scala/StreamEncoderSpec.scala)

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala, /Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala)
All initially invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala, /Users/lpfeiler/develop/github/base64/src/test/scala/StreamEncoderSpec.scala, /Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala)

Read from stdout: Compiling 3 Scala sources to /Users/lpfeiler/develop/github/base64/target/scala-2.11/test-classes...
Compiling 3 Scala sources to /Users/lpfeiler/develop/github/base64/target/scala-2.11/test-classes...
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Running cached compiler 6cc5917d, interfacing (CompilerInterface) with Scala compiler version 2.11.7
Calling Scala compiler with arguments  (CompilerInterface):
	-bootclasspath
	/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/classes:/Users/lpfeiler/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.11.7.jar
	-classpath
	/Users/lpfeiler/develop/github/base64/target/scala-2.11/test-classes:/Users/lpfeiler/develop/github/base64/target/scala-2.11/classes:/Users/lpfeiler/develop/scala/activator-dist-1.3.6/repository/org.scalatest/scalatest_2.11/2.2.4/bundles/scalatest_2.11.jar:/Users/lpfeiler/develop/scala/activator-dist-1.3.6/repository/org.scala-lang/scala-reflect/2.11.2/jars/scala-reflect.jar:/Users/lpfeiler/develop/scala/activator-dist-1.3.6/repository/org.scala-lang.modules/scala-xml_2.11/1.0.2/bundles/scala-xml_2.11.jar
Read from stdout: /Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala:22: not found: value intStream
/Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala:22: not found: value intStream
Read from stdout: val s = intStream(list)
          val s = intStream(list)
Read from stdout: ^
                  ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala:34: not found: value intStream
/Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala:34: not found: value intStream
Read from stdout: val s = intStream(list)
          val s = intStream(list)
Read from stdout: ^
                  ^
Read from stdout: two errors found
two errors found
Compilation failed (CompilerInterface)
Read from stdout: (test:compileIncremental) Compilation failed
(test:compileIncremental) Compilation failed
Total time: 1 s, completed 01.06.2016 09:45:23
> server-post-command-error-handler
> server-post-command-cleanup
> server-handle-next-server-request
> compile
Evaluating tasks: compile:compile
Running task... Cancel: sbt.server.ServerTaskCancellation@4b7097e7, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set()
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set()

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set()

Total time: 0 s, completed 01.06.2016 09:46:06
> server-post-command-cleanup
> server-handle-next-server-request
> test
Evaluating tasks: test:test
Running task... Cancel: sbt.server.ServerTaskCancellation@b8bd408, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set()
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set()

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set()

Copy resource mappings: 
	
The de.csmath.codec.Codec$ source file has the following regular definitions changed:
	needPads.
All member reference dependencies will be considered within this context.
Files invalidated by inheriting from (external) de.csmath.codec.Codec$: Set(); now invalidating by inheritance (internally).
Getting direct dependencies of all sources transitively invalidated by inheritance.
Getting sources that directly depend on (external) de.csmath.codec.Codec$.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/test/scala/Base16Spec.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/test/scala/Base32Spec.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/test/scala/Base64Spec.scala. This dependency is not being considered for invalidation.
The de.csmath.codec.StreamDecoder source file has the following regular definitions changed:
	flatten, filledStream, groupStreamAux, groupStream, groupBStreamAux, groupBStream, byteStream, StreamDecoder.
All member reference dependencies will be considered within this context.
Files invalidated by inheriting from (external) de.csmath.codec.StreamDecoder: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala); now invalidating by inheritance (internally).
Invalidating (transitively) by inheritance from /Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala...
Initial set of included nodes: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala)
Invalidated by transitive inheritance dependency: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala)
Getting direct dependencies of all sources transitively invalidated by inheritance.
Getting sources that directly depend on (external) de.csmath.codec.StreamDecoder.
The following modified names cause invalidation of /Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala: Set(StreamDecoder)
The de.csmath.codec.StreamCodec source file has the following regular definitions changed:
	intStream.
All member reference dependencies will be considered within this context.
Files invalidated by inheriting from (external) de.csmath.codec.StreamCodec: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala); now invalidating by inheritance (internally).
Invalidating (transitively) by inheritance from /Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala...
Initial set of included nodes: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala)
Invalidated by transitive inheritance dependency: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala)
Getting direct dependencies of all sources transitively invalidated by inheritance.
Getting sources that directly depend on (external) de.csmath.codec.StreamCodec.
The following modified names cause invalidation of /Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala: Set(intStream)

Initial source changes: 
	removed:Set()
	added: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamEncoderSpec.scala)
	modified: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala)
Removed products: Set()
External API changes: API Changes: Set(NamesChange(de.csmath.codec.Codec$,ModifiedNames(regularNames = needPads, implicitNames = )), NamesChange(de.csmath.codec.StreamDecoder,ModifiedNames(regularNames = flatten, filledStream, groupStreamAux, groupStream, groupBStreamAux, groupBStream, byteStream, StreamDecoder, implicitNames = )), NamesChange(de.csmath.codec.StreamCodec,ModifiedNames(regularNames = intStream, implicitNames = )))
Modified binary dependencies: Set()
Initial directly invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala, /Users/lpfeiler/develop/github/base64/src/test/scala/StreamEncoderSpec.scala)

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala, /Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala)
All initially invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala, /Users/lpfeiler/develop/github/base64/src/test/scala/StreamEncoderSpec.scala, /Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala)

Read from stdout: Compiling 3 Scala sources to /Users/lpfeiler/develop/github/base64/target/scala-2.11/test-classes...
Compiling 3 Scala sources to /Users/lpfeiler/develop/github/base64/target/scala-2.11/test-classes...
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Running cached compiler 14f73385, interfacing (CompilerInterface) with Scala compiler version 2.11.7
Calling Scala compiler with arguments  (CompilerInterface):
	-bootclasspath
	/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/classes:/Users/lpfeiler/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.11.7.jar
	-classpath
	/Users/lpfeiler/develop/github/base64/target/scala-2.11/test-classes:/Users/lpfeiler/develop/github/base64/target/scala-2.11/classes:/Users/lpfeiler/develop/scala/activator-dist-1.3.6/repository/org.scalatest/scalatest_2.11/2.2.4/bundles/scalatest_2.11.jar:/Users/lpfeiler/develop/scala/activator-dist-1.3.6/repository/org.scala-lang/scala-reflect/2.11.2/jars/scala-reflect.jar:/Users/lpfeiler/develop/scala/activator-dist-1.3.6/repository/org.scala-lang.modules/scala-xml_2.11/1.0.2/bundles/scala-xml_2.11.jar
Read from stdout: /Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala:20: match may not be exhaustive.
Read from stdout: It would fail on the following input: Failure(_)
/Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala:20: match may not be exhaustive.
It would fail on the following input: Failure(_)
Read from stdout: sc.t match {
      sc.t match {
Read from stdout: ^
         ^
Read from stdout: there were 27 feature warnings; re-run with -feature for details
there were 27 feature warnings; re-run with -feature for details
Read from stdout: two warnings found
two warnings found
Scala compilation took 1.790116432 s
Invalidating /Users/lpfeiler/develop/github/base64/src/test/scala/StreamEncoderSpec.scala...
Invalidating (transitively) by inheritance from /Users/lpfeiler/develop/github/base64/src/test/scala/StreamEncoderSpec.scala...
Initial set of included nodes: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamEncoderSpec.scala)
Invalidated by transitive inheritance dependency: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamEncoderSpec.scala)
The /Users/lpfeiler/develop/github/base64/src/test/scala/StreamEncoderSpec.scala source file has the following implicit definitions changed:
	convertToStringMustWrapper, convertToStringCanWrapper, convertToAnyShouldWrapper, convertNumericToPlusOrMinusWrapper, convertToEqualizer, convertToInAndIgnoreMethodsAfterTaggedAs, shorthandSharedTestRegistrationFunction, convertToRegexWrapper, unconstrainedEquality, convertToInAndIgnoreMethods, convertToStringShouldWrapper, convertSymbolToHavePropertyMatcherGenerator, shorthandTestRegistrationFunction.
All member reference dependencies will be considered within this context.
New invalidations:
	Set()
Initial set of included nodes: Set()
Previously invalidated, but (transitively) depend on new invalidations:
	Set()
All newly invalidated sources after taking into account (previously) recompiled sources:Set()
Copy resource mappings: 
	
Framework implementation 'org.scalacheck.ScalaCheckFramework' not present.
Framework implementation 'org.specs2.runner.Specs2Framework' not present.
Framework implementation 'org.specs2.runner.SpecsFramework' not present.
Framework implementation 'org.specs.runner.SpecsFramework' not present.
Framework implementation 'com.novocode.junit.JUnitFramework' not present.
Subclass fingerprints: List((org.scalatest.Suite,false,org.scalatest.tools.Framework$$anon$1@53005388))
Annotation fingerprints: List((org.scalatest.WrapWith,false,org.scalatest.tools.Framework$$anon$2@28a96b8e))
Running TaskDef(Base64Spec, org.scalatest.tools.Framework$$anon$1@53005388, false, [SuiteSelector])
Running TaskDef(StreamEncoderSpec, org.scalatest.tools.Framework$$anon$1@53005388, false, [SuiteSelector])
Running TaskDef(StreamCodecSpec, org.scalatest.tools.Framework$$anon$1@53005388, false, [SuiteSelector])
Running TaskDef(Base16Spec, org.scalatest.tools.Framework$$anon$1@53005388, false, [SuiteSelector])
Read from stdout: StreamCodecSpec:
Read from stdout: StreamCodec
Read from stdout: - should create a ByteStream
[32mStreamCodecSpec:[0m
[32mStreamCodec[0m
[32m- should create a ByteStream[0m
Running TaskDef(StreamDecoderSpec, org.scalatest.tools.Framework$$anon$1@53005388, false, [SuiteSelector])
Read from stdout: Base16Spec:
Read from stdout: Base16
Read from stdout: - should encode to BASE16
Read from stdout: StreamDecoderSpec:
Read from stdout: StreamDecoder
Read from stdout: - should check allowed bytes
[32mStreamDecoderSpec:[0m
[32mStreamDecoder[0m
[32m- should check allowed bytes[0m
[32mBase16Spec:[0m
Running TaskDef(Base32Spec, org.scalatest.tools.Framework$$anon$1@53005388, false, [SuiteSelector])
[32mBase16[0m
[32m- should encode to BASE16[0m
Read from stdout: StreamEncoderSpec:
Read from stdout: StreamEncoder
Read from stdout: - should create a ByteStream
Read from stdout: StreamEncoder
Read from stdout: - should create a IntStream
Read from stdout: StreamEncoder
Read from stdout: - should create a groupStream
Read from stdout: StreamEncoder
Read from stdout: - should create a filledStream
Read from stdout: StreamEncoder
Read from stdout: - should flatten a filledStream
[32mStreamEncoderSpec:[0m
[32mStreamEncoder[0m
[32m- should create a ByteStream[0m
[32mStreamEncoder[0m
[32m- should create a IntStream[0m
[32mStreamEncoder[0m
[32m- should create a groupStream[0m
[32mStreamEncoder[0m
[32m- should create a filledStream[0m
[32mStreamEncoder[0m
[32m- should flatten a filledStream[0m
Read from stdout: Base64Spec:
Read from stdout: Base64
Read from stdout: - should encode to BASE64
Read from stdout: Base64
Read from stdout: - should encode to BASE64FILE
Read from stdout: Base64
Read from stdout: - should encode to BASE64URL
Read from stdout: Base64
Read from stdout: - should encode to BASE64NOPAD
Read from stdout: Base64
Read from stdout: - should encode to BASE64FILENOPAD
Read from stdout: Base64
Read from stdout: - should encode to BASE64URLNOPAD
Read from stdout: Base64
Read from stdout: - should decode from BASE64
Read from stdout: Base64
Read from stdout: - should decode from BASE64 w/o padding
Read from stdout: Base64
Read from stdout: - should fail with crap
Read from stdout: Base64
Read from stdout: - should decode from BASE64FILE
Read from stdout: Base64
Read from stdout: - should decode from BASE64FILE w/o padding
Read from stdout: Base64
Read from stdout: - should decode from BASE64URL
Read from stdout: Base32Spec:
Read from stdout: Base32
Read from stdout: - should encode to BASE32
[32mBase64Spec:[0m
[32mBase64[0m
Read from stdout: Base32
Read from stdout: - should encode to BASE32NOPAD
[32m- should encode to BASE64[0m
Read from stdout: Base32
Read from stdout: - should encode to BASE32URL
[32mBase64[0m
[32m- should encode to BASE64FILE[0m
Read from stdout: Base32
[32mBase64[0m
[32m- should encode to BASE64URL[0m
Read from stdout: - should encode to BASE32HEX
Read from stdout: Base32
Read from stdout: - should encode to BASE32HEXNOPAD
Read from stdout: Base32
[32mBase64[0m
Read from stdout: - should encode to BASE32HEXURL
Read from stdout: Base32
Read from stdout: - should decode from BASE32
Read from stdout: Base32
[32m- should encode to BASE64NOPAD[0m
Read from stdout: - should decode from BASE32 w/o padding
Read from stdout: Base32
[32mBase64[0m
Read from stdout: - should decode from BASE32URL
Read from stdout: Base32
Read from stdout: - should decode from BASE32HEX
Read from stdout: Base32
Read from stdout: - should decode from BASE32HEX w/o padding
Read from stdout: Base32
Read from stdout: - should decode from BASE32HEXURL
[32m- should encode to BASE64FILENOPAD[0m
[32mBase64[0m
[32mBase32Spec:[0m
[32mBase32[0m
[32m- should encode to BASE32[0m
[32mBase32[0m
[32m- should encode to BASE32NOPAD[0m
[32mBase32[0m
[32m- should encode to BASE32URL[0m
[32m- should encode to BASE64URLNOPAD[0m
[32mBase64[0m
[32mBase32[0m
[32m- should decode from BASE64[0m
[32m- should encode to BASE32HEX[0m
[32mBase32[0m
[32m- should encode to BASE32HEXNOPAD[0m
[32mBase32[0m
[32m- should encode to BASE32HEXURL[0m
[32mBase32[0m
[32m- should decode from BASE32[0m
[32mBase64[0m
[32mBase32[0m
[32m- should decode from BASE64 w/o padding[0m
[32m- should decode from BASE32 w/o padding[0m
[32mBase64[0m
[32m- should fail with crap[0m
[32mBase32[0m
[32mBase64[0m
[32m- should decode from BASE32URL[0m
[32m- should decode from BASE64FILE[0m
[32mBase32[0m
[32m- should decode from BASE32HEX[0m
[32mBase32[0m
[32m- should decode from BASE32HEX w/o padding[0m
[32mBase32[0m
[32m- should decode from BASE32HEXURL[0m
[32mBase64[0m
[32m- should decode from BASE64FILE w/o padding[0m
[32mBase64[0m
[32m- should decode from BASE64URL[0m
Read from stdout: Run completed in 564 milliseconds.
Read from stdout: Total number of tests run: 32
Read from stdout: Suites: completed 6, aborted 0
Read from stdout: Tests: succeeded 32, failed 0, canceled 0, ignored 0, pending 0
Read from stdout: All tests passed.
Run completed in 564 milliseconds.
Total number of tests run: 32
Suites: completed 6, aborted 0
Tests: succeeded 32, failed 0, canceled 0, ignored 0, pending 0
All tests passed.
Passed tests:
	StreamEncoderSpec
	StreamCodecSpec
	Base64Spec
	StreamDecoderSpec
	Base32Spec
	Base16Spec
Total time: 3 s, completed 01.06.2016 09:46:09
> server-post-command-cleanup
> server-handle-next-server-request
> compile
Evaluating tasks: compile:compile
Running task... Cancel: sbt.server.ServerTaskCancellation@5dffa037, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamCodec.scala)
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamCodec.scala)

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamCodec.scala)

Read from stdout: Compiling 1 Scala source to /Users/lpfeiler/develop/github/base64/target/scala-2.11/classes...
Compiling 1 Scala source to /Users/lpfeiler/develop/github/base64/target/scala-2.11/classes...
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Running cached compiler 33f0d5, interfacing (CompilerInterface) with Scala compiler version 2.11.7
Calling Scala compiler with arguments  (CompilerInterface):
	-bootclasspath
	/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/classes:/Users/lpfeiler/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.11.7.jar
	-classpath
	/Users/lpfeiler/develop/github/base64/target/scala-2.11/classes
Read from stdout: /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamCodec.scala:32: not found: value byteStream
/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamCodec.scala:32: not found: value byteStream
Read from stdout: s map (byteStream) flatten
        s map (byteStream) flatten
Read from stdout: ^
               ^
Read from stdout: one error found
one error found
Compilation failed (CompilerInterface)
Read from stdout: (compile:compileIncremental) Compilation failed
(compile:compileIncremental) Compilation failed
Total time: 1 s, completed 01.06.2016 09:54:10
> server-post-command-error-handler
> server-post-command-cleanup
> server-handle-next-server-request
> compile
Evaluating tasks: compile:compile
Running task... Cancel: sbt.server.ServerTaskCancellation@798bc6a3, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamCodec.scala)
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamCodec.scala)

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamCodec.scala)

Read from stdout: Compiling 1 Scala source to /Users/lpfeiler/develop/github/base64/target/scala-2.11/classes...
Compiling 1 Scala source to /Users/lpfeiler/develop/github/base64/target/scala-2.11/classes...
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Running cached compiler 115a1213, interfacing (CompilerInterface) with Scala compiler version 2.11.7
Calling Scala compiler with arguments  (CompilerInterface):
	-bootclasspath
	/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/classes:/Users/lpfeiler/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.11.7.jar
	-classpath
	/Users/lpfeiler/develop/github/base64/target/scala-2.11/classes
Read from stdout: /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamCodec.scala:32: not found: value byteStream
/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamCodec.scala:32: not found: value byteStream
Read from stdout: s map (byteStream) flatten
        s map (byteStream) flatten
Read from stdout: ^
               ^
Read from stdout: one error found
one error found
Compilation failed (CompilerInterface)
Read from stdout: (compile:compileIncremental) Compilation failed
(compile:compileIncremental) Compilation failed
Total time: 0 s, completed 01.06.2016 09:54:29
> server-post-command-error-handler
> server-post-command-cleanup
> server-handle-next-server-request
> compile
Evaluating tasks: compile:compile
Running task... Cancel: sbt.server.ServerTaskCancellation@78668ed4, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set()
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set()

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set()

Total time: 0 s, completed 01.06.2016 09:55:56
> server-post-command-cleanup
> server-handle-next-server-request
> test
Evaluating tasks: test:test
Running task... Cancel: sbt.server.ServerTaskCancellation@516f3351, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set()
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set()

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set()

Copy resource mappings: 
	
The de.csmath.codec.Codec$ source file has the following regular definitions changed:
	needPads.
All member reference dependencies will be considered within this context.
Files invalidated by inheriting from (external) de.csmath.codec.Codec$: Set(); now invalidating by inheritance (internally).
Getting direct dependencies of all sources transitively invalidated by inheritance.
Getting sources that directly depend on (external) de.csmath.codec.Codec$.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/test/scala/Base16Spec.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/test/scala/Base32Spec.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/test/scala/Base64Spec.scala. This dependency is not being considered for invalidation.

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala)
Removed products: Set()
External API changes: API Changes: Set(NamesChange(de.csmath.codec.Codec$,ModifiedNames(regularNames = needPads, implicitNames = )))
Modified binary dependencies: Set()
Initial directly invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala)

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala)

Read from stdout: Compiling 1 Scala source to /Users/lpfeiler/develop/github/base64/target/scala-2.11/test-classes...
Compiling 1 Scala source to /Users/lpfeiler/develop/github/base64/target/scala-2.11/test-classes...
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Running cached compiler 5bdae65f, interfacing (CompilerInterface) with Scala compiler version 2.11.7
Calling Scala compiler with arguments  (CompilerInterface):
	-bootclasspath
	/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/classes:/Users/lpfeiler/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.11.7.jar
	-classpath
	/Users/lpfeiler/develop/github/base64/target/scala-2.11/test-classes:/Users/lpfeiler/develop/github/base64/target/scala-2.11/classes:/Users/lpfeiler/develop/scala/activator-dist-1.3.6/repository/org.scalatest/scalatest_2.11/2.2.4/bundles/scalatest_2.11.jar:/Users/lpfeiler/develop/scala/activator-dist-1.3.6/repository/org.scala-lang/scala-reflect/2.11.2/jars/scala-reflect.jar:/Users/lpfeiler/develop/scala/activator-dist-1.3.6/repository/org.scala-lang.modules/scala-xml_2.11/1.0.2/bundles/scala-xml_2.11.jar
Scala compilation took 0.791230478 s
New invalidations:
	Set()
Initial set of included nodes: Set()
Previously invalidated, but (transitively) depend on new invalidations:
	Set()
All newly invalidated sources after taking into account (previously) recompiled sources:Set()
Copy resource mappings: 
	
Framework implementation 'org.scalacheck.ScalaCheckFramework' not present.
Framework implementation 'org.specs2.runner.Specs2Framework' not present.
Framework implementation 'org.specs2.runner.SpecsFramework' not present.
Framework implementation 'org.specs.runner.SpecsFramework' not present.
Framework implementation 'com.novocode.junit.JUnitFramework' not present.
Subclass fingerprints: List((org.scalatest.Suite,false,org.scalatest.tools.Framework$$anon$1@244c3b68))
Annotation fingerprints: List((org.scalatest.WrapWith,false,org.scalatest.tools.Framework$$anon$2@43cfbc65))
Running TaskDef(Base32Spec, org.scalatest.tools.Framework$$anon$1@244c3b68, false, [SuiteSelector])
Running TaskDef(StreamCodecSpec, org.scalatest.tools.Framework$$anon$1@244c3b68, false, [SuiteSelector])
Running TaskDef(Base16Spec, org.scalatest.tools.Framework$$anon$1@244c3b68, false, [SuiteSelector])
Running TaskDef(StreamEncoderSpec, org.scalatest.tools.Framework$$anon$1@244c3b68, false, [SuiteSelector])
Read from stdout: StreamCodecSpec:
[32mStreamCodecSpec:[0m
Running TaskDef(StreamDecoderSpec, org.scalatest.tools.Framework$$anon$1@244c3b68, false, [SuiteSelector])
Read from stdout: StreamDecoderSpec:
Read from stdout: StreamDecoder
Read from stdout: - should check allowed bytes
[32mStreamDecoderSpec:[0m
[32mStreamDecoder[0m
[32m- should check allowed bytes[0m
Read from stdout: Base16Spec:
Read from stdout: Base16
Read from stdout: - should encode to BASE16
[32mBase16Spec:[0m
[32mBase16[0m
[32m- should encode to BASE16[0m
Running TaskDef(Base64Spec, org.scalatest.tools.Framework$$anon$1@244c3b68, false, [SuiteSelector])
Read from stdout: StreamEncoderSpec:
Read from stdout: StreamEncoder
Read from stdout: - should create a ByteStream
Read from stdout: StreamEncoder
Read from stdout: - should create a IntStream
Read from stdout: StreamEncoder
Read from stdout: - should create a groupStream
Read from stdout: StreamEncoder
Read from stdout: - should create a filledStream
Read from stdout: StreamEncoder
Read from stdout: - should flatten a filledStream
[32mStreamEncoderSpec:[0m
[32mStreamEncoder[0m
[32m- should create a ByteStream[0m
[32mStreamEncoder[0m
[32m- should create a IntStream[0m
[32mStreamEncoder[0m
[32m- should create a groupStream[0m
[32mStreamEncoder[0m
[32m- should create a filledStream[0m
[32mStreamEncoder[0m
[32m- should flatten a filledStream[0m
Read from stdout: Base32Spec:
Read from stdout: Base32
Read from stdout: - should encode to BASE32
Read from stdout: Base32
Read from stdout: - should encode to BASE32NOPAD
Read from stdout: Base32
Read from stdout: - should encode to BASE32URL
Read from stdout: Base32
Read from stdout: - should encode to BASE32HEX
Read from stdout: Base32
Read from stdout: - should encode to BASE32HEXNOPAD
Read from stdout: Base32
Read from stdout: - should encode to BASE32HEXURL
Read from stdout: Base32
Read from stdout: - should decode from BASE32
Read from stdout: Base32
Read from stdout: - should decode from BASE32 w/o padding
Read from stdout: Base32
Read from stdout: - should decode from BASE32URL
Read from stdout: Base32
Read from stdout: - should decode from BASE32HEX
Read from stdout: Base32
Read from stdout: - should decode from BASE32HEX w/o padding
Read from stdout: Base32
Read from stdout: - should decode from BASE32HEXURL
[32mBase32Spec:[0m
[32mBase32[0m
[32m- should encode to BASE32[0m
[32mBase32[0m
[32m- should encode to BASE32NOPAD[0m
[32mBase32[0m
[32m- should encode to BASE32URL[0m
[32mBase32[0m
[32m- should encode to BASE32HEX[0m
[32mBase32[0m
Read from stdout: Base64Spec:
Read from stdout: Base64
Read from stdout: - should encode to BASE64
Read from stdout: Base64
Read from stdout: - should encode to BASE64FILE
Read from stdout: Base64
Read from stdout: - should encode to BASE64URL
Read from stdout: Base64
Read from stdout: - should encode to BASE64NOPAD
[32m- should encode to BASE32HEXNOPAD[0m
[32mBase32[0m
[32m- should encode to BASE32HEXURL[0m
[32mBase32[0m
[32m- should decode from BASE32[0m
[32mBase32[0m
[32m- should decode from BASE32 w/o padding[0m
Read from stdout: Base64
[32mBase32[0m
[32m- should decode from BASE32URL[0m
[32mBase32[0m
[32m- should decode from BASE32HEX[0m
Read from stdout: - should encode to BASE64FILENOPAD
[32mBase32[0m
[32m- should decode from BASE32HEX w/o padding[0m
[32mBase32[0m
[32m- should decode from BASE32HEXURL[0m
Read from stdout: Base64
Read from stdout: - should encode to BASE64URLNOPAD
Read from stdout: Base64
Read from stdout: - should decode from BASE64
Read from stdout: Base64
Read from stdout: - should decode from BASE64 w/o padding
Read from stdout: Base64
Read from stdout: - should fail with crap
Read from stdout: Base64
Read from stdout: - should decode from BASE64FILE
Read from stdout: Base64
Read from stdout: - should decode from BASE64FILE w/o padding
Read from stdout: Base64
Read from stdout: - should decode from BASE64URL
[32mBase64Spec:[0m
[32mBase64[0m
[32m- should encode to BASE64[0m
[32mBase64[0m
[32m- should encode to BASE64FILE[0m
[32mBase64[0m
[32m- should encode to BASE64URL[0m
[32mBase64[0m
[32m- should encode to BASE64NOPAD[0m
[32mBase64[0m
[32m- should encode to BASE64FILENOPAD[0m
[32mBase64[0m
[32m- should encode to BASE64URLNOPAD[0m
[32mBase64[0m
[32m- should decode from BASE64[0m
[32mBase64[0m
[32m- should decode from BASE64 w/o padding[0m
[32mBase64[0m
[32m- should fail with crap[0m
[32mBase64[0m
[32m- should decode from BASE64FILE[0m
[32mBase64[0m
[32m- should decode from BASE64FILE w/o padding[0m
[32mBase64[0m
[32m- should decode from BASE64URL[0m
Read from stdout: Run completed in 511 milliseconds.
Read from stdout: Total number of tests run: 31
Read from stdout: Suites: completed 6, aborted 0
Read from stdout: Tests: succeeded 31, failed 0, canceled 0, ignored 0, pending 0
Read from stdout: All tests passed.
Run completed in 511 milliseconds.
Total number of tests run: 31
Suites: completed 6, aborted 0
Tests: succeeded 31, failed 0, canceled 0, ignored 0, pending 0
All tests passed.
Passed tests:
	StreamEncoderSpec
	StreamCodecSpec
	Base64Spec
	StreamDecoderSpec
	Base32Spec
	Base16Spec
Total time: 2 s, completed 01.06.2016 09:55:58
> server-post-command-cleanup
> server-handle-next-server-request
> compile
Evaluating tasks: compile:compile
Running task... Cancel: sbt.server.ServerTaskCancellation@3b2f1b9a, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamEncoder.scala)
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamEncoder.scala)

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamEncoder.scala)

Read from stdout: Compiling 1 Scala source to /Users/lpfeiler/develop/github/base64/target/scala-2.11/classes...
Compiling 1 Scala source to /Users/lpfeiler/develop/github/base64/target/scala-2.11/classes...
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Running cached compiler 10402567, interfacing (CompilerInterface) with Scala compiler version 2.11.7
Calling Scala compiler with arguments  (CompilerInterface):
	-bootclasspath
	/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/classes:/Users/lpfeiler/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.11.7.jar
	-classpath
	/Users/lpfeiler/develop/github/base64/target/scala-2.11/classes
Read from stdout: /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamEncoder.scala:15: overriding method groupStream in trait StreamCodec of type (groupSize: Int, s: Stream[Int])Stream[Seq[Int]];
Read from stdout: method groupStream needs `override' modifier
/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamEncoder.scala:15: overriding method groupStream in trait StreamCodec of type (groupSize: Int, s: Stream[Int])Stream[Seq[Int]];
 method groupStream needs `override' modifier
Read from stdout: protected def groupStream(groupSize: Int, s: Stream[Int]): Stream[Seq[Int]] =
    protected def groupStream(groupSize: Int, s: Stream[Int]): Stream[Seq[Int]] =
Read from stdout: ^
                  ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamEncoder.scala:18: overriding method groupStreamAux in trait StreamCodec of type (i: Iterator[Stream[Int]])Stream[Seq[Int]];
Read from stdout: method groupStreamAux needs `override' modifier
/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamEncoder.scala:18: overriding method groupStreamAux in trait StreamCodec of type (i: Iterator[Stream[Int]])Stream[Seq[Int]];
 method groupStreamAux needs `override' modifier
Read from stdout: protected def groupStreamAux(i: Iterator[Stream[Int]]): Stream[Seq[Int]] =
    protected def groupStreamAux(i: Iterator[Stream[Int]]): Stream[Seq[Int]] =
Read from stdout: ^
                  ^
Read from stdout: two errors found
two errors found
Compilation failed (CompilerInterface)
Read from stdout: (compile:compileIncremental) Compilation failed
(compile:compileIncremental) Compilation failed
Total time: 0 s, completed 01.06.2016 09:57:19
> server-post-command-error-handler
> server-post-command-cleanup
> server-handle-next-server-request
> compile
Evaluating tasks: compile:compile
Running task... Cancel: sbt.server.ServerTaskCancellation@622fe087, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamCodec.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamEncoder.scala)
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamCodec.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamEncoder.scala)

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamCodec.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamEncoder.scala)

Read from stdout: Compiling 2 Scala sources to /Users/lpfeiler/develop/github/base64/target/scala-2.11/classes...
Compiling 2 Scala sources to /Users/lpfeiler/develop/github/base64/target/scala-2.11/classes...
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Running cached compiler f104758, interfacing (CompilerInterface) with Scala compiler version 2.11.7
Calling Scala compiler with arguments  (CompilerInterface):
	-bootclasspath
	/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/classes:/Users/lpfeiler/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.11.7.jar
	-classpath
	/Users/lpfeiler/develop/github/base64/target/scala-2.11/classes
Read from stdout: there was one feature warning; re-run with -feature for details
there was one feature warning; re-run with -feature for details
Read from stdout: one warning found
one warning found
Scala compilation took 0.57957316 s
Invalidating /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamCodec.scala...
Invalidating (transitively) by inheritance from /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamCodec.scala...
Initial set of included nodes: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamCodec.scala)
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamEncoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamCodec.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNEncoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamEncoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Encoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNEncoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlEncoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Encoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexEncoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Encoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlEncoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexEncoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base16Encoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNEncoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Encoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNEncoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileEncoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Encoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlEncoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileEncoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamCodec.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamDecoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Decoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Decoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/PercentDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamDecoder.scala
Invalidated by transitive inheritance dependency: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Encoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Decoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamCodec.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base16Encoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Encoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/PercentDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexEncoder.scala)
The /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamCodec.scala source file has the following regular definitions changed:
	groupStreamAux, groupStream.
All member reference dependencies will be considered within this context.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileEncoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/PercentDecoder.scala. This dependency is not being considered for invalidation.
The following modified names cause invalidation of /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamEncoder.scala: Set(groupStreamAux)
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamDecoder.scala. This dependency is not being considered for invalidation.
The following modified names cause invalidation of /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNEncoder.scala: Set(groupStream)
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Encoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseN.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base16Encoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base16.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Encoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base16.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlEncoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlEncoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexEncoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala. This dependency is not being considered for invalidation.
The following modified names cause invalidation of /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNEncoder.scala: Set(groupStream)
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseN.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Decoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlEncoder.scala. This dependency is not being considered for invalidation.
Invalidating /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamEncoder.scala...
Invalidating (transitively) by inheritance from /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamEncoder.scala...
Initial set of included nodes: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamEncoder.scala)
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNEncoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamEncoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Encoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNEncoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlEncoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Encoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexEncoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Encoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlEncoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexEncoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base16Encoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNEncoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Encoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNEncoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileEncoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Encoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlEncoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileEncoder.scala
Invalidated by transitive inheritance dependency: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Encoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base16Encoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Encoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexEncoder.scala)
The /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamEncoder.scala source file has the following regular definitions changed:
	.
All member reference dependencies will be considered within this context.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileEncoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Encoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseN.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base16Encoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base16.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Encoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base16.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlEncoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlEncoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexEncoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNEncoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlEncoder.scala. This dependency is not being considered for invalidation.
New invalidations:
	Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Encoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Decoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base16Encoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Encoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/PercentDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexEncoder.scala)
Initial set of included nodes: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Encoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Decoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base16Encoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Encoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/PercentDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexEncoder.scala)
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Encoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileEncoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Encoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlEncoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileEncoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Decoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlEncoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamDecoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseN.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base16.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseN.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/PercentDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamDecoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base16Encoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNEncoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Encoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNEncoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlEncoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Encoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexEncoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Encoder.scala
Previously invalidated, but (transitively) depend on new invalidations:
	Set()
All newly invalidated sources after taking into account (previously) recompiled sources:Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Encoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Decoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base16Encoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Encoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/PercentDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexEncoder.scala)
Recompiling all 27 sources: invalidated sources (19) exceeded 50.0% of all sources
Read from stdout: Compiling 27 Scala sources to /Users/lpfeiler/develop/github/base64/target/scala-2.11/classes...
Compiling 27 Scala sources to /Users/lpfeiler/develop/github/base64/target/scala-2.11/classes...
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Running cached compiler 3b55c270, interfacing (CompilerInterface) with Scala compiler version 2.11.7
Calling Scala compiler with arguments  (CompilerInterface):
	-bootclasspath
	/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/classes:/Users/lpfeiler/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.11.7.jar
	-classpath
	/Users/lpfeiler/develop/github/base64/target/scala-2.11/classes
Read from stdout: there were four feature warnings; re-run with -feature for details
there were four feature warnings; re-run with -feature for details
Read from stdout: one warning found
one warning found
Scala compilation took 2.311413227 s
Invalidating /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala...
Invalidating (transitively) by inheritance from /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala...
Initial set of included nodes: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala)
Invalidated by transitive inheritance dependency: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala)
The /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala source file has the following regular definitions changed:
	groupStream, groupStreamAux.
All member reference dependencies will be considered within this context.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
Invalidating /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamDecoder.scala...
Invalidating (transitively) by inheritance from /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamDecoder.scala...
Initial set of included nodes: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamDecoder.scala)
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamDecoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Decoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Decoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/PercentDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamDecoder.scala
Invalidated by transitive inheritance dependency: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Decoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/PercentDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala)
The /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamDecoder.scala source file has the following regular definitions changed:
	groupStreamAux, groupStream.
All member reference dependencies will be considered within this context.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/PercentDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseN.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Decoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala. This dependency is not being considered for invalidation.
Invalidating /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala...
Invalidating (transitively) by inheritance from /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala...
Initial set of included nodes: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala)
Invalidated by transitive inheritance dependency: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala)
The /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala source file has the following regular definitions changed:
	groupStream, groupStreamAux.
All member reference dependencies will be considered within this context.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
Invalidating /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/PercentDecoder.scala...
Invalidating (transitively) by inheritance from /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/PercentDecoder.scala...
Initial set of included nodes: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/PercentDecoder.scala)
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/PercentDecoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/PercentDecoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/PercentDecoder.scala
Invalidated by transitive inheritance dependency: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/PercentDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala)
The /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/PercentDecoder.scala source file has the following regular definitions changed:
	groupStream, groupStreamAux.
All member reference dependencies will be considered within this context.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
Invalidating /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Decoder.scala...
Invalidating (transitively) by inheritance from /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Decoder.scala...
Initial set of included nodes: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Decoder.scala)
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Decoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala
Invalidated by transitive inheritance dependency: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Decoder.scala)
The /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Decoder.scala source file has the following regular definitions changed:
	groupStream, groupStreamAux.
All member reference dependencies will be considered within this context.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
Invalidating /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala...
Invalidating (transitively) by inheritance from /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala...
Initial set of included nodes: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala)
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala
Invalidated by transitive inheritance dependency: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala)
The /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala source file has the following regular definitions changed:
	groupStream, groupStreamAux.
All member reference dependencies will be considered within this context.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
Invalidating /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala...
Invalidating (transitively) by inheritance from /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala...
Initial set of included nodes: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala)
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Decoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Decoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala
Invalidated by transitive inheritance dependency: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Decoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala)
The /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala source file has the following regular definitions changed:
	groupStreamAux, groupStream.
All member reference dependencies will be considered within this context.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseN.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Decoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala. This dependency is not being considered for invalidation.
Invalidating /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala...
Invalidating (transitively) by inheritance from /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala...
Initial set of included nodes: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala)
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala
Invalidated by transitive inheritance dependency: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala)
The /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala source file has the following regular definitions changed:
	groupStream, groupStreamAux.
All member reference dependencies will be considered within this context.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
Invalidating /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala...
Invalidating (transitively) by inheritance from /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala...
Initial set of included nodes: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala)
Invalidated by transitive inheritance dependency: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala)
The /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala source file has the following regular definitions changed:
	groupStream, groupStreamAux.
All member reference dependencies will be considered within this context.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
Invalidating /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala...
Invalidating (transitively) by inheritance from /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala...
Initial set of included nodes: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala)
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala
Invalidated by transitive inheritance dependency: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala)
The /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala source file has the following regular definitions changed:
	groupStreamAux, groupStream.
All member reference dependencies will be considered within this context.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
New invalidations:
	Set()
Initial set of included nodes: Set()
Previously invalidated, but (transitively) depend on new invalidations:
	Set()
All newly invalidated sources after taking into account (previously) recompiled sources:Set()
Total time: 3 s, completed 01.06.2016 09:57:25
> server-post-command-cleanup
> server-handle-next-server-request
> compile
Evaluating tasks: compile:compile
Running task... Cancel: sbt.server.ServerTaskCancellation@3c3c4949, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set()
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set()

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set()

Total time: 0 s, completed 01.06.2016 09:57:36
> server-post-command-cleanup
> server-handle-next-server-request
> test
Evaluating tasks: test:test
Running task... Cancel: sbt.server.ServerTaskCancellation@3ae6ec76, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set()
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set()

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set()

Copy resource mappings: 
	
The de.csmath.codec.Codec$ source file has the following regular definitions changed:
	needPads.
All member reference dependencies will be considered within this context.
Files invalidated by inheriting from (external) de.csmath.codec.Codec$: Set(); now invalidating by inheritance (internally).
Getting direct dependencies of all sources transitively invalidated by inheritance.
Getting sources that directly depend on (external) de.csmath.codec.Codec$.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/test/scala/Base16Spec.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/test/scala/Base32Spec.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/test/scala/Base64Spec.scala. This dependency is not being considered for invalidation.
The de.csmath.codec.StreamEncoder source file has the following regular definitions changed:
	.
All member reference dependencies will be considered within this context.
Files invalidated by inheriting from (external) de.csmath.codec.StreamEncoder: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamEncoderSpec.scala); now invalidating by inheritance (internally).
Invalidating (transitively) by inheritance from /Users/lpfeiler/develop/github/base64/src/test/scala/StreamEncoderSpec.scala...
Initial set of included nodes: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamEncoderSpec.scala)
Invalidated by transitive inheritance dependency: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamEncoderSpec.scala)
Getting direct dependencies of all sources transitively invalidated by inheritance.
Getting sources that directly depend on (external) de.csmath.codec.StreamEncoder.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/test/scala/StreamEncoderSpec.scala. This dependency is not being considered for invalidation.
The de.csmath.codec.StreamDecoder source file has the following regular definitions changed:
	groupStreamAux, groupStream.
All member reference dependencies will be considered within this context.
Files invalidated by inheriting from (external) de.csmath.codec.StreamDecoder: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala); now invalidating by inheritance (internally).
Invalidating (transitively) by inheritance from /Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala...
Initial set of included nodes: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala)
Invalidated by transitive inheritance dependency: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala)
Getting direct dependencies of all sources transitively invalidated by inheritance.
Getting sources that directly depend on (external) de.csmath.codec.StreamDecoder.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala. This dependency is not being considered for invalidation.
The de.csmath.codec.StreamCodec source file has the following regular definitions changed:
	groupStreamAux, groupStream.
All member reference dependencies will be considered within this context.
Files invalidated by inheriting from (external) de.csmath.codec.StreamCodec: Set(); now invalidating by inheritance (internally).
Getting direct dependencies of all sources transitively invalidated by inheritance.
Getting sources that directly depend on (external) de.csmath.codec.StreamCodec.
The following modified names cause invalidation of /Users/lpfeiler/develop/github/base64/src/test/scala/StreamEncoderSpec.scala: Set(groupStream)

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set()
Removed products: Set()
External API changes: API Changes: Set(NamesChange(de.csmath.codec.Codec$,ModifiedNames(regularNames = needPads, implicitNames = )), NamesChange(de.csmath.codec.StreamEncoder,ModifiedNames(regularNames = , implicitNames = )), NamesChange(de.csmath.codec.StreamDecoder,ModifiedNames(regularNames = groupStreamAux, groupStream, implicitNames = )), NamesChange(de.csmath.codec.StreamCodec,ModifiedNames(regularNames = groupStreamAux, groupStream, implicitNames = )))
Modified binary dependencies: Set()
Initial directly invalidated sources: Set()

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamEncoderSpec.scala, /Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala)
All initially invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamEncoderSpec.scala, /Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala)

Read from stdout: Compiling 2 Scala sources to /Users/lpfeiler/develop/github/base64/target/scala-2.11/test-classes...
Compiling 2 Scala sources to /Users/lpfeiler/develop/github/base64/target/scala-2.11/test-classes...
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Running cached compiler 4e04a5d5, interfacing (CompilerInterface) with Scala compiler version 2.11.7
Calling Scala compiler with arguments  (CompilerInterface):
	-bootclasspath
	/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/classes:/Users/lpfeiler/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.11.7.jar
	-classpath
	/Users/lpfeiler/develop/github/base64/target/scala-2.11/test-classes:/Users/lpfeiler/develop/github/base64/target/scala-2.11/classes:/Users/lpfeiler/develop/scala/activator-dist-1.3.6/repository/org.scalatest/scalatest_2.11/2.2.4/bundles/scalatest_2.11.jar:/Users/lpfeiler/develop/scala/activator-dist-1.3.6/repository/org.scala-lang/scala-reflect/2.11.2/jars/scala-reflect.jar:/Users/lpfeiler/develop/scala/activator-dist-1.3.6/repository/org.scala-lang.modules/scala-xml_2.11/1.0.2/bundles/scala-xml_2.11.jar
Read from stdout: /Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala:20: match may not be exhaustive.
Read from stdout: It would fail on the following input: Failure(_)
/Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala:20: match may not be exhaustive.
It would fail on the following input: Failure(_)
Read from stdout: sc.t match {
      sc.t match {
Read from stdout: ^
         ^
Read from stdout: there were 23 feature warnings; re-run with -feature for details
there were 23 feature warnings; re-run with -feature for details
Read from stdout: two warnings found
two warnings found
Scala compilation took 1.629899964 s
New invalidations:
	Set()
Initial set of included nodes: Set()
Previously invalidated, but (transitively) depend on new invalidations:
	Set()
All newly invalidated sources after taking into account (previously) recompiled sources:Set()
Copy resource mappings: 
	
Framework implementation 'org.scalacheck.ScalaCheckFramework' not present.
Framework implementation 'org.specs2.runner.Specs2Framework' not present.
Framework implementation 'org.specs2.runner.SpecsFramework' not present.
Framework implementation 'org.specs.runner.SpecsFramework' not present.
Framework implementation 'com.novocode.junit.JUnitFramework' not present.
Subclass fingerprints: List((org.scalatest.Suite,false,org.scalatest.tools.Framework$$anon$1@5369ba07))
Annotation fingerprints: List((org.scalatest.WrapWith,false,org.scalatest.tools.Framework$$anon$2@27c3a289))
Running TaskDef(StreamDecoderSpec, org.scalatest.tools.Framework$$anon$1@5369ba07, false, [SuiteSelector])
Running TaskDef(Base16Spec, org.scalatest.tools.Framework$$anon$1@5369ba07, false, [SuiteSelector])
Running TaskDef(Base32Spec, org.scalatest.tools.Framework$$anon$1@5369ba07, false, [SuiteSelector])
Running TaskDef(Base64Spec, org.scalatest.tools.Framework$$anon$1@5369ba07, false, [SuiteSelector])
Read from stdout: StreamDecoderSpec:
Read from stdout: StreamDecoder
Read from stdout: - should check allowed bytes
Read from stdout: Base16Spec:
Read from stdout: Base16
Read from stdout: - should encode to BASE16
[32mStreamDecoderSpec:[0m
[32mStreamDecoder[0m
[32m- should check allowed bytes[0m
[32mBase16Spec:[0m
[32mBase16[0m
[32m- should encode to BASE16[0m
Running TaskDef(StreamCodecSpec, org.scalatest.tools.Framework$$anon$1@5369ba07, false, [SuiteSelector])
Running TaskDef(StreamEncoderSpec, org.scalatest.tools.Framework$$anon$1@5369ba07, false, [SuiteSelector])
Read from stdout: StreamCodecSpec:
[32mStreamCodecSpec:[0m
Read from stdout: StreamEncoderSpec:
Read from stdout: StreamEncoder
Read from stdout: - should create a ByteStream
Read from stdout: StreamEncoder
Read from stdout: - should create a IntStream
Read from stdout: StreamEncoder
Read from stdout: - should create a groupStream
Read from stdout: StreamEncoder
Read from stdout: - should create a filledStream
Read from stdout: StreamEncoder
Read from stdout: - should flatten a filledStream
[32mStreamEncoderSpec:[0m
[32mStreamEncoder[0m
[32m- should create a ByteStream[0m
[32mStreamEncoder[0m
Read from stdout: Base64Spec:
[32m- should create a IntStream[0m
Read from stdout: Base64
Read from stdout: - should encode to BASE64
[32mStreamEncoder[0m
Read from stdout: Base64
Read from stdout: - should encode to BASE64FILE
Read from stdout: Base64
Read from stdout: - should encode to BASE64URL
[32m- should create a groupStream[0m
Read from stdout: Base64
[32mStreamEncoder[0m
Read from stdout: - should encode to BASE64NOPAD
[32m- should create a filledStream[0m
Read from stdout: Base64
[32mStreamEncoder[0m
Read from stdout: - should encode to BASE64FILENOPAD
[32m- should flatten a filledStream[0m
Read from stdout: Base64
Read from stdout: - should encode to BASE64URLNOPAD
Read from stdout: Base64
Read from stdout: - should decode from BASE64
Read from stdout: Base64
Read from stdout: - should decode from BASE64 w/o padding
Read from stdout: Base64
Read from stdout: - should fail with crap
Read from stdout: Base64
Read from stdout: - should decode from BASE64FILE
Read from stdout: Base64
Read from stdout: - should decode from BASE64FILE w/o padding
Read from stdout: Base64
Read from stdout: - should decode from BASE64URL
Read from stdout: Base32Spec:
Read from stdout: Base32
[32mBase64Spec:[0m
[32mBase64[0m
[32m- should encode to BASE64[0m
Read from stdout: - should encode to BASE32
[32mBase64[0m
Read from stdout: Base32
[32m- should encode to BASE64FILE[0m
[32mBase64[0m
[32m- should encode to BASE64URL[0m
Read from stdout: - should encode to BASE32NOPAD
[32mBase64[0m
Read from stdout: Base32
[32m- should encode to BASE64NOPAD[0m
[32mBase64[0m
Read from stdout: - should encode to BASE32URL
[32m- should encode to BASE64FILENOPAD[0m
[32mBase64[0m
[32m- should encode to BASE64URLNOPAD[0m
Read from stdout: Base32
[32mBase64[0m
Read from stdout: - should encode to BASE32HEX
[32m- should decode from BASE64[0m
Read from stdout: Base32
[32mBase64[0m
[32m- should decode from BASE64 w/o padding[0m
Read from stdout: - should encode to BASE32HEXNOPAD
[32mBase64[0m
Read from stdout: Base32
[32m- should fail with crap[0m
[32mBase64[0m
Read from stdout: - should encode to BASE32HEXURL
[32m- should decode from BASE64FILE[0m
Read from stdout: Base32
[32mBase64[0m
Read from stdout: - should decode from BASE32
[32m- should decode from BASE64FILE w/o padding[0m
[32mBase64[0m
Read from stdout: Base32
[32m- should decode from BASE64URL[0m
Read from stdout: - should decode from BASE32 w/o padding
Read from stdout: Base32
Read from stdout: - should decode from BASE32URL
Read from stdout: Base32
Read from stdout: - should decode from BASE32HEX
Read from stdout: Base32
Read from stdout: - should decode from BASE32HEX w/o padding
Read from stdout: Base32
Read from stdout: - should decode from BASE32HEXURL
[32mBase32Spec:[0m
[32mBase32[0m
[32m- should encode to BASE32[0m
[32mBase32[0m
[32m- should encode to BASE32NOPAD[0m
[32mBase32[0m
[32m- should encode to BASE32URL[0m
[32mBase32[0m
[32m- should encode to BASE32HEX[0m
[32mBase32[0m
[32m- should encode to BASE32HEXNOPAD[0m
[32mBase32[0m
[32m- should encode to BASE32HEXURL[0m
[32mBase32[0m
[32m- should decode from BASE32[0m
[32mBase32[0m
[32m- should decode from BASE32 w/o padding[0m
[32mBase32[0m
[32m- should decode from BASE32URL[0m
[32mBase32[0m
[32m- should decode from BASE32HEX[0m
[32mBase32[0m
[32m- should decode from BASE32HEX w/o padding[0m
[32mBase32[0m
[32m- should decode from BASE32HEXURL[0m
Read from stdout: Run completed in 351 milliseconds.
Read from stdout: Total number of tests run: 31
Read from stdout: Suites: completed 6, aborted 0
Read from stdout: Tests: succeeded 31, failed 0, canceled 0, ignored 0, pending 0
Read from stdout: All tests passed.
Run completed in 351 milliseconds.
Total number of tests run: 31
Suites: completed 6, aborted 0
Tests: succeeded 31, failed 0, canceled 0, ignored 0, pending 0
All tests passed.
Passed tests:
	StreamEncoderSpec
	StreamCodecSpec
	Base64Spec
	StreamDecoderSpec
	Base32Spec
	Base16Spec
Total time: 2 s, completed 01.06.2016 09:57:38
> server-post-command-cleanup
> server-handle-next-server-request
> compile
Evaluating tasks: compile:compile
Running task... Cancel: sbt.server.ServerTaskCancellation@23429dcb, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set()
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set()

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set()

Total time: 0 s, completed 01.06.2016 10:03:01
> server-post-command-cleanup
> server-handle-next-server-request
> test
Evaluating tasks: test:test
Running task... Cancel: sbt.server.ServerTaskCancellation@198b970d, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set()
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set()

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set()

Copy resource mappings: 
	
The de.csmath.codec.Codec$ source file has the following regular definitions changed:
	needPads.
All member reference dependencies will be considered within this context.
Files invalidated by inheriting from (external) de.csmath.codec.Codec$: Set(); now invalidating by inheritance (internally).
Getting direct dependencies of all sources transitively invalidated by inheritance.
Getting sources that directly depend on (external) de.csmath.codec.Codec$.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/test/scala/Base16Spec.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/test/scala/Base32Spec.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/test/scala/Base64Spec.scala. This dependency is not being considered for invalidation.

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala)
Removed products: Set()
External API changes: API Changes: Set(NamesChange(de.csmath.codec.Codec$,ModifiedNames(regularNames = needPads, implicitNames = )))
Modified binary dependencies: Set()
Initial directly invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala)

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala)

Read from stdout: Compiling 1 Scala source to /Users/lpfeiler/develop/github/base64/target/scala-2.11/test-classes...
Compiling 1 Scala source to /Users/lpfeiler/develop/github/base64/target/scala-2.11/test-classes...
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Running cached compiler ca5455d, interfacing (CompilerInterface) with Scala compiler version 2.11.7
Calling Scala compiler with arguments  (CompilerInterface):
	-bootclasspath
	/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/classes:/Users/lpfeiler/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.11.7.jar
	-classpath
	/Users/lpfeiler/develop/github/base64/target/scala-2.11/test-classes:/Users/lpfeiler/develop/github/base64/target/scala-2.11/classes:/Users/lpfeiler/develop/scala/activator-dist-1.3.6/repository/org.scalatest/scalatest_2.11/2.2.4/bundles/scalatest_2.11.jar:/Users/lpfeiler/develop/scala/activator-dist-1.3.6/repository/org.scala-lang/scala-reflect/2.11.2/jars/scala-reflect.jar:/Users/lpfeiler/develop/scala/activator-dist-1.3.6/repository/org.scala-lang.modules/scala-xml_2.11/1.0.2/bundles/scala-xml_2.11.jar
Read from stdout: /Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala:21: expected start of definition
/Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala:21: expected start of definition
Read from stdout: sc.t match {
      sc.t match {
Read from stdout: ^
      ^
Read from stdout: one error found
one error found
Compilation failed (CompilerInterface)
Read from stdout: (test:compileIncremental) Compilation failed
(test:compileIncremental) Compilation failed
Total time: 1 s, completed 01.06.2016 10:03:03
> server-post-command-error-handler
> server-post-command-cleanup
> server-handle-next-server-request
> compile
Evaluating tasks: compile:compile
Running task... Cancel: sbt.server.ServerTaskCancellation@17e2f6a8, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set()
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set()

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set()

Total time: 0 s, completed 01.06.2016 10:03:25
> server-post-command-cleanup
> server-handle-next-server-request
> test
Evaluating tasks: test:test
Running task... Cancel: sbt.server.ServerTaskCancellation@7e6c25d7, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set()
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set()

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set()

Copy resource mappings: 
	
The de.csmath.codec.Codec$ source file has the following regular definitions changed:
	needPads.
All member reference dependencies will be considered within this context.
Files invalidated by inheriting from (external) de.csmath.codec.Codec$: Set(); now invalidating by inheritance (internally).
Getting direct dependencies of all sources transitively invalidated by inheritance.
Getting sources that directly depend on (external) de.csmath.codec.Codec$.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/test/scala/Base16Spec.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/test/scala/Base32Spec.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/test/scala/Base64Spec.scala. This dependency is not being considered for invalidation.

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala)
Removed products: Set()
External API changes: API Changes: Set(NamesChange(de.csmath.codec.Codec$,ModifiedNames(regularNames = needPads, implicitNames = )))
Modified binary dependencies: Set()
Initial directly invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala)

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala)

Read from stdout: Compiling 1 Scala source to /Users/lpfeiler/develop/github/base64/target/scala-2.11/test-classes...
Compiling 1 Scala source to /Users/lpfeiler/develop/github/base64/target/scala-2.11/test-classes...
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Running cached compiler 4ddbc443, interfacing (CompilerInterface) with Scala compiler version 2.11.7
Calling Scala compiler with arguments  (CompilerInterface):
	-bootclasspath
	/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/classes:/Users/lpfeiler/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.11.7.jar
	-classpath
	/Users/lpfeiler/develop/github/base64/target/scala-2.11/test-classes:/Users/lpfeiler/develop/github/base64/target/scala-2.11/classes:/Users/lpfeiler/develop/scala/activator-dist-1.3.6/repository/org.scalatest/scalatest_2.11/2.2.4/bundles/scalatest_2.11.jar:/Users/lpfeiler/develop/scala/activator-dist-1.3.6/repository/org.scala-lang/scala-reflect/2.11.2/jars/scala-reflect.jar:/Users/lpfeiler/develop/scala/activator-dist-1.3.6/repository/org.scala-lang.modules/scala-xml_2.11/1.0.2/bundles/scala-xml_2.11.jar
Read from stdout: /Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala:28: ';' expected but ':' found.
/Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala:28: ';' expected but ':' found.
Read from stdout: } : @unchecked
      } : @unchecked
Read from stdout: ^
        ^
Read from stdout: one error found
one error found
Compilation failed (CompilerInterface)
Read from stdout: (test:compileIncremental) Compilation failed
(test:compileIncremental) Compilation failed
Total time: 0 s, completed 01.06.2016 10:03:25
> server-post-command-error-handler
> server-post-command-cleanup
> server-handle-next-server-request
> compile
Evaluating tasks: compile:compile
Running task... Cancel: sbt.server.ServerTaskCancellation@390f8950, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set()
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set()

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set()

Total time: 0 s, completed 01.06.2016 10:04:41
> server-post-command-cleanup
> server-handle-next-server-request
> test
Evaluating tasks: test:test
Running task... Cancel: sbt.server.ServerTaskCancellation@407afaf6, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set()
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set()

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set()

Copy resource mappings: 
	
The de.csmath.codec.Codec$ source file has the following regular definitions changed:
	needPads.
All member reference dependencies will be considered within this context.
Files invalidated by inheriting from (external) de.csmath.codec.Codec$: Set(); now invalidating by inheritance (internally).
Getting direct dependencies of all sources transitively invalidated by inheritance.
Getting sources that directly depend on (external) de.csmath.codec.Codec$.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/test/scala/Base16Spec.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/test/scala/Base32Spec.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/test/scala/Base64Spec.scala. This dependency is not being considered for invalidation.

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala)
Removed products: Set()
External API changes: API Changes: Set(NamesChange(de.csmath.codec.Codec$,ModifiedNames(regularNames = needPads, implicitNames = )))
Modified binary dependencies: Set()
Initial directly invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala)

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala)

Read from stdout: Compiling 1 Scala source to /Users/lpfeiler/develop/github/base64/target/scala-2.11/test-classes...
Compiling 1 Scala source to /Users/lpfeiler/develop/github/base64/target/scala-2.11/test-classes...
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Running cached compiler 7177c002, interfacing (CompilerInterface) with Scala compiler version 2.11.7
Calling Scala compiler with arguments  (CompilerInterface):
	-bootclasspath
	/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/classes:/Users/lpfeiler/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.11.7.jar
	-classpath
	/Users/lpfeiler/develop/github/base64/target/scala-2.11/test-classes:/Users/lpfeiler/develop/github/base64/target/scala-2.11/classes:/Users/lpfeiler/develop/scala/activator-dist-1.3.6/repository/org.scalatest/scalatest_2.11/2.2.4/bundles/scalatest_2.11.jar:/Users/lpfeiler/develop/scala/activator-dist-1.3.6/repository/org.scala-lang/scala-reflect/2.11.2/jars/scala-reflect.jar:/Users/lpfeiler/develop/scala/activator-dist-1.3.6/repository/org.scala-lang.modules/scala-xml_2.11/1.0.2/bundles/scala-xml_2.11.jar
Read from stdout: there were three feature warnings; re-run with -feature for details
there were three feature warnings; re-run with -feature for details
Read from stdout: one warning found
one warning found
Scala compilation took 0.89287742 s
New invalidations:
	Set()
Initial set of included nodes: Set()
Previously invalidated, but (transitively) depend on new invalidations:
	Set()
All newly invalidated sources after taking into account (previously) recompiled sources:Set()
Copy resource mappings: 
	
Framework implementation 'org.scalacheck.ScalaCheckFramework' not present.
Framework implementation 'org.specs2.runner.Specs2Framework' not present.
Framework implementation 'org.specs2.runner.SpecsFramework' not present.
Framework implementation 'org.specs.runner.SpecsFramework' not present.
Framework implementation 'com.novocode.junit.JUnitFramework' not present.
Subclass fingerprints: List((org.scalatest.Suite,false,org.scalatest.tools.Framework$$anon$1@55fb2f65))
Annotation fingerprints: List((org.scalatest.WrapWith,false,org.scalatest.tools.Framework$$anon$2@64270440))
Running TaskDef(Base16Spec, org.scalatest.tools.Framework$$anon$1@55fb2f65, false, [SuiteSelector])
Running TaskDef(StreamCodecSpec, org.scalatest.tools.Framework$$anon$1@55fb2f65, false, [SuiteSelector])
Running TaskDef(Base32Spec, org.scalatest.tools.Framework$$anon$1@55fb2f65, false, [SuiteSelector])
Running TaskDef(StreamEncoderSpec, org.scalatest.tools.Framework$$anon$1@55fb2f65, false, [SuiteSelector])
Read from stdout: StreamCodecSpec:
[32mStreamCodecSpec:[0m
Running TaskDef(Base64Spec, org.scalatest.tools.Framework$$anon$1@55fb2f65, false, [SuiteSelector])
Read from stdout: Base16Spec:
Read from stdout: Base16
Read from stdout: - should encode to BASE16
[32mBase16Spec:[0m
[32mBase16[0m
[32m- should encode to BASE16[0m
Running TaskDef(StreamDecoderSpec, org.scalatest.tools.Framework$$anon$1@55fb2f65, false, [SuiteSelector])
Read from stdout: StreamEncoderSpec:
Read from stdout: StreamEncoder
Read from stdout: - should create a ByteStream
Read from stdout: StreamEncoder
Read from stdout: - should create a IntStream
Read from stdout: StreamEncoder
Read from stdout: - should create a groupStream
Read from stdout: StreamEncoder
Read from stdout: - should create a filledStream
Read from stdout: StreamEncoder
Read from stdout: - should flatten a filledStream
[32mStreamEncoderSpec:[0m
[32mStreamEncoder[0m
[32m- should create a ByteStream[0m
[32mStreamEncoder[0m
[32m- should create a IntStream[0m
[32mStreamEncoder[0m
[32m- should create a groupStream[0m
[32mStreamEncoder[0m
[32m- should create a filledStream[0m
[32mStreamEncoder[0m
[32m- should flatten a filledStream[0m
Read from stdout: StreamDecoderSpec:
Read from stdout: StreamDecoder
Read from stdout: - should check allowed bytes
[32mStreamDecoderSpec:[0m
[32mStreamDecoder[0m
[32m- should check allowed bytes[0m
Read from stdout: Base64Spec:
Read from stdout: Base64
Read from stdout: - should encode to BASE64
Read from stdout: Base64
Read from stdout: - should encode to BASE64FILE
Read from stdout: Base64
Read from stdout: - should encode to BASE64URL
Read from stdout: Base64
Read from stdout: - should encode to BASE64NOPAD
Read from stdout: Base64
Read from stdout: - should encode to BASE64FILENOPAD
Read from stdout: Base64
Read from stdout: - should encode to BASE64URLNOPAD
Read from stdout: Base64
Read from stdout: - should decode from BASE64
Read from stdout: Base64
Read from stdout: - should decode from BASE64 w/o padding
Read from stdout: Base64
Read from stdout: - should fail with crap
Read from stdout: Base64
Read from stdout: - should decode from BASE64FILE
Read from stdout: Base64
Read from stdout: - should decode from BASE64FILE w/o padding
Read from stdout: Base64
Read from stdout: - should decode from BASE64URL
[32mBase64Spec:[0m
[32mBase64[0m
[32m- should encode to BASE64[0m
[32mBase64[0m
[32m- should encode to BASE64FILE[0m
[32mBase64[0m
[32m- should encode to BASE64URL[0m
[32mBase64[0m
[32m- should encode to BASE64NOPAD[0m
[32mBase64[0m
[32m- should encode to BASE64FILENOPAD[0m
[32mBase64[0m
[32m- should encode to BASE64URLNOPAD[0m
[32mBase64[0m
[32m- should decode from BASE64[0m
[32mBase64[0m
[32m- should decode from BASE64 w/o padding[0m
[32mBase64[0m
[32m- should fail with crap[0m
[32mBase64[0m
[32m- should decode from BASE64FILE[0m
[32mBase64[0m
[32m- should decode from BASE64FILE w/o padding[0m
[32mBase64[0m
[32m- should decode from BASE64URL[0m
Read from stdout: Base32Spec:
Read from stdout: Base32
Read from stdout: - should encode to BASE32
Read from stdout: Base32
Read from stdout: - should encode to BASE32NOPAD
Read from stdout: Base32
Read from stdout: - should encode to BASE32URL
Read from stdout: Base32
Read from stdout: - should encode to BASE32HEX
Read from stdout: Base32
Read from stdout: - should encode to BASE32HEXNOPAD
Read from stdout: Base32
Read from stdout: - should encode to BASE32HEXURL
Read from stdout: Base32
Read from stdout: - should decode from BASE32
Read from stdout: Base32
Read from stdout: - should decode from BASE32 w/o padding
Read from stdout: Base32
Read from stdout: - should decode from BASE32URL
Read from stdout: Base32
Read from stdout: - should decode from BASE32HEX
Read from stdout: Base32
Read from stdout: - should decode from BASE32HEX w/o padding
Read from stdout: Base32
Read from stdout: - should decode from BASE32HEXURL
[32mBase32Spec:[0m
[32mBase32[0m
[32m- should encode to BASE32[0m
[32mBase32[0m
[32m- should encode to BASE32NOPAD[0m
[32mBase32[0m
[32m- should encode to BASE32URL[0m
[32mBase32[0m
[32m- should encode to BASE32HEX[0m
[32mBase32[0m
[32m- should encode to BASE32HEXNOPAD[0m
[32mBase32[0m
[32m- should encode to BASE32HEXURL[0m
[32mBase32[0m
[32m- should decode from BASE32[0m
[32mBase32[0m
[32m- should decode from BASE32 w/o padding[0m
[32mBase32[0m
[32m- should decode from BASE32URL[0m
[32mBase32[0m
[32m- should decode from BASE32HEX[0m
[32mBase32[0m
[32m- should decode from BASE32HEX w/o padding[0m
[32mBase32[0m
[32m- should decode from BASE32HEXURL[0m
Read from stdout: Run completed in 315 milliseconds.
Read from stdout: Total number of tests run: 31
Read from stdout: Suites: completed 6, aborted 0
Read from stdout: Tests: succeeded 31, failed 0, canceled 0, ignored 0, pending 0
Read from stdout: All tests passed.
Run completed in 315 milliseconds.
Total number of tests run: 31
Suites: completed 6, aborted 0
Tests: succeeded 31, failed 0, canceled 0, ignored 0, pending 0
All tests passed.
Passed tests:
	StreamEncoderSpec
	StreamCodecSpec
	Base64Spec
	StreamDecoderSpec
	Base32Spec
	Base16Spec
Total time: 1 s, completed 01.06.2016 10:04:43
> server-post-command-cleanup
> server-handle-next-server-request
> compile
Evaluating tasks: compile:compile
Running task... Cancel: sbt.server.ServerTaskCancellation@2a7cc9a1, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamCodec.scala)
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamCodec.scala)

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamCodec.scala)

Read from stdout: Compiling 1 Scala source to /Users/lpfeiler/develop/github/base64/target/scala-2.11/classes...
Compiling 1 Scala source to /Users/lpfeiler/develop/github/base64/target/scala-2.11/classes...
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Running cached compiler 781f1f6b, interfacing (CompilerInterface) with Scala compiler version 2.11.7
Calling Scala compiler with arguments  (CompilerInterface):
	-bootclasspath
	/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/classes:/Users/lpfeiler/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.11.7.jar
	-classpath
	/Users/lpfeiler/develop/github/base64/target/scala-2.11/classes
Read from stdout: /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamCodec.scala:10: not found: value groupBStreamAux
/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamCodec.scala:10: not found: value groupBStreamAux
Read from stdout: groupBStreamAux(s grouped groupSize)
        groupBStreamAux(s grouped groupSize)
Read from stdout: ^
        ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamCodec.scala:14: not found: value groupBStreamAux
/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamCodec.scala:14: not found: value groupBStreamAux
Read from stdout: else i.next.toSeq #:: groupBStreamAux(i)
        else i.next.toSeq #:: groupBStreamAux(i)
Read from stdout: ^
                              ^
Read from stdout: two errors found
two errors found
Compilation failed (CompilerInterface)
Read from stdout: (compile:compileIncremental) Compilation failed
(compile:compileIncremental) Compilation failed
Total time: 0 s, completed 01.06.2016 10:05:18
> server-post-command-error-handler
> server-post-command-cleanup
> server-handle-next-server-request
> compile
Evaluating tasks: compile:compile
Running task... Cancel: sbt.server.ServerTaskCancellation@18d20900, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamCodec.scala)
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamCodec.scala)

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamCodec.scala)

Read from stdout: Compiling 2 Scala sources to /Users/lpfeiler/develop/github/base64/target/scala-2.11/classes...
Compiling 2 Scala sources to /Users/lpfeiler/develop/github/base64/target/scala-2.11/classes...
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Running cached compiler 1c21ce18, interfacing (CompilerInterface) with Scala compiler version 2.11.7
Calling Scala compiler with arguments  (CompilerInterface):
	-bootclasspath
	/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/classes:/Users/lpfeiler/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.11.7.jar
	-classpath
	/Users/lpfeiler/develop/github/base64/target/scala-2.11/classes
Read from stdout: /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamCodec.scala:10: not found: value groupBStreamAux
/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamCodec.scala:10: not found: value groupBStreamAux
Read from stdout: groupBStreamAux(s grouped groupSize)
        groupBStreamAux(s grouped groupSize)
Read from stdout: ^
        ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamCodec.scala:14: not found: value groupBStreamAux
/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamCodec.scala:14: not found: value groupBStreamAux
Read from stdout: else i.next.toSeq #:: groupBStreamAux(i)
        else i.next.toSeq #:: groupBStreamAux(i)
Read from stdout: ^
                              ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamDecoder.scala:8: not found: value groupBStreamAux
/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamDecoder.scala:8: not found: value groupBStreamAux
Read from stdout: groupBStreamAux(s grouped groupSize)
        groupBStreamAux(s grouped groupSize)
Read from stdout: ^
        ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamDecoder.scala:12: not found: value groupBStreamAux
/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamDecoder.scala:12: not found: value groupBStreamAux
Read from stdout: else i.next.toSeq #:: groupBStreamAux(i)
        else i.next.toSeq #:: groupBStreamAux(i)
Read from stdout: ^
                              ^
Read from stdout: four errors found
four errors found
Compilation failed (CompilerInterface)
Read from stdout: (compile:compileIncremental) Compilation failed
(compile:compileIncremental) Compilation failed
Total time: 0 s, completed 01.06.2016 10:05:35
> server-post-command-error-handler
> server-post-command-cleanup
> server-handle-next-server-request
> compile
Evaluating tasks: compile:compile
Running task... Cancel: sbt.server.ServerTaskCancellation@48892f3c, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamCodec.scala)
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamCodec.scala)

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamCodec.scala)

Read from stdout: Compiling 2 Scala sources to /Users/lpfeiler/develop/github/base64/target/scala-2.11/classes...
Compiling 2 Scala sources to /Users/lpfeiler/develop/github/base64/target/scala-2.11/classes...
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Running cached compiler 3be7749b, interfacing (CompilerInterface) with Scala compiler version 2.11.7
Calling Scala compiler with arguments  (CompilerInterface):
	-bootclasspath
	/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/classes:/Users/lpfeiler/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.11.7.jar
	-classpath
	/Users/lpfeiler/develop/github/base64/target/scala-2.11/classes
Read from stdout: /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamDecoder.scala:8: not found: value groupBStreamAux
/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamDecoder.scala:8: not found: value groupBStreamAux
Read from stdout: groupBStreamAux(s grouped groupSize)
        groupBStreamAux(s grouped groupSize)
Read from stdout: ^
        ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamDecoder.scala:12: not found: value groupBStreamAux
/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamDecoder.scala:12: not found: value groupBStreamAux
Read from stdout: else i.next.toSeq #:: groupBStreamAux(i)
        else i.next.toSeq #:: groupBStreamAux(i)
Read from stdout: ^
                              ^
Read from stdout: two errors found
two errors found
Compilation failed (CompilerInterface)
Read from stdout: (compile:compileIncremental) Compilation failed
(compile:compileIncremental) Compilation failed
Total time: 0 s, completed 01.06.2016 10:06:34
> server-post-command-error-handler
> server-post-command-cleanup
> server-handle-next-server-request
> compile
Evaluating tasks: compile:compile
Running task... Cancel: sbt.server.ServerTaskCancellation@5232c6fa, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamCodec.scala)
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamCodec.scala)

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamCodec.scala)

Read from stdout: Compiling 2 Scala sources to /Users/lpfeiler/develop/github/base64/target/scala-2.11/classes...
Compiling 2 Scala sources to /Users/lpfeiler/develop/github/base64/target/scala-2.11/classes...
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Running cached compiler b415c4a, interfacing (CompilerInterface) with Scala compiler version 2.11.7
Calling Scala compiler with arguments  (CompilerInterface):
	-bootclasspath
	/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/classes:/Users/lpfeiler/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.11.7.jar
	-classpath
	/Users/lpfeiler/develop/github/base64/target/scala-2.11/classes
Read from stdout: /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamDecoder.scala:8: not found: value groupBStreamAux
/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamDecoder.scala:8: not found: value groupBStreamAux
Read from stdout: groupBStreamAux(s grouped groupSize)
        groupBStreamAux(s grouped groupSize)
Read from stdout: ^
        ^
Read from stdout: one error found
one error found
Compilation failed (CompilerInterface)
Read from stdout: (compile:compileIncremental) Compilation failed
(compile:compileIncremental) Compilation failed
Total time: 0 s, completed 01.06.2016 10:07:12
> server-post-command-error-handler
> server-post-command-cleanup
> server-handle-next-server-request
> compile
Evaluating tasks: compile:compile
Running task... Cancel: sbt.server.ServerTaskCancellation@28910142, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamCodec.scala)
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamCodec.scala)

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamCodec.scala)

Read from stdout: Compiling 2 Scala sources to /Users/lpfeiler/develop/github/base64/target/scala-2.11/classes...
Compiling 2 Scala sources to /Users/lpfeiler/develop/github/base64/target/scala-2.11/classes...
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Running cached compiler 3d9fcc1c, interfacing (CompilerInterface) with Scala compiler version 2.11.7
Calling Scala compiler with arguments  (CompilerInterface):
	-bootclasspath
	/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/classes:/Users/lpfeiler/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.11.7.jar
	-classpath
	/Users/lpfeiler/develop/github/base64/target/scala-2.11/classes
Read from stdout: there was one feature warning; re-run with -feature for details
there was one feature warning; re-run with -feature for details
Read from stdout: one warning found
one warning found
Scala compilation took 0.453013829 s
Invalidating /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamDecoder.scala...
Invalidating (transitively) by inheritance from /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamDecoder.scala...
Initial set of included nodes: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamDecoder.scala)
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamDecoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Decoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Decoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/PercentDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamDecoder.scala
Invalidated by transitive inheritance dependency: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Decoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/PercentDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala)
The /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamDecoder.scala source file has the following regular definitions changed:
	groupStreamAux, groupStream, groupBStreamAux, groupBStream.
All member reference dependencies will be considered within this context.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
The following modified names cause invalidation of /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala: Set(groupBStream)
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/PercentDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseN.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Decoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala. This dependency is not being considered for invalidation.
Invalidating /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamCodec.scala...
Invalidating (transitively) by inheritance from /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamCodec.scala...
Initial set of included nodes: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamCodec.scala)
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamCodec.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamDecoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Decoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Decoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/PercentDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamDecoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamEncoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamCodec.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNEncoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamEncoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Encoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNEncoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlEncoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Encoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexEncoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Encoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlEncoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexEncoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base16Encoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNEncoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Encoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNEncoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileEncoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Encoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlEncoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileEncoder.scala
Invalidated by transitive inheritance dependency: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Encoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Decoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamCodec.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base16Encoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Encoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/PercentDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexEncoder.scala)
The /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamCodec.scala source file has the following regular definitions changed:
	groupBStream, groupBStreamAux.
All member reference dependencies will be considered within this context.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileEncoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
The following modified names cause invalidation of /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala: Set(groupBStream)
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/PercentDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamDecoder.scala. This dependency is not being considered for invalidation.
The following modified names cause invalidation of /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala: Set(groupBStream)
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamEncoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNEncoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Encoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseN.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base16Encoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base16.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Encoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base16.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlEncoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlEncoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexEncoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNEncoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseN.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Decoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlEncoder.scala. This dependency is not being considered for invalidation.
New invalidations:
	Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Encoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Decoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base16Encoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Encoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/PercentDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexEncoder.scala)
Initial set of included nodes: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Encoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Decoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base16Encoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Encoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/PercentDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexEncoder.scala)
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Encoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileEncoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Encoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlEncoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileEncoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Decoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlEncoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseN.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNEncoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base16.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseN.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base16Encoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNEncoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Encoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNEncoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlEncoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Encoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexEncoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Encoder.scala
Previously invalidated, but (transitively) depend on new invalidations:
	Set()
All newly invalidated sources after taking into account (previously) recompiled sources:Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Encoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Decoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base16Encoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Encoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/PercentDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexEncoder.scala)
Recompiling all 27 sources: invalidated sources (19) exceeded 50.0% of all sources
Read from stdout: Compiling 27 Scala sources to /Users/lpfeiler/develop/github/base64/target/scala-2.11/classes...
Compiling 27 Scala sources to /Users/lpfeiler/develop/github/base64/target/scala-2.11/classes...
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Running cached compiler 54a4c001, interfacing (CompilerInterface) with Scala compiler version 2.11.7
Calling Scala compiler with arguments  (CompilerInterface):
	-bootclasspath
	/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/classes:/Users/lpfeiler/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.11.7.jar
	-classpath
	/Users/lpfeiler/develop/github/base64/target/scala-2.11/classes
Read from stdout: /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala:21: not found: value groupBStream
/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala:21: not found: value groupBStream
Read from stdout: (groupBStream(groupSize,_))
                     (groupBStream(groupSize,_))
Read from stdout: ^
                      ^
Read from stdout: one error found
one error found
Compilation failed (CompilerInterface)
Read from stdout: (compile:compileIncremental) Compilation failed
(compile:compileIncremental) Compilation failed
Total time: 1 s, completed 01.06.2016 10:07:29
> server-post-command-error-handler
> server-post-command-cleanup
> server-handle-next-server-request
> compile
Evaluating tasks: compile:compile
Running task... Cancel: sbt.server.ServerTaskCancellation@28a8e504, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamCodec.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala)
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamCodec.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala)

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamCodec.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala)

Read from stdout: Compiling 3 Scala sources to /Users/lpfeiler/develop/github/base64/target/scala-2.11/classes...
Compiling 3 Scala sources to /Users/lpfeiler/develop/github/base64/target/scala-2.11/classes...
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Running cached compiler 3adbe09c, interfacing (CompilerInterface) with Scala compiler version 2.11.7
Calling Scala compiler with arguments  (CompilerInterface):
	-bootclasspath
	/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/classes:/Users/lpfeiler/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.11.7.jar
	-classpath
	/Users/lpfeiler/develop/github/base64/target/scala-2.11/classes
Read from stdout: there was one feature warning; re-run with -feature for details
there was one feature warning; re-run with -feature for details
Read from stdout: one warning found
one warning found
Scala compilation took 0.694908455 s
Invalidating /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamDecoder.scala...
Invalidating (transitively) by inheritance from /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamDecoder.scala...
Initial set of included nodes: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamDecoder.scala)
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamDecoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Decoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Decoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/PercentDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamDecoder.scala
Invalidated by transitive inheritance dependency: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Decoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/PercentDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala)
The /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamDecoder.scala source file has the following regular definitions changed:
	groupStreamAux, groupStream, groupBStreamAux, groupBStream.
All member reference dependencies will be considered within this context.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
The following modified names cause invalidation of /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala: Set(groupStream)
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/PercentDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseN.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Decoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala. This dependency is not being considered for invalidation.
Invalidating /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamCodec.scala...
Invalidating (transitively) by inheritance from /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamCodec.scala...
Initial set of included nodes: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamCodec.scala)
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamCodec.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamDecoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Decoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Decoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/PercentDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamDecoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamEncoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamCodec.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNEncoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamEncoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Encoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNEncoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlEncoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Encoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexEncoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Encoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlEncoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexEncoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base16Encoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNEncoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Encoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNEncoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileEncoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Encoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlEncoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileEncoder.scala
Invalidated by transitive inheritance dependency: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Encoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Decoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamCodec.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base16Encoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Encoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/PercentDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexEncoder.scala)
The /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamCodec.scala source file has the following regular definitions changed:
	groupBStream, groupBStreamAux.
All member reference dependencies will be considered within this context.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileEncoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/PercentDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamEncoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNEncoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Encoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseN.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base16Encoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base16.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Encoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base16.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlEncoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlEncoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexEncoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNEncoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseN.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Decoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlEncoder.scala. This dependency is not being considered for invalidation.
Invalidating /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala...
Invalidating (transitively) by inheritance from /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala...
Initial set of included nodes: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala)
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Decoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Decoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala
Invalidated by transitive inheritance dependency: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Decoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala)
The /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala source file has the following regular definitions changed:
	groupStreamAux, groupBStreamAux, groupStream, groupBStream.
All member reference dependencies will be considered within this context.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseN.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Decoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala. This dependency is not being considered for invalidation.
New invalidations:
	Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Encoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Decoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base16Encoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Encoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/PercentDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexEncoder.scala)
Initial set of included nodes: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Encoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Decoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base16Encoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Encoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/PercentDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexEncoder.scala)
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Encoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileEncoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Encoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlEncoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileEncoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Decoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlEncoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseN.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNEncoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base16.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseN.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base16Encoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNEncoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Encoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNEncoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlEncoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Encoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexEncoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Encoder.scala
Previously invalidated, but (transitively) depend on new invalidations:
	Set()
All newly invalidated sources after taking into account (previously) recompiled sources:Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Encoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Decoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base16Encoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Encoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/PercentDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexEncoder.scala)
Recompiling all 27 sources: invalidated sources (18) exceeded 50.0% of all sources
Read from stdout: Compiling 27 Scala sources to /Users/lpfeiler/develop/github/base64/target/scala-2.11/classes...
Compiling 27 Scala sources to /Users/lpfeiler/develop/github/base64/target/scala-2.11/classes...
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Running cached compiler 20d7602b, interfacing (CompilerInterface) with Scala compiler version 2.11.7
Calling Scala compiler with arguments  (CompilerInterface):
	-bootclasspath
	/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/classes:/Users/lpfeiler/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.11.7.jar
	-classpath
	/Users/lpfeiler/develop/github/base64/target/scala-2.11/classes
Read from stdout: there were four feature warnings; re-run with -feature for details
there were four feature warnings; re-run with -feature for details
Read from stdout: one warning found
one warning found
Scala compilation took 1.902417513 s
Invalidating /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Encoder.scala...
Invalidating (transitively) by inheritance from /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Encoder.scala...
Initial set of included nodes: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Encoder.scala)
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlEncoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Encoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexEncoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Encoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlEncoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexEncoder.scala
Invalidated by transitive inheritance dependency: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Encoder.scala)
The /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Encoder.scala source file has the following regular definitions changed:
	groupBStreamAux, groupBStream.
All member reference dependencies will be considered within this context.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlEncoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlEncoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexEncoder.scala. This dependency is not being considered for invalidation.
Invalidating /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/PercentDecoder.scala...
Invalidating (transitively) by inheritance from /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/PercentDecoder.scala...
Initial set of included nodes: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/PercentDecoder.scala)
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/PercentDecoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/PercentDecoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/PercentDecoder.scala
Invalidated by transitive inheritance dependency: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/PercentDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala)
The /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/PercentDecoder.scala source file has the following regular definitions changed:
	groupStreamAux, groupBStreamAux, groupStream, groupBStream.
All member reference dependencies will be considered within this context.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
Invalidating /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamEncoder.scala...
Invalidating (transitively) by inheritance from /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamEncoder.scala...
Initial set of included nodes: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamEncoder.scala)
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNEncoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamEncoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Encoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNEncoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlEncoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Encoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexEncoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Encoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlEncoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexEncoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base16Encoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNEncoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Encoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNEncoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileEncoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Encoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlEncoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileEncoder.scala
Invalidated by transitive inheritance dependency: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Encoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base16Encoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Encoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexEncoder.scala)
The /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamEncoder.scala source file has the following regular definitions changed:
	groupBStreamAux, groupBStream.
All member reference dependencies will be considered within this context.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileEncoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Encoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseN.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base16Encoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base16.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Encoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base16.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlEncoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlEncoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexEncoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNEncoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlEncoder.scala. This dependency is not being considered for invalidation.
Invalidating /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala...
Invalidating (transitively) by inheritance from /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala...
Initial set of included nodes: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala)
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala
Invalidated by transitive inheritance dependency: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala)
The /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala source file has the following regular definitions changed:
	groupStreamAux, groupBStreamAux, groupBStream, groupStream.
All member reference dependencies will be considered within this context.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
Invalidating /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Encoder.scala...
Invalidating (transitively) by inheritance from /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Encoder.scala...
Initial set of included nodes: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Encoder.scala)
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileEncoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Encoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlEncoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileEncoder.scala
Invalidated by transitive inheritance dependency: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Encoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlEncoder.scala)
The /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Encoder.scala source file has the following regular definitions changed:
	groupBStream, groupBStreamAux.
All member reference dependencies will be considered within this context.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlEncoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileEncoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
Invalidating /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala...
Invalidating (transitively) by inheritance from /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala...
Initial set of included nodes: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala)
Invalidated by transitive inheritance dependency: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala)
The /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala source file has the following regular definitions changed:
	groupBStream, groupStreamAux, groupStream, groupBStreamAux.
All member reference dependencies will be considered within this context.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
Invalidating /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNEncoder.scala...
Invalidating (transitively) by inheritance from /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNEncoder.scala...
Initial set of included nodes: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNEncoder.scala)
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Encoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNEncoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlEncoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Encoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexEncoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Encoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlEncoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexEncoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base16Encoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNEncoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Encoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNEncoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileEncoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Encoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlEncoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileEncoder.scala
Invalidated by transitive inheritance dependency: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Encoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base16Encoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Encoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexEncoder.scala)
The /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNEncoder.scala source file has the following regular definitions changed:
	groupBStream, groupBStreamAux.
All member reference dependencies will be considered within this context.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileEncoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Encoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseN.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base16Encoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base16.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Encoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base16.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlEncoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlEncoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexEncoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlEncoder.scala. This dependency is not being considered for invalidation.
Invalidating /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexEncoder.scala...
Invalidating (transitively) by inheritance from /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexEncoder.scala...
Initial set of included nodes: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexEncoder.scala)
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlEncoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexEncoder.scala
Invalidated by transitive inheritance dependency: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlEncoder.scala)
The /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexEncoder.scala source file has the following regular definitions changed:
	groupBStream, groupBStreamAux.
All member reference dependencies will be considered within this context.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlEncoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
Invalidating /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlEncoder.scala...
Invalidating (transitively) by inheritance from /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlEncoder.scala...
Initial set of included nodes: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlEncoder.scala)
Invalidated by transitive inheritance dependency: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlEncoder.scala)
The /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlEncoder.scala source file has the following regular definitions changed:
	groupBStream, groupBStreamAux.
All member reference dependencies will be considered within this context.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
Invalidating /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Decoder.scala...
Invalidating (transitively) by inheritance from /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Decoder.scala...
Initial set of included nodes: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Decoder.scala)
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Decoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala
Invalidated by transitive inheritance dependency: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Decoder.scala)
The /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Decoder.scala source file has the following regular definitions changed:
	groupStream, groupStreamAux, groupBStreamAux, groupBStream.
All member reference dependencies will be considered within this context.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
Invalidating /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlEncoder.scala...
Invalidating (transitively) by inheritance from /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlEncoder.scala...
Initial set of included nodes: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlEncoder.scala)
Invalidated by transitive inheritance dependency: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlEncoder.scala)
The /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlEncoder.scala source file has the following regular definitions changed:
	groupBStream, groupBStreamAux.
All member reference dependencies will be considered within this context.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
Invalidating /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala...
Invalidating (transitively) by inheritance from /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala...
Initial set of included nodes: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala)
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala
Invalidated by transitive inheritance dependency: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala)
The /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala source file has the following regular definitions changed:
	groupStream, groupStreamAux, groupBStream, groupBStreamAux.
All member reference dependencies will be considered within this context.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
Invalidating /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala...
Invalidating (transitively) by inheritance from /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala...
Initial set of included nodes: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala)
Invalidated by transitive inheritance dependency: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala)
The /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala source file has the following regular definitions changed:
	groupBStream, groupStream, groupBStreamAux, groupStreamAux.
All member reference dependencies will be considered within this context.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
Invalidating /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlEncoder.scala...
Invalidating (transitively) by inheritance from /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlEncoder.scala...
Initial set of included nodes: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlEncoder.scala)
Invalidated by transitive inheritance dependency: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlEncoder.scala)
The /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlEncoder.scala source file has the following regular definitions changed:
	groupBStream, groupBStreamAux.
All member reference dependencies will be considered within this context.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
Invalidating /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base16Encoder.scala...
Invalidating (transitively) by inheritance from /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base16Encoder.scala...
Initial set of included nodes: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base16Encoder.scala)
Invalidated by transitive inheritance dependency: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base16Encoder.scala)
The /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base16Encoder.scala source file has the following regular definitions changed:
	groupBStream, groupBStreamAux.
All member reference dependencies will be considered within this context.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base16.scala. This dependency is not being considered for invalidation.
Invalidating /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala...
Invalidating (transitively) by inheritance from /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala...
Initial set of included nodes: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala)
Invalidated by transitive inheritance dependency: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala)
The /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala source file has the following regular definitions changed:
	groupBStreamAux, groupBStream, groupStreamAux, groupStream.
All member reference dependencies will be considered within this context.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
Invalidating /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileEncoder.scala...
Invalidating (transitively) by inheritance from /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileEncoder.scala...
Initial set of included nodes: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileEncoder.scala)
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlEncoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileEncoder.scala
Invalidated by transitive inheritance dependency: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlEncoder.scala)
The /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileEncoder.scala source file has the following regular definitions changed:
	groupBStreamAux, groupBStream.
All member reference dependencies will be considered within this context.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlEncoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
Invalidating /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala...
Invalidating (transitively) by inheritance from /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala...
Initial set of included nodes: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala)
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala
Invalidated by transitive inheritance dependency: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala)
The /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala source file has the following regular definitions changed:
	groupStream, groupBStreamAux, groupStreamAux, groupBStream.
All member reference dependencies will be considered within this context.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
New invalidations:
	Set()
Initial set of included nodes: Set()
Previously invalidated, but (transitively) depend on new invalidations:
	Set()
All newly invalidated sources after taking into account (previously) recompiled sources:Set()
Total time: 3 s, completed 01.06.2016 10:07:50
> server-post-command-cleanup
> server-handle-next-server-request
> compile
Evaluating tasks: compile:compile
Running task... Cancel: sbt.server.ServerTaskCancellation@2d82d852, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set()
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set()

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set()

Total time: 0 s, completed 01.06.2016 10:08:03
> server-post-command-cleanup
> server-handle-next-server-request
> test
Evaluating tasks: test:test
Running task... Cancel: sbt.server.ServerTaskCancellation@a5a54b7, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set()
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set()

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set()

Copy resource mappings: 
	
The de.csmath.codec.Codec$ source file has the following regular definitions changed:
	needPads.
All member reference dependencies will be considered within this context.
Files invalidated by inheriting from (external) de.csmath.codec.Codec$: Set(); now invalidating by inheritance (internally).
Getting direct dependencies of all sources transitively invalidated by inheritance.
Getting sources that directly depend on (external) de.csmath.codec.Codec$.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/test/scala/Base16Spec.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/test/scala/Base32Spec.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/test/scala/Base64Spec.scala. This dependency is not being considered for invalidation.
The de.csmath.codec.StreamEncoder source file has the following regular definitions changed:
	groupBStreamAux, groupBStream.
All member reference dependencies will be considered within this context.
Files invalidated by inheriting from (external) de.csmath.codec.StreamEncoder: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamEncoderSpec.scala); now invalidating by inheritance (internally).
Invalidating (transitively) by inheritance from /Users/lpfeiler/develop/github/base64/src/test/scala/StreamEncoderSpec.scala...
Initial set of included nodes: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamEncoderSpec.scala)
Invalidated by transitive inheritance dependency: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamEncoderSpec.scala)
Getting direct dependencies of all sources transitively invalidated by inheritance.
Getting sources that directly depend on (external) de.csmath.codec.StreamEncoder.
The following modified names cause invalidation of /Users/lpfeiler/develop/github/base64/src/test/scala/StreamEncoderSpec.scala: Set(groupBStream)
The de.csmath.codec.StreamDecoder source file has the following regular definitions changed:
	groupStreamAux, groupStream, groupBStreamAux, groupBStream.
All member reference dependencies will be considered within this context.
Files invalidated by inheriting from (external) de.csmath.codec.StreamDecoder: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala); now invalidating by inheritance (internally).
Invalidating (transitively) by inheritance from /Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala...
Initial set of included nodes: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala)
Invalidated by transitive inheritance dependency: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala)
Getting direct dependencies of all sources transitively invalidated by inheritance.
Getting sources that directly depend on (external) de.csmath.codec.StreamDecoder.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala. This dependency is not being considered for invalidation.
The de.csmath.codec.StreamCodec source file has the following regular definitions changed:
	groupBStream, groupBStreamAux.
All member reference dependencies will be considered within this context.
Files invalidated by inheriting from (external) de.csmath.codec.StreamCodec: Set(); now invalidating by inheritance (internally).
Getting direct dependencies of all sources transitively invalidated by inheritance.
Getting sources that directly depend on (external) de.csmath.codec.StreamCodec.
The following modified names cause invalidation of /Users/lpfeiler/develop/github/base64/src/test/scala/StreamEncoderSpec.scala: Set(groupBStream)

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set()
Removed products: Set()
External API changes: API Changes: Set(NamesChange(de.csmath.codec.Codec$,ModifiedNames(regularNames = needPads, implicitNames = )), NamesChange(de.csmath.codec.StreamEncoder,ModifiedNames(regularNames = groupBStreamAux, groupBStream, implicitNames = )), NamesChange(de.csmath.codec.StreamDecoder,ModifiedNames(regularNames = groupStreamAux, groupStream, groupBStreamAux, groupBStream, implicitNames = )), NamesChange(de.csmath.codec.StreamCodec,ModifiedNames(regularNames = groupBStream, groupBStreamAux, implicitNames = )))
Modified binary dependencies: Set()
Initial directly invalidated sources: Set()

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamEncoderSpec.scala, /Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala)
All initially invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamEncoderSpec.scala, /Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala)

Read from stdout: Compiling 2 Scala sources to /Users/lpfeiler/develop/github/base64/target/scala-2.11/test-classes...
Compiling 2 Scala sources to /Users/lpfeiler/develop/github/base64/target/scala-2.11/test-classes...
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Running cached compiler 67fc818a, interfacing (CompilerInterface) with Scala compiler version 2.11.7
Calling Scala compiler with arguments  (CompilerInterface):
	-bootclasspath
	/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/classes:/Users/lpfeiler/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.11.7.jar
	-classpath
	/Users/lpfeiler/develop/github/base64/target/scala-2.11/test-classes:/Users/lpfeiler/develop/github/base64/target/scala-2.11/classes:/Users/lpfeiler/develop/scala/activator-dist-1.3.6/repository/org.scalatest/scalatest_2.11/2.2.4/bundles/scalatest_2.11.jar:/Users/lpfeiler/develop/scala/activator-dist-1.3.6/repository/org.scala-lang/scala-reflect/2.11.2/jars/scala-reflect.jar:/Users/lpfeiler/develop/scala/activator-dist-1.3.6/repository/org.scala-lang.modules/scala-xml_2.11/1.0.2/bundles/scala-xml_2.11.jar
Read from stdout: /Users/lpfeiler/develop/github/base64/src/test/scala/StreamEncoderSpec.scala:62: not found: value groupBStream
/Users/lpfeiler/develop/github/base64/src/test/scala/StreamEncoderSpec.scala:62: not found: value groupBStream
Read from stdout: val g = groupBStream(2,s)
          val g = groupBStream(2,s)
Read from stdout: ^
                  ^
Read from stdout: one error found
one error found
Compilation failed (CompilerInterface)
Read from stdout: (test:compileIncremental) Compilation failed
(test:compileIncremental) Compilation failed
Total time: 1 s, completed 01.06.2016 10:08:04
> server-post-command-error-handler
> server-post-command-cleanup
> server-handle-next-server-request
> compile
Evaluating tasks: compile:compile
Running task... Cancel: sbt.server.ServerTaskCancellation@48b98d62, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set()
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set()

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set()

Total time: 0 s, completed 01.06.2016 10:08:23
> server-post-command-cleanup
> server-handle-next-server-request
> test
Evaluating tasks: test:test
Running task... Cancel: sbt.server.ServerTaskCancellation@64f63b0, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set()
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set()

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set()

Copy resource mappings: 
	
The de.csmath.codec.Codec$ source file has the following regular definitions changed:
	needPads.
All member reference dependencies will be considered within this context.
Files invalidated by inheriting from (external) de.csmath.codec.Codec$: Set(); now invalidating by inheritance (internally).
Getting direct dependencies of all sources transitively invalidated by inheritance.
Getting sources that directly depend on (external) de.csmath.codec.Codec$.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/test/scala/Base16Spec.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/test/scala/Base32Spec.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/test/scala/Base64Spec.scala. This dependency is not being considered for invalidation.
The de.csmath.codec.StreamEncoder source file has the following regular definitions changed:
	groupBStreamAux, groupBStream.
All member reference dependencies will be considered within this context.
Files invalidated by inheriting from (external) de.csmath.codec.StreamEncoder: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamEncoderSpec.scala); now invalidating by inheritance (internally).
Invalidating (transitively) by inheritance from /Users/lpfeiler/develop/github/base64/src/test/scala/StreamEncoderSpec.scala...
Initial set of included nodes: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamEncoderSpec.scala)
Invalidated by transitive inheritance dependency: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamEncoderSpec.scala)
Getting direct dependencies of all sources transitively invalidated by inheritance.
Getting sources that directly depend on (external) de.csmath.codec.StreamEncoder.
The following modified names cause invalidation of /Users/lpfeiler/develop/github/base64/src/test/scala/StreamEncoderSpec.scala: Set(groupBStream)
The de.csmath.codec.StreamDecoder source file has the following regular definitions changed:
	groupStreamAux, groupStream, groupBStreamAux, groupBStream.
All member reference dependencies will be considered within this context.
Files invalidated by inheriting from (external) de.csmath.codec.StreamDecoder: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala); now invalidating by inheritance (internally).
Invalidating (transitively) by inheritance from /Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala...
Initial set of included nodes: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala)
Invalidated by transitive inheritance dependency: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala)
Getting direct dependencies of all sources transitively invalidated by inheritance.
Getting sources that directly depend on (external) de.csmath.codec.StreamDecoder.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala. This dependency is not being considered for invalidation.
The de.csmath.codec.StreamCodec source file has the following regular definitions changed:
	groupBStream, groupBStreamAux.
All member reference dependencies will be considered within this context.
Files invalidated by inheriting from (external) de.csmath.codec.StreamCodec: Set(); now invalidating by inheritance (internally).
Getting direct dependencies of all sources transitively invalidated by inheritance.
Getting sources that directly depend on (external) de.csmath.codec.StreamCodec.
The following modified names cause invalidation of /Users/lpfeiler/develop/github/base64/src/test/scala/StreamEncoderSpec.scala: Set(groupBStream)

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamEncoderSpec.scala)
Removed products: Set()
External API changes: API Changes: Set(NamesChange(de.csmath.codec.Codec$,ModifiedNames(regularNames = needPads, implicitNames = )), NamesChange(de.csmath.codec.StreamEncoder,ModifiedNames(regularNames = groupBStreamAux, groupBStream, implicitNames = )), NamesChange(de.csmath.codec.StreamDecoder,ModifiedNames(regularNames = groupStreamAux, groupStream, groupBStreamAux, groupBStream, implicitNames = )), NamesChange(de.csmath.codec.StreamCodec,ModifiedNames(regularNames = groupBStream, groupBStreamAux, implicitNames = )))
Modified binary dependencies: Set()
Initial directly invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamEncoderSpec.scala)

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamEncoderSpec.scala, /Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala)
All initially invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamEncoderSpec.scala, /Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala)

Read from stdout: Compiling 2 Scala sources to /Users/lpfeiler/develop/github/base64/target/scala-2.11/test-classes...
Compiling 2 Scala sources to /Users/lpfeiler/develop/github/base64/target/scala-2.11/test-classes...
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Running cached compiler 78e0b802, interfacing (CompilerInterface) with Scala compiler version 2.11.7
Calling Scala compiler with arguments  (CompilerInterface):
	-bootclasspath
	/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/classes:/Users/lpfeiler/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.11.7.jar
	-classpath
	/Users/lpfeiler/develop/github/base64/target/scala-2.11/test-classes:/Users/lpfeiler/develop/github/base64/target/scala-2.11/classes:/Users/lpfeiler/develop/scala/activator-dist-1.3.6/repository/org.scalatest/scalatest_2.11/2.2.4/bundles/scalatest_2.11.jar:/Users/lpfeiler/develop/scala/activator-dist-1.3.6/repository/org.scala-lang/scala-reflect/2.11.2/jars/scala-reflect.jar:/Users/lpfeiler/develop/scala/activator-dist-1.3.6/repository/org.scala-lang.modules/scala-xml_2.11/1.0.2/bundles/scala-xml_2.11.jar
Read from stdout: /Users/lpfeiler/develop/github/base64/src/test/scala/StreamEncoderSpec.scala:62: type mismatch;
Read from stdout: found   : Stream[Byte]
Read from stdout: required: Stream[Int]
/Users/lpfeiler/develop/github/base64/src/test/scala/StreamEncoderSpec.scala:62: type mismatch;
 found   : Stream[Byte]
 required: Stream[Int]
Read from stdout: val g = groupStream(2,s)
          val g = groupStream(2,s)
Read from stdout: ^
                                ^
Read from stdout: one error found
one error found
Compilation failed (CompilerInterface)
Read from stdout: (test:compileIncremental) Compilation failed
(test:compileIncremental) Compilation failed
Total time: 1 s, completed 01.06.2016 10:08:23
> server-post-command-error-handler
> server-post-command-cleanup
> server-handle-next-server-request
> compile
Evaluating tasks: compile:compile
Running task... Cancel: sbt.server.ServerTaskCancellation@4d9eca78, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set()
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set()

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set()

Total time: 0 s, completed 01.06.2016 10:08:54
> server-post-command-cleanup
> server-handle-next-server-request
> test
Evaluating tasks: test:test
Running task... Cancel: sbt.server.ServerTaskCancellation@a61c72, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set()
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set()

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set()

Copy resource mappings: 
	
The de.csmath.codec.Codec$ source file has the following regular definitions changed:
	needPads.
All member reference dependencies will be considered within this context.
Files invalidated by inheriting from (external) de.csmath.codec.Codec$: Set(); now invalidating by inheritance (internally).
Getting direct dependencies of all sources transitively invalidated by inheritance.
Getting sources that directly depend on (external) de.csmath.codec.Codec$.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/test/scala/Base16Spec.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/test/scala/Base32Spec.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/test/scala/Base64Spec.scala. This dependency is not being considered for invalidation.
The de.csmath.codec.StreamEncoder source file has the following regular definitions changed:
	groupBStreamAux, groupBStream.
All member reference dependencies will be considered within this context.
Files invalidated by inheriting from (external) de.csmath.codec.StreamEncoder: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamEncoderSpec.scala); now invalidating by inheritance (internally).
Invalidating (transitively) by inheritance from /Users/lpfeiler/develop/github/base64/src/test/scala/StreamEncoderSpec.scala...
Initial set of included nodes: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamEncoderSpec.scala)
Invalidated by transitive inheritance dependency: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamEncoderSpec.scala)
Getting direct dependencies of all sources transitively invalidated by inheritance.
Getting sources that directly depend on (external) de.csmath.codec.StreamEncoder.
The following modified names cause invalidation of /Users/lpfeiler/develop/github/base64/src/test/scala/StreamEncoderSpec.scala: Set(groupBStream)
The de.csmath.codec.StreamDecoder source file has the following regular definitions changed:
	groupStreamAux, groupStream, groupBStreamAux, groupBStream.
All member reference dependencies will be considered within this context.
Files invalidated by inheriting from (external) de.csmath.codec.StreamDecoder: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala); now invalidating by inheritance (internally).
Invalidating (transitively) by inheritance from /Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala...
Initial set of included nodes: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala)
Invalidated by transitive inheritance dependency: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala)
Getting direct dependencies of all sources transitively invalidated by inheritance.
Getting sources that directly depend on (external) de.csmath.codec.StreamDecoder.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala. This dependency is not being considered for invalidation.
The de.csmath.codec.StreamCodec source file has the following regular definitions changed:
	groupBStream, groupBStreamAux.
All member reference dependencies will be considered within this context.
Files invalidated by inheriting from (external) de.csmath.codec.StreamCodec: Set(); now invalidating by inheritance (internally).
Getting direct dependencies of all sources transitively invalidated by inheritance.
Getting sources that directly depend on (external) de.csmath.codec.StreamCodec.
The following modified names cause invalidation of /Users/lpfeiler/develop/github/base64/src/test/scala/StreamEncoderSpec.scala: Set(groupBStream)

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamEncoderSpec.scala)
Removed products: Set()
External API changes: API Changes: Set(NamesChange(de.csmath.codec.Codec$,ModifiedNames(regularNames = needPads, implicitNames = )), NamesChange(de.csmath.codec.StreamEncoder,ModifiedNames(regularNames = groupBStreamAux, groupBStream, implicitNames = )), NamesChange(de.csmath.codec.StreamDecoder,ModifiedNames(regularNames = groupStreamAux, groupStream, groupBStreamAux, groupBStream, implicitNames = )), NamesChange(de.csmath.codec.StreamCodec,ModifiedNames(regularNames = groupBStream, groupBStreamAux, implicitNames = )))
Modified binary dependencies: Set()
Initial directly invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamEncoderSpec.scala)

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamEncoderSpec.scala, /Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala)
All initially invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamEncoderSpec.scala, /Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala)

Read from stdout: Compiling 2 Scala sources to /Users/lpfeiler/develop/github/base64/target/scala-2.11/test-classes...
Compiling 2 Scala sources to /Users/lpfeiler/develop/github/base64/target/scala-2.11/test-classes...
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Running cached compiler 6d4b7b15, interfacing (CompilerInterface) with Scala compiler version 2.11.7
Calling Scala compiler with arguments  (CompilerInterface):
	-bootclasspath
	/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/classes:/Users/lpfeiler/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.11.7.jar
	-classpath
	/Users/lpfeiler/develop/github/base64/target/scala-2.11/test-classes:/Users/lpfeiler/develop/github/base64/target/scala-2.11/classes:/Users/lpfeiler/develop/scala/activator-dist-1.3.6/repository/org.scalatest/scalatest_2.11/2.2.4/bundles/scalatest_2.11.jar:/Users/lpfeiler/develop/scala/activator-dist-1.3.6/repository/org.scala-lang/scala-reflect/2.11.2/jars/scala-reflect.jar:/Users/lpfeiler/develop/scala/activator-dist-1.3.6/repository/org.scala-lang.modules/scala-xml_2.11/1.0.2/bundles/scala-xml_2.11.jar
Read from stdout: /Users/lpfeiler/develop/github/base64/src/test/scala/StreamEncoderSpec.scala:63: type mismatch;
Read from stdout: found   : Stream[Seq[Int]]
Read from stdout: required: Stream[Traversable[Byte]]
/Users/lpfeiler/develop/github/base64/src/test/scala/StreamEncoderSpec.scala:63: type mismatch;
 found   : Stream[Seq[Int]]
 required: Stream[Traversable[Byte]]
Read from stdout: val f = flatten(g)
          val f = flatten(g)
Read from stdout: ^
                          ^
Read from stdout: one error found
one error found
Compilation failed (CompilerInterface)
Read from stdout: (test:compileIncremental) Compilation failed
(test:compileIncremental) Compilation failed
Total time: 1 s, completed 01.06.2016 10:08:55
> server-post-command-error-handler
> server-post-command-cleanup
> server-handle-next-server-request
> compile
Evaluating tasks: compile:compile
Running task... Cancel: sbt.server.ServerTaskCancellation@b1d5f9d, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set()
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set()

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set()

Total time: 0 s, completed 01.06.2016 10:11:49
> server-post-command-cleanup
> server-handle-next-server-request
> test
Evaluating tasks: test:test
Running task... Cancel: sbt.server.ServerTaskCancellation@1ba2bb86, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set()
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set()

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set()

Copy resource mappings: 
	
The de.csmath.codec.Codec$ source file has the following regular definitions changed:
	needPads.
All member reference dependencies will be considered within this context.
Files invalidated by inheriting from (external) de.csmath.codec.Codec$: Set(); now invalidating by inheritance (internally).
Getting direct dependencies of all sources transitively invalidated by inheritance.
Getting sources that directly depend on (external) de.csmath.codec.Codec$.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/test/scala/Base16Spec.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/test/scala/Base32Spec.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/test/scala/Base64Spec.scala. This dependency is not being considered for invalidation.
The de.csmath.codec.StreamEncoder source file has the following regular definitions changed:
	groupBStreamAux, groupBStream.
All member reference dependencies will be considered within this context.
Files invalidated by inheriting from (external) de.csmath.codec.StreamEncoder: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamEncoderSpec.scala); now invalidating by inheritance (internally).
Invalidating (transitively) by inheritance from /Users/lpfeiler/develop/github/base64/src/test/scala/StreamEncoderSpec.scala...
Initial set of included nodes: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamEncoderSpec.scala)
Invalidated by transitive inheritance dependency: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamEncoderSpec.scala)
Getting direct dependencies of all sources transitively invalidated by inheritance.
Getting sources that directly depend on (external) de.csmath.codec.StreamEncoder.
The following modified names cause invalidation of /Users/lpfeiler/develop/github/base64/src/test/scala/StreamEncoderSpec.scala: Set(groupBStream)
The de.csmath.codec.StreamDecoder source file has the following regular definitions changed:
	groupStreamAux, groupStream, groupBStreamAux, groupBStream.
All member reference dependencies will be considered within this context.
Files invalidated by inheriting from (external) de.csmath.codec.StreamDecoder: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala); now invalidating by inheritance (internally).
Invalidating (transitively) by inheritance from /Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala...
Initial set of included nodes: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala)
Invalidated by transitive inheritance dependency: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala)
Getting direct dependencies of all sources transitively invalidated by inheritance.
Getting sources that directly depend on (external) de.csmath.codec.StreamDecoder.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala. This dependency is not being considered for invalidation.
The de.csmath.codec.StreamCodec source file has the following regular definitions changed:
	groupBStream, groupBStreamAux.
All member reference dependencies will be considered within this context.
Files invalidated by inheriting from (external) de.csmath.codec.StreamCodec: Set(); now invalidating by inheritance (internally).
Getting direct dependencies of all sources transitively invalidated by inheritance.
Getting sources that directly depend on (external) de.csmath.codec.StreamCodec.
The following modified names cause invalidation of /Users/lpfeiler/develop/github/base64/src/test/scala/StreamEncoderSpec.scala: Set(groupBStream)

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamEncoderSpec.scala)
Removed products: Set()
External API changes: API Changes: Set(NamesChange(de.csmath.codec.Codec$,ModifiedNames(regularNames = needPads, implicitNames = )), NamesChange(de.csmath.codec.StreamEncoder,ModifiedNames(regularNames = groupBStreamAux, groupBStream, implicitNames = )), NamesChange(de.csmath.codec.StreamDecoder,ModifiedNames(regularNames = groupStreamAux, groupStream, groupBStreamAux, groupBStream, implicitNames = )), NamesChange(de.csmath.codec.StreamCodec,ModifiedNames(regularNames = groupBStream, groupBStreamAux, implicitNames = )))
Modified binary dependencies: Set()
Initial directly invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamEncoderSpec.scala)

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamEncoderSpec.scala, /Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala)
All initially invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamEncoderSpec.scala, /Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala)

Read from stdout: Compiling 2 Scala sources to /Users/lpfeiler/develop/github/base64/target/scala-2.11/test-classes...
Compiling 2 Scala sources to /Users/lpfeiler/develop/github/base64/target/scala-2.11/test-classes...
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Running cached compiler 2c34bd2d, interfacing (CompilerInterface) with Scala compiler version 2.11.7
Calling Scala compiler with arguments  (CompilerInterface):
	-bootclasspath
	/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/classes:/Users/lpfeiler/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.11.7.jar
	-classpath
	/Users/lpfeiler/develop/github/base64/target/scala-2.11/test-classes:/Users/lpfeiler/develop/github/base64/target/scala-2.11/classes:/Users/lpfeiler/develop/scala/activator-dist-1.3.6/repository/org.scalatest/scalatest_2.11/2.2.4/bundles/scalatest_2.11.jar:/Users/lpfeiler/develop/scala/activator-dist-1.3.6/repository/org.scala-lang/scala-reflect/2.11.2/jars/scala-reflect.jar:/Users/lpfeiler/develop/scala/activator-dist-1.3.6/repository/org.scala-lang.modules/scala-xml_2.11/1.0.2/bundles/scala-xml_2.11.jar
Read from stdout: /Users/lpfeiler/develop/github/base64/src/test/scala/StreamEncoderSpec.scala:64: type mismatch;
Read from stdout: found   : Stream[Seq[Int]]
Read from stdout: required: Stream[Traversable[Byte]]
/Users/lpfeiler/develop/github/base64/src/test/scala/StreamEncoderSpec.scala:64: type mismatch;
 found   : Stream[Seq[Int]]
 required: Stream[Traversable[Byte]]
Read from stdout: val f = flatten(g)
          val f = flatten(g)
Read from stdout: ^
                          ^
Read from stdout: one error found
one error found
Compilation failed (CompilerInterface)
Read from stdout: (test:compileIncremental) Compilation failed
(test:compileIncremental) Compilation failed
Total time: 1 s, completed 01.06.2016 10:11:50
> server-post-command-error-handler
> server-post-command-cleanup
> server-handle-next-server-request
> compile
Evaluating tasks: compile:compile
Running task... Cancel: sbt.server.ServerTaskCancellation@7248a776, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set()
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set()

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set()

Total time: 0 s, completed 01.06.2016 10:11:57
> server-post-command-cleanup
> server-handle-next-server-request
> test
Evaluating tasks: test:test
Running task... Cancel: sbt.server.ServerTaskCancellation@764419bd, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set()
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set()

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set()

Copy resource mappings: 
	
The de.csmath.codec.Codec$ source file has the following regular definitions changed:
	needPads.
All member reference dependencies will be considered within this context.
Files invalidated by inheriting from (external) de.csmath.codec.Codec$: Set(); now invalidating by inheritance (internally).
Getting direct dependencies of all sources transitively invalidated by inheritance.
Getting sources that directly depend on (external) de.csmath.codec.Codec$.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/test/scala/Base16Spec.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/test/scala/Base32Spec.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/test/scala/Base64Spec.scala. This dependency is not being considered for invalidation.
The de.csmath.codec.StreamEncoder source file has the following regular definitions changed:
	groupBStreamAux, groupBStream.
All member reference dependencies will be considered within this context.
Files invalidated by inheriting from (external) de.csmath.codec.StreamEncoder: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamEncoderSpec.scala); now invalidating by inheritance (internally).
Invalidating (transitively) by inheritance from /Users/lpfeiler/develop/github/base64/src/test/scala/StreamEncoderSpec.scala...
Initial set of included nodes: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamEncoderSpec.scala)
Invalidated by transitive inheritance dependency: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamEncoderSpec.scala)
Getting direct dependencies of all sources transitively invalidated by inheritance.
Getting sources that directly depend on (external) de.csmath.codec.StreamEncoder.
The following modified names cause invalidation of /Users/lpfeiler/develop/github/base64/src/test/scala/StreamEncoderSpec.scala: Set(groupBStream)
The de.csmath.codec.StreamDecoder source file has the following regular definitions changed:
	groupStreamAux, groupStream, groupBStreamAux, groupBStream.
All member reference dependencies will be considered within this context.
Files invalidated by inheriting from (external) de.csmath.codec.StreamDecoder: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala); now invalidating by inheritance (internally).
Invalidating (transitively) by inheritance from /Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala...
Initial set of included nodes: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala)
Invalidated by transitive inheritance dependency: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala)
Getting direct dependencies of all sources transitively invalidated by inheritance.
Getting sources that directly depend on (external) de.csmath.codec.StreamDecoder.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala. This dependency is not being considered for invalidation.
The de.csmath.codec.StreamCodec source file has the following regular definitions changed:
	groupBStream, groupBStreamAux.
All member reference dependencies will be considered within this context.
Files invalidated by inheriting from (external) de.csmath.codec.StreamCodec: Set(); now invalidating by inheritance (internally).
Getting direct dependencies of all sources transitively invalidated by inheritance.
Getting sources that directly depend on (external) de.csmath.codec.StreamCodec.
The following modified names cause invalidation of /Users/lpfeiler/develop/github/base64/src/test/scala/StreamEncoderSpec.scala: Set(groupBStream)

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamEncoderSpec.scala)
Removed products: Set()
External API changes: API Changes: Set(NamesChange(de.csmath.codec.Codec$,ModifiedNames(regularNames = needPads, implicitNames = )), NamesChange(de.csmath.codec.StreamEncoder,ModifiedNames(regularNames = groupBStreamAux, groupBStream, implicitNames = )), NamesChange(de.csmath.codec.StreamDecoder,ModifiedNames(regularNames = groupStreamAux, groupStream, groupBStreamAux, groupBStream, implicitNames = )), NamesChange(de.csmath.codec.StreamCodec,ModifiedNames(regularNames = groupBStream, groupBStreamAux, implicitNames = )))
Modified binary dependencies: Set()
Initial directly invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamEncoderSpec.scala)

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamEncoderSpec.scala, /Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala)
All initially invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamEncoderSpec.scala, /Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala)

Read from stdout: Compiling 2 Scala sources to /Users/lpfeiler/develop/github/base64/target/scala-2.11/test-classes...
Compiling 2 Scala sources to /Users/lpfeiler/develop/github/base64/target/scala-2.11/test-classes...
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Running cached compiler 37de4ede, interfacing (CompilerInterface) with Scala compiler version 2.11.7
Calling Scala compiler with arguments  (CompilerInterface):
	-bootclasspath
	/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/classes:/Users/lpfeiler/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.11.7.jar
	-classpath
	/Users/lpfeiler/develop/github/base64/target/scala-2.11/test-classes:/Users/lpfeiler/develop/github/base64/target/scala-2.11/classes:/Users/lpfeiler/develop/scala/activator-dist-1.3.6/repository/org.scalatest/scalatest_2.11/2.2.4/bundles/scalatest_2.11.jar:/Users/lpfeiler/develop/scala/activator-dist-1.3.6/repository/org.scala-lang/scala-reflect/2.11.2/jars/scala-reflect.jar:/Users/lpfeiler/develop/scala/activator-dist-1.3.6/repository/org.scala-lang.modules/scala-xml_2.11/1.0.2/bundles/scala-xml_2.11.jar
Read from stdout: there were 23 feature warnings; re-run with -feature for details
there were 23 feature warnings; re-run with -feature for details
Read from stdout: one warning found
one warning found
Scala compilation took 1.300585229 s
New invalidations:
	Set()
Initial set of included nodes: Set()
Previously invalidated, but (transitively) depend on new invalidations:
	Set()
All newly invalidated sources after taking into account (previously) recompiled sources:Set()
Copy resource mappings: 
	
Framework implementation 'org.scalacheck.ScalaCheckFramework' not present.
Framework implementation 'org.specs2.runner.Specs2Framework' not present.
Framework implementation 'org.specs2.runner.SpecsFramework' not present.
Framework implementation 'org.specs.runner.SpecsFramework' not present.
Framework implementation 'com.novocode.junit.JUnitFramework' not present.
Subclass fingerprints: List((org.scalatest.Suite,false,org.scalatest.tools.Framework$$anon$1@144cfd3c))
Annotation fingerprints: List((org.scalatest.WrapWith,false,org.scalatest.tools.Framework$$anon$2@764e1caf))
Running TaskDef(StreamEncoderSpec, org.scalatest.tools.Framework$$anon$1@144cfd3c, false, [SuiteSelector])
Running TaskDef(StreamDecoderSpec, org.scalatest.tools.Framework$$anon$1@144cfd3c, false, [SuiteSelector])
Running TaskDef(StreamCodecSpec, org.scalatest.tools.Framework$$anon$1@144cfd3c, false, [SuiteSelector])
Running TaskDef(Base16Spec, org.scalatest.tools.Framework$$anon$1@144cfd3c, false, [SuiteSelector])
Read from stdout: StreamCodecSpec:
[32mStreamCodecSpec:[0m
Running TaskDef(Base64Spec, org.scalatest.tools.Framework$$anon$1@144cfd3c, false, [SuiteSelector])
Read from stdout: StreamDecoderSpec:
Read from stdout: StreamDecoder
Read from stdout: - should check allowed bytes
Read from stdout: Base16Spec:
Read from stdout: Base16
Read from stdout: - should encode to BASE16
[32mStreamDecoderSpec:[0m
[32mStreamDecoder[0m
[32m- should check allowed bytes[0m
[32mBase16Spec:[0m
[32mBase16[0m
[32m- should encode to BASE16[0m
Read from stdout: StreamEncoderSpec:
Read from stdout: StreamEncoder
Read from stdout: - should create a ByteStream
Read from stdout: StreamEncoder
Read from stdout: - should create a IntStream
Read from stdout: StreamEncoder
Read from stdout: - should create a groupStream
Read from stdout: StreamEncoder
Read from stdout: - should create a filledStream
Read from stdout: StreamEncoder
Read from stdout: - should flatten a filledStream
Running TaskDef(Base32Spec, org.scalatest.tools.Framework$$anon$1@144cfd3c, false, [SuiteSelector])
[32mStreamEncoderSpec:[0m
[32mStreamEncoder[0m
[32m- should create a ByteStream[0m
[32mStreamEncoder[0m
[32m- should create a IntStream[0m
[32mStreamEncoder[0m
[32m- should create a groupStream[0m
[32mStreamEncoder[0m
[32m- should create a filledStream[0m
[32mStreamEncoder[0m
[32m- should flatten a filledStream[0m
Read from stdout: Base32Spec:
Read from stdout: Base32
Read from stdout: - should encode to BASE32
Read from stdout: Base32
Read from stdout: - should encode to BASE32NOPAD
Read from stdout: Base32
Read from stdout: - should encode to BASE32URL
Read from stdout: Base32
Read from stdout: - should encode to BASE32HEX
Read from stdout: Base32
Read from stdout: - should encode to BASE32HEXNOPAD
Read from stdout: Base32
Read from stdout: - should encode to BASE32HEXURL
Read from stdout: Base32
Read from stdout: - should decode from BASE32
Read from stdout: Base32
Read from stdout: - should decode from BASE32 w/o padding
Read from stdout: Base32
Read from stdout: - should decode from BASE32URL
Read from stdout: Base32
Read from stdout: - should decode from BASE32HEX
Read from stdout: Base32
Read from stdout: - should decode from BASE32HEX w/o padding
Read from stdout: Base32
Read from stdout: - should decode from BASE32HEXURL
[32mBase32Spec:[0m
[32mBase32[0m
[32m- should encode to BASE32[0m
[32mBase32[0m
[32m- should encode to BASE32NOPAD[0m
[32mBase32[0m
[32m- should encode to BASE32URL[0m
[32mBase32[0m
[32m- should encode to BASE32HEX[0m
[32mBase32[0m
[32m- should encode to BASE32HEXNOPAD[0m
[32mBase32[0m
[32m- should encode to BASE32HEXURL[0m
[32mBase32[0m
[32m- should decode from BASE32[0m
[32mBase32[0m
[32m- should decode from BASE32 w/o padding[0m
[32mBase32[0m
[32m- should decode from BASE32URL[0m
[32mBase32[0m
[32m- should decode from BASE32HEX[0m
[32mBase32[0m
[32m- should decode from BASE32HEX w/o padding[0m
[32mBase32[0m
[32m- should decode from BASE32HEXURL[0m
Read from stdout: Base64Spec:
Read from stdout: Base64
Read from stdout: - should encode to BASE64
Read from stdout: Base64
Read from stdout: - should encode to BASE64FILE
Read from stdout: Base64
Read from stdout: - should encode to BASE64URL
Read from stdout: Base64
Read from stdout: - should encode to BASE64NOPAD
Read from stdout: Base64
Read from stdout: - should encode to BASE64FILENOPAD
Read from stdout: Base64
Read from stdout: - should encode to BASE64URLNOPAD
Read from stdout: Base64
Read from stdout: - should decode from BASE64
Read from stdout: Base64
Read from stdout: - should decode from BASE64 w/o padding
Read from stdout: Base64
Read from stdout: - should fail with crap
Read from stdout: Base64
Read from stdout: - should decode from BASE64FILE
Read from stdout: Base64
Read from stdout: - should decode from BASE64FILE w/o padding
Read from stdout: Base64
Read from stdout: - should decode from BASE64URL
[32mBase64Spec:[0m
[32mBase64[0m
[32m- should encode to BASE64[0m
[32mBase64[0m
[32m- should encode to BASE64FILE[0m
[32mBase64[0m
[32m- should encode to BASE64URL[0m
[32mBase64[0m
[32m- should encode to BASE64NOPAD[0m
[32mBase64[0m
[32m- should encode to BASE64FILENOPAD[0m
[32mBase64[0m
[32m- should encode to BASE64URLNOPAD[0m
[32mBase64[0m
[32m- should decode from BASE64[0m
[32mBase64[0m
[32m- should decode from BASE64 w/o padding[0m
[32mBase64[0m
[32m- should fail with crap[0m
[32mBase64[0m
[32m- should decode from BASE64FILE[0m
[32mBase64[0m
[32m- should decode from BASE64FILE w/o padding[0m
[32mBase64[0m
[32m- should decode from BASE64URL[0m
Read from stdout: Run completed in 432 milliseconds.
Read from stdout: Total number of tests run: 31
Read from stdout: Suites: completed 6, aborted 0
Read from stdout: Tests: succeeded 31, failed 0, canceled 0, ignored 0, pending 0
Read from stdout: All tests passed.
Run completed in 432 milliseconds.
Total number of tests run: 31
Suites: completed 6, aborted 0
Tests: succeeded 31, failed 0, canceled 0, ignored 0, pending 0
All tests passed.
Passed tests:
	StreamEncoderSpec
	StreamCodecSpec
	Base64Spec
	StreamDecoderSpec
	Base32Spec
	Base16Spec
Total time: 2 s, completed 01.06.2016 10:11:59
> server-post-command-cleanup
> server-handle-next-server-request
> compile
Evaluating tasks: compile:compile
Running task... Cancel: sbt.server.ServerTaskCancellation@3c9a50ea, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamCodec.scala)
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamCodec.scala)

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamCodec.scala)

Read from stdout: Compiling 1 Scala source to /Users/lpfeiler/develop/github/base64/target/scala-2.11/classes...
Compiling 1 Scala source to /Users/lpfeiler/develop/github/base64/target/scala-2.11/classes...
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Running cached compiler 47982131, interfacing (CompilerInterface) with Scala compiler version 2.11.7
Calling Scala compiler with arguments  (CompilerInterface):
	-bootclasspath
	/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/classes:/Users/lpfeiler/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.11.7.jar
	-classpath
	/Users/lpfeiler/develop/github/base64/target/scala-2.11/classes
Read from stdout: there was one feature warning; re-run with -feature for details
there was one feature warning; re-run with -feature for details
Read from stdout: one warning found
one warning found
Scala compilation took 0.402466596 s
New invalidations:
	Set()
Initial set of included nodes: Set()
Previously invalidated, but (transitively) depend on new invalidations:
	Set()
All newly invalidated sources after taking into account (previously) recompiled sources:Set()
Total time: 1 s, completed 01.06.2016 10:14:37
> server-post-command-cleanup
> server-handle-next-server-request
> compile
Evaluating tasks: compile:compile
Running task... Cancel: sbt.server.ServerTaskCancellation@4cca7f6c, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamCodec.scala)
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamCodec.scala)

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamCodec.scala)

Read from stdout: Compiling 1 Scala source to /Users/lpfeiler/develop/github/base64/target/scala-2.11/classes...
Compiling 1 Scala source to /Users/lpfeiler/develop/github/base64/target/scala-2.11/classes...
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Running cached compiler 4c281bd5, interfacing (CompilerInterface) with Scala compiler version 2.11.7
Calling Scala compiler with arguments  (CompilerInterface):
	-bootclasspath
	/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/classes:/Users/lpfeiler/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.11.7.jar
	-classpath
	/Users/lpfeiler/develop/github/base64/target/scala-2.11/classes
Read from stdout: there was one feature warning; re-run with -feature for details
there was one feature warning; re-run with -feature for details
Read from stdout: one warning found
one warning found
Scala compilation took 0.322671404 s
New invalidations:
	Set()
Initial set of included nodes: Set()
Previously invalidated, but (transitively) depend on new invalidations:
	Set()
All newly invalidated sources after taking into account (previously) recompiled sources:Set()
Total time: 0 s, completed 01.06.2016 10:14:58
> server-post-command-cleanup
> server-handle-next-server-request
> compile
Evaluating tasks: compile:compile
Running task... Cancel: sbt.server.ServerTaskCancellation@2eb0aa28, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set()
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set()

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set()

Total time: 0 s, completed 01.06.2016 10:16:25
> server-post-command-cleanup
> server-handle-next-server-request
> test
Evaluating tasks: test:test
Running task... Cancel: sbt.server.ServerTaskCancellation@44485c, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set()
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set()

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set()

Copy resource mappings: 
	
The de.csmath.codec.Codec$ source file has the following regular definitions changed:
	needPads.
All member reference dependencies will be considered within this context.
Files invalidated by inheriting from (external) de.csmath.codec.Codec$: Set(); now invalidating by inheritance (internally).
Getting direct dependencies of all sources transitively invalidated by inheritance.
Getting sources that directly depend on (external) de.csmath.codec.Codec$.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/test/scala/Base16Spec.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/test/scala/Base32Spec.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/test/scala/Base64Spec.scala. This dependency is not being considered for invalidation.

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala)
Removed products: Set()
External API changes: API Changes: Set(NamesChange(de.csmath.codec.Codec$,ModifiedNames(regularNames = needPads, implicitNames = )))
Modified binary dependencies: Set()
Initial directly invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala)

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala)

Read from stdout: Compiling 1 Scala source to /Users/lpfeiler/develop/github/base64/target/scala-2.11/test-classes...
Compiling 1 Scala source to /Users/lpfeiler/develop/github/base64/target/scala-2.11/test-classes...
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Running cached compiler 4c8efeb3, interfacing (CompilerInterface) with Scala compiler version 2.11.7
Calling Scala compiler with arguments  (CompilerInterface):
	-bootclasspath
	/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/classes:/Users/lpfeiler/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.11.7.jar
	-classpath
	/Users/lpfeiler/develop/github/base64/target/scala-2.11/test-classes:/Users/lpfeiler/develop/github/base64/target/scala-2.11/classes:/Users/lpfeiler/develop/scala/activator-dist-1.3.6/repository/org.scalatest/scalatest_2.11/2.2.4/bundles/scalatest_2.11.jar:/Users/lpfeiler/develop/scala/activator-dist-1.3.6/repository/org.scala-lang/scala-reflect/2.11.2/jars/scala-reflect.jar:/Users/lpfeiler/develop/scala/activator-dist-1.3.6/repository/org.scala-lang.modules/scala-xml_2.11/1.0.2/bundles/scala-xml_2.11.jar
Read from stdout: there were four feature warnings; re-run with -feature for details
there were four feature warnings; re-run with -feature for details
Read from stdout: one warning found
one warning found
Scala compilation took 0.733153241 s
New invalidations:
	Set()
Initial set of included nodes: Set()
Previously invalidated, but (transitively) depend on new invalidations:
	Set()
All newly invalidated sources after taking into account (previously) recompiled sources:Set()
Copy resource mappings: 
	
Framework implementation 'org.scalacheck.ScalaCheckFramework' not present.
Framework implementation 'org.specs2.runner.Specs2Framework' not present.
Framework implementation 'org.specs2.runner.SpecsFramework' not present.
Framework implementation 'org.specs.runner.SpecsFramework' not present.
Framework implementation 'com.novocode.junit.JUnitFramework' not present.
Subclass fingerprints: List((org.scalatest.Suite,false,org.scalatest.tools.Framework$$anon$1@4fcab7db))
Annotation fingerprints: List((org.scalatest.WrapWith,false,org.scalatest.tools.Framework$$anon$2@5d57b964))
Running TaskDef(Base32Spec, org.scalatest.tools.Framework$$anon$1@4fcab7db, false, [SuiteSelector])
Running TaskDef(StreamCodecSpec, org.scalatest.tools.Framework$$anon$1@4fcab7db, false, [SuiteSelector])
Running TaskDef(StreamEncoderSpec, org.scalatest.tools.Framework$$anon$1@4fcab7db, false, [SuiteSelector])
Running TaskDef(Base16Spec, org.scalatest.tools.Framework$$anon$1@4fcab7db, false, [SuiteSelector])
Read from stdout: StreamCodecSpec:
Read from stdout: StreamCodec
Read from stdout: - should create a ByteStream
Read from stdout: Base16Spec:
Read from stdout: Base16
Read from stdout: - should encode to BASE16
[32mStreamCodecSpec:[0m
[32mStreamCodec[0m
Read from stdout: StreamEncoderSpec:
[32mBase16Spec:[0m
Read from stdout: StreamEncoder
Read from stdout: - should create a ByteStream
Read from stdout: StreamEncoder
Read from stdout: - should create a IntStream
Read from stdout: StreamEncoder
Read from stdout: - should create a groupStream
Read from stdout: StreamEncoder
Read from stdout: - should create a filledStream
Read from stdout: StreamEncoder
Read from stdout: - should flatten a filledStream
[32mStreamEncoderSpec:[0m
[32mStreamEncoder[0m
[32m- should create a ByteStream[0m
[32mStreamEncoder[0m
[32m- should create a IntStream[0m
[32mStreamEncoder[0m
[32m- should create a groupStream[0m
[32mStreamEncoder[0m
[32m- should create a filledStream[0m
[32mStreamEncoder[0m
[32m- should flatten a filledStream[0m
[32mBase16[0m
[32m- should encode to BASE16[0m
Running TaskDef(Base64Spec, org.scalatest.tools.Framework$$anon$1@4fcab7db, false, [SuiteSelector])
Running TaskDef(StreamDecoderSpec, org.scalatest.tools.Framework$$anon$1@4fcab7db, false, [SuiteSelector])
[32m- should create a ByteStream[0m
Read from stdout: StreamDecoderSpec:
Read from stdout: StreamDecoder
Read from stdout: - should check allowed bytes
[32mStreamDecoderSpec:[0m
[32mStreamDecoder[0m
[32m- should check allowed bytes[0m
Read from stdout: Base64Spec:
Read from stdout: Base64
Read from stdout: - should encode to BASE64
Read from stdout: Base64
Read from stdout: - should encode to BASE64FILE
Read from stdout: Base64
Read from stdout: - should encode to BASE64URL
Read from stdout: Base64
Read from stdout: - should encode to BASE64NOPAD
Read from stdout: Base64
Read from stdout: - should encode to BASE64FILENOPAD
Read from stdout: Base64
Read from stdout: - should encode to BASE64URLNOPAD
Read from stdout: Base64
Read from stdout: - should decode from BASE64
Read from stdout: Base64
Read from stdout: - should decode from BASE64 w/o padding
Read from stdout: Base64
Read from stdout: - should fail with crap
Read from stdout: Base64
Read from stdout: - should decode from BASE64FILE
Read from stdout: Base64
Read from stdout: - should decode from BASE64FILE w/o padding
Read from stdout: Base64
Read from stdout: - should decode from BASE64URL
[32mBase64Spec:[0m
[32mBase64[0m
[32m- should encode to BASE64[0m
[32mBase64[0m
[32m- should encode to BASE64FILE[0m
[32mBase64[0m
[32m- should encode to BASE64URL[0m
[32mBase64[0m
[32m- should encode to BASE64NOPAD[0m
[32mBase64[0m
[32m- should encode to BASE64FILENOPAD[0m
[32mBase64[0m
[32m- should encode to BASE64URLNOPAD[0m
[32mBase64[0m
[32m- should decode from BASE64[0m
[32mBase64[0m
[32m- should decode from BASE64 w/o padding[0m
[32mBase64[0m
[32m- should fail with crap[0m
[32mBase64[0m
[32m- should decode from BASE64FILE[0m
[32mBase64[0m
[32m- should decode from BASE64FILE w/o padding[0m
[32mBase64[0m
[32m- should decode from BASE64URL[0m
Read from stdout: Base32Spec:
Read from stdout: Base32
Read from stdout: - should encode to BASE32
Read from stdout: Base32
Read from stdout: - should encode to BASE32NOPAD
Read from stdout: Base32
Read from stdout: - should encode to BASE32URL
Read from stdout: Base32
Read from stdout: - should encode to BASE32HEX
Read from stdout: Base32
Read from stdout: - should encode to BASE32HEXNOPAD
Read from stdout: Base32
Read from stdout: - should encode to BASE32HEXURL
Read from stdout: Base32
Read from stdout: - should decode from BASE32
Read from stdout: Base32
Read from stdout: - should decode from BASE32 w/o padding
Read from stdout: Base32
Read from stdout: - should decode from BASE32URL
Read from stdout: Base32
Read from stdout: - should decode from BASE32HEX
Read from stdout: Base32
Read from stdout: - should decode from BASE32HEX w/o padding
Read from stdout: Base32
Read from stdout: - should decode from BASE32HEXURL
[32mBase32Spec:[0m
[32mBase32[0m
[32m- should encode to BASE32[0m
[32mBase32[0m
[32m- should encode to BASE32NOPAD[0m
[32mBase32[0m
[32m- should encode to BASE32URL[0m
[32mBase32[0m
[32m- should encode to BASE32HEX[0m
[32mBase32[0m
[32m- should encode to BASE32HEXNOPAD[0m
[32mBase32[0m
[32m- should encode to BASE32HEXURL[0m
[32mBase32[0m
[32m- should decode from BASE32[0m
[32mBase32[0m
[32m- should decode from BASE32 w/o padding[0m
[32mBase32[0m
[32m- should decode from BASE32URL[0m
[32mBase32[0m
[32m- should decode from BASE32HEX[0m
[32mBase32[0m
[32m- should decode from BASE32HEX w/o padding[0m
[32mBase32[0m
[32m- should decode from BASE32HEXURL[0m
Read from stdout: Run completed in 438 milliseconds.
Read from stdout: Total number of tests run: 32
Read from stdout: Suites: completed 6, aborted 0
Read from stdout: Tests: succeeded 32, failed 0, canceled 0, ignored 0, pending 0
Read from stdout: All tests passed.
Run completed in 438 milliseconds.
Total number of tests run: 32
Suites: completed 6, aborted 0
Tests: succeeded 32, failed 0, canceled 0, ignored 0, pending 0
All tests passed.
Passed tests:
	StreamEncoderSpec
	StreamCodecSpec
	Base64Spec
	StreamDecoderSpec
	Base32Spec
	Base16Spec
Total time: 2 s, completed 01.06.2016 10:16:27
> server-post-command-cleanup
> server-handle-next-server-request
> compile
Evaluating tasks: compile:compile
Running task... Cancel: sbt.server.ServerTaskCancellation@486d0b18, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamCodec.scala)
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamCodec.scala)

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamCodec.scala)

Read from stdout: Compiling 1 Scala source to /Users/lpfeiler/develop/github/base64/target/scala-2.11/classes...
Compiling 1 Scala source to /Users/lpfeiler/develop/github/base64/target/scala-2.11/classes...
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Running cached compiler 6d705ae3, interfacing (CompilerInterface) with Scala compiler version 2.11.7
Calling Scala compiler with arguments  (CompilerInterface):
	-bootclasspath
	/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/classes:/Users/lpfeiler/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.11.7.jar
	-classpath
	/Users/lpfeiler/develop/github/base64/target/scala-2.11/classes
Read from stdout: there was one feature warning; re-run with -feature for details
there was one feature warning; re-run with -feature for details
Read from stdout: one warning found
one warning found
Scala compilation took 0.558085328 s
Invalidating /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamCodec.scala...
Invalidating (transitively) by inheritance from /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamCodec.scala...
Initial set of included nodes: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamCodec.scala)
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamEncoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamCodec.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNEncoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamEncoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Encoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNEncoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlEncoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Encoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexEncoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Encoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlEncoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexEncoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base16Encoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNEncoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Encoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNEncoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileEncoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Encoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlEncoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileEncoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamCodec.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamDecoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Decoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Decoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/PercentDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamDecoder.scala
Invalidated by transitive inheritance dependency: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Encoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Decoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamCodec.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base16Encoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Encoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/PercentDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexEncoder.scala)
The /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamCodec.scala source file has the following regular definitions changed:
	groupStreamAux, groupStream.
All member reference dependencies will be considered within this context.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileEncoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
The following modified names cause invalidation of /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala: Set(groupStream)
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/PercentDecoder.scala. This dependency is not being considered for invalidation.
The following modified names cause invalidation of /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala: Set(groupStream)
The following modified names cause invalidation of /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamEncoder.scala: Set(groupStreamAux)
The following modified names cause invalidation of /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamDecoder.scala: Set(groupStreamAux)
The following modified names cause invalidation of /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNEncoder.scala: Set(groupStream)
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Encoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseN.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base16Encoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base16.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Encoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base16.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlEncoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlEncoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexEncoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala. This dependency is not being considered for invalidation.
The following modified names cause invalidation of /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNEncoder.scala: Set(groupStream)
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseN.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Decoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlEncoder.scala. This dependency is not being considered for invalidation.
New invalidations:
	Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Encoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Decoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base16Encoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Encoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/PercentDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexEncoder.scala)
Initial set of included nodes: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Encoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Decoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base16Encoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Encoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/PercentDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexEncoder.scala)
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Encoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileEncoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Encoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlEncoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileEncoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Decoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlEncoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamDecoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseN.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base16.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseN.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/PercentDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamDecoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base16Encoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNEncoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Encoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNEncoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlEncoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Encoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexEncoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Encoder.scala
Previously invalidated, but (transitively) depend on new invalidations:
	Set()
All newly invalidated sources after taking into account (previously) recompiled sources:Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Encoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Decoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base16Encoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Encoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/PercentDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexEncoder.scala)
Recompiling all 27 sources: invalidated sources (20) exceeded 50.0% of all sources
Read from stdout: Compiling 27 Scala sources to /Users/lpfeiler/develop/github/base64/target/scala-2.11/classes...
Compiling 27 Scala sources to /Users/lpfeiler/develop/github/base64/target/scala-2.11/classes...
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Running cached compiler 219ae0d4, interfacing (CompilerInterface) with Scala compiler version 2.11.7
Calling Scala compiler with arguments  (CompilerInterface):
	-bootclasspath
	/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/classes:/Users/lpfeiler/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.11.7.jar
	-classpath
	/Users/lpfeiler/develop/github/base64/target/scala-2.11/classes
Read from stdout: /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamDecoder.scala:7: name clash between defined and inherited member:
Read from stdout: protected def groupStream[T](groupSize: Int,s: Stream[T]): Stream[Seq[T]] in trait StreamCodec and
Read from stdout: protected def groupStream(groupSize: Int,s: Stream[Byte]): Stream[Seq[Byte]] at line 7
Read from stdout: have same type after erasure: (groupSize: Int, s: scala.collection.immutable.Stream)scala.collection.immutable.Stream
/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamDecoder.scala:7: name clash between defined and inherited member:
protected def groupStream[T](groupSize: Int,s: Stream[T]): Stream[Seq[T]] in trait StreamCodec and
protected def groupStream(groupSize: Int,s: Stream[Byte]): Stream[Seq[Byte]] at line 7
have same type after erasure: (groupSize: Int, s: scala.collection.immutable.Stream)scala.collection.immutable.Stream
Read from stdout: protected def groupStream(groupSize: Int, s: Stream[Byte]): Stream[Seq[Byte]] =
    protected def groupStream(groupSize: Int, s: Stream[Byte]): Stream[Seq[Byte]] =
Read from stdout: ^
                  ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamDecoder.scala:10: name clash between defined and inherited member:
Read from stdout: protected def groupStreamAux[T](i: Iterator[Stream[T]]): Stream[Seq[T]] in trait StreamCodec and
Read from stdout: protected def groupStreamAux(i: Iterator[Stream[Byte]]): Stream[Seq[Byte]] at line 10
Read from stdout: have same type after erasure: (i: Iterator)scala.collection.immutable.Stream
/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamDecoder.scala:10: name clash between defined and inherited member:
protected def groupStreamAux[T](i: Iterator[Stream[T]]): Stream[Seq[T]] in trait StreamCodec and
protected def groupStreamAux(i: Iterator[Stream[Byte]]): Stream[Seq[Byte]] at line 10
have same type after erasure: (i: Iterator)scala.collection.immutable.Stream
Read from stdout: protected def groupStreamAux(i: Iterator[Stream[Byte]]): Stream[Seq[Byte]] =
    protected def groupStreamAux(i: Iterator[Stream[Byte]]): Stream[Seq[Byte]] =
Read from stdout: ^
                  ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamEncoder.scala:15: name clash between defined and inherited member:
Read from stdout: protected def groupStream[T](groupSize: Int,s: Stream[T]): Stream[Seq[T]] in trait StreamCodec and
Read from stdout: protected def groupStream(groupSize: Int,s: Stream[Int]): Stream[Seq[Int]] at line 15
Read from stdout: have same type after erasure: (groupSize: Int, s: scala.collection.immutable.Stream)scala.collection.immutable.Stream
/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamEncoder.scala:15: name clash between defined and inherited member:
protected def groupStream[T](groupSize: Int,s: Stream[T]): Stream[Seq[T]] in trait StreamCodec and
protected def groupStream(groupSize: Int,s: Stream[Int]): Stream[Seq[Int]] at line 15
have same type after erasure: (groupSize: Int, s: scala.collection.immutable.Stream)scala.collection.immutable.Stream
Read from stdout: protected def groupStream(groupSize: Int, s: Stream[Int]): Stream[Seq[Int]] =
    protected def groupStream(groupSize: Int, s: Stream[Int]): Stream[Seq[Int]] =
Read from stdout: ^
                  ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamEncoder.scala:18: name clash between defined and inherited member:
Read from stdout: protected def groupStreamAux[T](i: Iterator[Stream[T]]): Stream[Seq[T]] in trait StreamCodec and
Read from stdout: protected def groupStreamAux(i: Iterator[Stream[Int]]): Stream[Seq[Int]] at line 18
Read from stdout: have same type after erasure: (i: Iterator)scala.collection.immutable.Stream
/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamEncoder.scala:18: name clash between defined and inherited member:
protected def groupStreamAux[T](i: Iterator[Stream[T]]): Stream[Seq[T]] in trait StreamCodec and
protected def groupStreamAux(i: Iterator[Stream[Int]]): Stream[Seq[Int]] at line 18
have same type after erasure: (i: Iterator)scala.collection.immutable.Stream
Read from stdout: protected def groupStreamAux(i: Iterator[Stream[Int]]): Stream[Seq[Int]] =
    protected def groupStreamAux(i: Iterator[Stream[Int]]): Stream[Seq[Int]] =
Read from stdout: ^
                  ^
Read from stdout: four errors found
four errors found
Compilation failed (CompilerInterface)
Read from stdout: (compile:compileIncremental) Compilation failed
(compile:compileIncremental) Compilation failed
Total time: 2 s, completed 01.06.2016 10:19:04
> server-post-command-error-handler
> server-post-command-cleanup
> server-handle-next-server-request
> compile
Evaluating tasks: compile:compile
Running task... Cancel: sbt.server.ServerTaskCancellation@6cde416b, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamCodec.scala)
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamCodec.scala)

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamCodec.scala)

Read from stdout: Compiling 2 Scala sources to /Users/lpfeiler/develop/github/base64/target/scala-2.11/classes...
Compiling 2 Scala sources to /Users/lpfeiler/develop/github/base64/target/scala-2.11/classes...
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Running cached compiler 6d2abdad, interfacing (CompilerInterface) with Scala compiler version 2.11.7
Calling Scala compiler with arguments  (CompilerInterface):
	-bootclasspath
	/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/classes:/Users/lpfeiler/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.11.7.jar
	-classpath
	/Users/lpfeiler/develop/github/base64/target/scala-2.11/classes
Read from stdout: there was one feature warning; re-run with -feature for details
there was one feature warning; re-run with -feature for details
Read from stdout: one warning found
one warning found
Scala compilation took 0.67861856 s
Invalidating /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamDecoder.scala...
Invalidating (transitively) by inheritance from /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamDecoder.scala...
Initial set of included nodes: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamDecoder.scala)
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamDecoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Decoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Decoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/PercentDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamDecoder.scala
Invalidated by transitive inheritance dependency: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Decoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/PercentDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala)
The /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamDecoder.scala source file has the following regular definitions changed:
	groupStreamAux, groupStream.
All member reference dependencies will be considered within this context.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
The following modified names cause invalidation of /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala: Set(groupStream)
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/PercentDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseN.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Decoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala. This dependency is not being considered for invalidation.
Invalidating /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamCodec.scala...
Invalidating (transitively) by inheritance from /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamCodec.scala...
Initial set of included nodes: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamCodec.scala)
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamCodec.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamDecoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Decoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Decoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/PercentDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamDecoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamEncoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamCodec.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNEncoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamEncoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Encoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNEncoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlEncoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Encoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexEncoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Encoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlEncoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexEncoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base16Encoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNEncoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Encoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNEncoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileEncoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Encoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlEncoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileEncoder.scala
Invalidated by transitive inheritance dependency: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Encoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Decoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamCodec.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base16Encoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Encoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/PercentDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexEncoder.scala)
The /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamCodec.scala source file has the following regular definitions changed:
	groupStreamAux, groupStream.
All member reference dependencies will be considered within this context.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileEncoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
The following modified names cause invalidation of /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala: Set(groupStream)
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/PercentDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamDecoder.scala. This dependency is not being considered for invalidation.
The following modified names cause invalidation of /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala: Set(groupStream)
The following modified names cause invalidation of /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamEncoder.scala: Set(groupStreamAux)
The following modified names cause invalidation of /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNEncoder.scala: Set(groupStream)
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Encoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseN.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base16Encoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base16.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Encoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base16.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlEncoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlEncoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexEncoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala. This dependency is not being considered for invalidation.
The following modified names cause invalidation of /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNEncoder.scala: Set(groupStream)
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseN.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Decoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlEncoder.scala. This dependency is not being considered for invalidation.
New invalidations:
	Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Encoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Decoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base16Encoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Encoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/PercentDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexEncoder.scala)
Initial set of included nodes: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Encoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Decoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base16Encoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Encoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/PercentDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexEncoder.scala)
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Encoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileEncoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Encoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlEncoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileEncoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Decoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlEncoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseN.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNEncoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base16.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseN.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base16Encoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNEncoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Encoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNEncoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlEncoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Encoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexEncoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Encoder.scala
Previously invalidated, but (transitively) depend on new invalidations:
	Set()
All newly invalidated sources after taking into account (previously) recompiled sources:Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Encoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Decoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base16Encoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Encoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/PercentDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexEncoder.scala)
Recompiling all 27 sources: invalidated sources (19) exceeded 50.0% of all sources
Read from stdout: Compiling 27 Scala sources to /Users/lpfeiler/develop/github/base64/target/scala-2.11/classes...
Compiling 27 Scala sources to /Users/lpfeiler/develop/github/base64/target/scala-2.11/classes...
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Running cached compiler 46f05ed6, interfacing (CompilerInterface) with Scala compiler version 2.11.7
Calling Scala compiler with arguments  (CompilerInterface):
	-bootclasspath
	/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/classes:/Users/lpfeiler/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.11.7.jar
	-classpath
	/Users/lpfeiler/develop/github/base64/target/scala-2.11/classes
Read from stdout: /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamEncoder.scala:15: name clash between defined and inherited member:
Read from stdout: protected def groupStream[T](groupSize: Int,s: Stream[T]): Stream[Seq[T]] in trait StreamCodec and
Read from stdout: protected def groupStream(groupSize: Int,s: Stream[Int]): Stream[Seq[Int]] at line 15
Read from stdout: have same type after erasure: (groupSize: Int, s: scala.collection.immutable.Stream)scala.collection.immutable.Stream
/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamEncoder.scala:15: name clash between defined and inherited member:
protected def groupStream[T](groupSize: Int,s: Stream[T]): Stream[Seq[T]] in trait StreamCodec and
protected def groupStream(groupSize: Int,s: Stream[Int]): Stream[Seq[Int]] at line 15
have same type after erasure: (groupSize: Int, s: scala.collection.immutable.Stream)scala.collection.immutable.Stream
Read from stdout: protected def groupStream(groupSize: Int, s: Stream[Int]): Stream[Seq[Int]] =
    protected def groupStream(groupSize: Int, s: Stream[Int]): Stream[Seq[Int]] =
Read from stdout: ^
                  ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamEncoder.scala:18: name clash between defined and inherited member:
Read from stdout: protected def groupStreamAux[T](i: Iterator[Stream[T]]): Stream[Seq[T]] in trait StreamCodec and
Read from stdout: protected def groupStreamAux(i: Iterator[Stream[Int]]): Stream[Seq[Int]] at line 18
Read from stdout: have same type after erasure: (i: Iterator)scala.collection.immutable.Stream
/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamEncoder.scala:18: name clash between defined and inherited member:
protected def groupStreamAux[T](i: Iterator[Stream[T]]): Stream[Seq[T]] in trait StreamCodec and
protected def groupStreamAux(i: Iterator[Stream[Int]]): Stream[Seq[Int]] at line 18
have same type after erasure: (i: Iterator)scala.collection.immutable.Stream
Read from stdout: protected def groupStreamAux(i: Iterator[Stream[Int]]): Stream[Seq[Int]] =
    protected def groupStreamAux(i: Iterator[Stream[Int]]): Stream[Seq[Int]] =
Read from stdout: ^
                  ^
Read from stdout: two errors found
two errors found
Compilation failed (CompilerInterface)
Read from stdout: (compile:compileIncremental) Compilation failed
(compile:compileIncremental) Compilation failed
Total time: 3 s, completed 01.06.2016 10:19:23
> server-post-command-error-handler
> server-post-command-cleanup
> server-handle-next-server-request
> compile
Evaluating tasks: compile:compile
Running task... Cancel: sbt.server.ServerTaskCancellation@2831f3f0, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamCodec.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamEncoder.scala)
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamCodec.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamEncoder.scala)

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamCodec.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamEncoder.scala)

Read from stdout: Compiling 3 Scala sources to /Users/lpfeiler/develop/github/base64/target/scala-2.11/classes...
Compiling 3 Scala sources to /Users/lpfeiler/develop/github/base64/target/scala-2.11/classes...
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Running cached compiler 351557a6, interfacing (CompilerInterface) with Scala compiler version 2.11.7
Calling Scala compiler with arguments  (CompilerInterface):
	-bootclasspath
	/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/classes:/Users/lpfeiler/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.11.7.jar
	-classpath
	/Users/lpfeiler/develop/github/base64/target/scala-2.11/classes
Read from stdout: there was one feature warning; re-run with -feature for details
there was one feature warning; re-run with -feature for details
Read from stdout: one warning found
one warning found
Scala compilation took 0.602454617 s
Invalidating /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamDecoder.scala...
Invalidating (transitively) by inheritance from /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamDecoder.scala...
Initial set of included nodes: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamDecoder.scala)
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamDecoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Decoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Decoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/PercentDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamDecoder.scala
Invalidated by transitive inheritance dependency: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Decoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/PercentDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala)
The /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamDecoder.scala source file has the following regular definitions changed:
	groupStreamAux, groupStream.
All member reference dependencies will be considered within this context.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
The following modified names cause invalidation of /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala: Set(groupStream)
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/PercentDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseN.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Decoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala. This dependency is not being considered for invalidation.
Invalidating /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamCodec.scala...
Invalidating (transitively) by inheritance from /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamCodec.scala...
Initial set of included nodes: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamCodec.scala)
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamEncoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamCodec.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNEncoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamEncoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Encoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNEncoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlEncoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Encoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexEncoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Encoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlEncoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexEncoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base16Encoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNEncoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Encoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNEncoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileEncoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Encoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlEncoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileEncoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamCodec.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamDecoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Decoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Decoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/PercentDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamDecoder.scala
Invalidated by transitive inheritance dependency: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Encoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Decoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamCodec.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base16Encoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Encoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/PercentDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexEncoder.scala)
The /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamCodec.scala source file has the following regular definitions changed:
	groupStreamAux, groupStream.
All member reference dependencies will be considered within this context.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileEncoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
The following modified names cause invalidation of /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala: Set(groupStream)
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/PercentDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamEncoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamDecoder.scala. This dependency is not being considered for invalidation.
The following modified names cause invalidation of /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala: Set(groupStream)
The following modified names cause invalidation of /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNEncoder.scala: Set(groupStream)
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Encoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseN.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base16Encoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base16.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Encoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base16.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlEncoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlEncoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexEncoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala. This dependency is not being considered for invalidation.
The following modified names cause invalidation of /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNEncoder.scala: Set(groupStream)
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseN.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Decoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlEncoder.scala. This dependency is not being considered for invalidation.
Invalidating /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamEncoder.scala...
Invalidating (transitively) by inheritance from /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamEncoder.scala...
Initial set of included nodes: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamEncoder.scala)
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNEncoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamEncoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Encoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNEncoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlEncoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Encoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexEncoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Encoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlEncoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexEncoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base16Encoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNEncoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Encoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNEncoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileEncoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Encoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlEncoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileEncoder.scala
Invalidated by transitive inheritance dependency: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Encoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base16Encoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Encoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexEncoder.scala)
The /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamEncoder.scala source file has the following regular definitions changed:
	groupStreamAux, groupStream.
All member reference dependencies will be considered within this context.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileEncoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Encoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseN.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base16Encoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base16.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Encoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base16.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlEncoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlEncoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexEncoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
The following modified names cause invalidation of /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNEncoder.scala: Set(groupStream)
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlEncoder.scala. This dependency is not being considered for invalidation.
New invalidations:
	Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Encoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Decoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base16Encoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Encoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/PercentDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexEncoder.scala)
Initial set of included nodes: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Encoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Decoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base16Encoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Encoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/PercentDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexEncoder.scala)
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Encoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileEncoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Encoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlEncoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileEncoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Decoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlEncoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseN.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNEncoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base16.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseN.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base16Encoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNEncoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Encoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNEncoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlEncoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Encoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexEncoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Encoder.scala
Previously invalidated, but (transitively) depend on new invalidations:
	Set()
All newly invalidated sources after taking into account (previously) recompiled sources:Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Encoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Decoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base16Encoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Encoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/PercentDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexEncoder.scala)
Recompiling all 27 sources: invalidated sources (18) exceeded 50.0% of all sources
Read from stdout: Compiling 27 Scala sources to /Users/lpfeiler/develop/github/base64/target/scala-2.11/classes...
Compiling 27 Scala sources to /Users/lpfeiler/develop/github/base64/target/scala-2.11/classes...
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Running cached compiler 6ecca511, interfacing (CompilerInterface) with Scala compiler version 2.11.7
Calling Scala compiler with arguments  (CompilerInterface):
	-bootclasspath
	/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/classes:/Users/lpfeiler/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.11.7.jar
	-classpath
	/Users/lpfeiler/develop/github/base64/target/scala-2.11/classes
Read from stdout: there were four feature warnings; re-run with -feature for details
there were four feature warnings; re-run with -feature for details
Read from stdout: one warning found
one warning found
Scala compilation took 1.792317717 s
Invalidating /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Encoder.scala...
Invalidating (transitively) by inheritance from /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Encoder.scala...
Initial set of included nodes: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Encoder.scala)
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileEncoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Encoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlEncoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileEncoder.scala
Invalidated by transitive inheritance dependency: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Encoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlEncoder.scala)
The /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Encoder.scala source file has the following regular definitions changed:
	groupStream, groupStreamAux.
All member reference dependencies will be considered within this context.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlEncoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileEncoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
Invalidating /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileEncoder.scala...
Invalidating (transitively) by inheritance from /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileEncoder.scala...
Initial set of included nodes: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileEncoder.scala)
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlEncoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileEncoder.scala
Invalidated by transitive inheritance dependency: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlEncoder.scala)
The /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileEncoder.scala source file has the following regular definitions changed:
	groupStreamAux, groupStream.
All member reference dependencies will be considered within this context.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlEncoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
Invalidating /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala...
Invalidating (transitively) by inheritance from /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala...
Initial set of included nodes: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala)
Invalidated by transitive inheritance dependency: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala)
The /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala source file has the following regular definitions changed:
	groupStream, groupStreamAux.
All member reference dependencies will be considered within this context.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
Invalidating /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala...
Invalidating (transitively) by inheritance from /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala...
Initial set of included nodes: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala)
Invalidated by transitive inheritance dependency: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala)
The /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala source file has the following regular definitions changed:
	groupStreamAux, groupStream.
All member reference dependencies will be considered within this context.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
Invalidating /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/PercentDecoder.scala...
Invalidating (transitively) by inheritance from /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/PercentDecoder.scala...
Initial set of included nodes: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/PercentDecoder.scala)
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/PercentDecoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/PercentDecoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/PercentDecoder.scala
Invalidated by transitive inheritance dependency: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/PercentDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala)
The /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/PercentDecoder.scala source file has the following regular definitions changed:
	groupStreamAux, groupStream.
All member reference dependencies will be considered within this context.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
Invalidating /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Decoder.scala...
Invalidating (transitively) by inheritance from /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Decoder.scala...
Initial set of included nodes: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Decoder.scala)
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Decoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala
Invalidated by transitive inheritance dependency: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Decoder.scala)
The /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Decoder.scala source file has the following regular definitions changed:
	groupStreamAux, groupStream.
All member reference dependencies will be considered within this context.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
Invalidating /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlEncoder.scala...
Invalidating (transitively) by inheritance from /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlEncoder.scala...
Initial set of included nodes: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlEncoder.scala)
Invalidated by transitive inheritance dependency: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlEncoder.scala)
The /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlEncoder.scala source file has the following regular definitions changed:
	groupStreamAux, groupStream.
All member reference dependencies will be considered within this context.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
Invalidating /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala...
Invalidating (transitively) by inheritance from /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala...
Initial set of included nodes: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala)
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala
Invalidated by transitive inheritance dependency: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala)
The /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala source file has the following regular definitions changed:
	groupStream, groupStreamAux.
All member reference dependencies will be considered within this context.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
Invalidating /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base16Encoder.scala...
Invalidating (transitively) by inheritance from /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base16Encoder.scala...
Initial set of included nodes: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base16Encoder.scala)
Invalidated by transitive inheritance dependency: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base16Encoder.scala)
The /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base16Encoder.scala source file has the following regular definitions changed:
	groupStreamAux, groupStream.
All member reference dependencies will be considered within this context.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base16.scala. This dependency is not being considered for invalidation.
Invalidating /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlEncoder.scala...
Invalidating (transitively) by inheritance from /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlEncoder.scala...
Initial set of included nodes: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlEncoder.scala)
Invalidated by transitive inheritance dependency: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlEncoder.scala)
The /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlEncoder.scala source file has the following regular definitions changed:
	groupStream, groupStreamAux.
All member reference dependencies will be considered within this context.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
Invalidating /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNEncoder.scala...
Invalidating (transitively) by inheritance from /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNEncoder.scala...
Initial set of included nodes: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNEncoder.scala)
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Encoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNEncoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlEncoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Encoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexEncoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Encoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlEncoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexEncoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base16Encoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNEncoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Encoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNEncoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileEncoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Encoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlEncoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileEncoder.scala
Invalidated by transitive inheritance dependency: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Encoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base16Encoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Encoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexEncoder.scala)
The /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNEncoder.scala source file has the following regular definitions changed:
	groupStream, groupStreamAux.
All member reference dependencies will be considered within this context.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileEncoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Encoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseN.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base16Encoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base16.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Encoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base16.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlEncoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlEncoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexEncoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlEncoder.scala. This dependency is not being considered for invalidation.
Invalidating /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Encoder.scala...
Invalidating (transitively) by inheritance from /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Encoder.scala...
Initial set of included nodes: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Encoder.scala)
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlEncoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Encoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexEncoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Encoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlEncoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexEncoder.scala
Invalidated by transitive inheritance dependency: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Encoder.scala)
The /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Encoder.scala source file has the following regular definitions changed:
	groupStreamAux, groupStream.
All member reference dependencies will be considered within this context.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlEncoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlEncoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexEncoder.scala. This dependency is not being considered for invalidation.
Invalidating /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala...
Invalidating (transitively) by inheritance from /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala...
Initial set of included nodes: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala)
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Decoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Decoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala
Invalidated by transitive inheritance dependency: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Decoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala)
The /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseNDecoder.scala source file has the following regular definitions changed:
	groupStreamAux, groupStream.
All member reference dependencies will be considered within this context.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/BaseN.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64Decoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala. This dependency is not being considered for invalidation.
Invalidating /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala...
Invalidating (transitively) by inheritance from /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala...
Initial set of included nodes: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala)
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala
Invalidated by transitive inheritance dependency: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala)
The /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32Decoder.scala source file has the following regular definitions changed:
	groupStreamAux, groupStream.
All member reference dependencies will be considered within this context.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
Invalidating /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexEncoder.scala...
Invalidating (transitively) by inheritance from /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexEncoder.scala...
Initial set of included nodes: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexEncoder.scala)
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlEncoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexEncoder.scala
Invalidated by transitive inheritance dependency: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexEncoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlEncoder.scala)
The /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexEncoder.scala source file has the following regular definitions changed:
	groupStreamAux, groupStream.
All member reference dependencies will be considered within this context.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32HexUrlEncoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
Invalidating /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlEncoder.scala...
Invalidating (transitively) by inheritance from /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlEncoder.scala...
Initial set of included nodes: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlEncoder.scala)
Invalidated by transitive inheritance dependency: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlEncoder.scala)
The /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlEncoder.scala source file has the following regular definitions changed:
	groupStreamAux, groupStream.
All member reference dependencies will be considered within this context.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
Invalidating /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala...
Invalidating (transitively) by inheritance from /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala...
Initial set of included nodes: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala)
Invalidated by transitive inheritance dependency: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala)
The /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32UrlDecoder.scala source file has the following regular definitions changed:
	groupStreamAux, groupStream.
All member reference dependencies will be considered within this context.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base32.scala. This dependency is not being considered for invalidation.
Invalidating /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala...
Invalidating (transitively) by inheritance from /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala...
Initial set of included nodes: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala)
Including /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala by /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala
Invalidated by transitive inheritance dependency: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala, /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala)
The /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64FileDecoder.scala source file has the following regular definitions changed:
	groupStreamAux, groupStream.
All member reference dependencies will be considered within this context.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64UrlDecoder.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/Base64.scala. This dependency is not being considered for invalidation.
New invalidations:
	Set()
Initial set of included nodes: Set()
Previously invalidated, but (transitively) depend on new invalidations:
	Set()
All newly invalidated sources after taking into account (previously) recompiled sources:Set()
Total time: 3 s, completed 01.06.2016 10:19:31
> server-post-command-cleanup
> server-handle-next-server-request
> compile
Evaluating tasks: compile:compile
Running task... Cancel: sbt.server.ServerTaskCancellation@5d763c31, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set()
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set()

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set()

Total time: 0 s, completed 01.06.2016 10:19:46
> server-post-command-cleanup
> server-handle-next-server-request
> test
Evaluating tasks: test:test
Running task... Cancel: sbt.server.ServerTaskCancellation@7abbf884, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set()
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set()

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set()

Copy resource mappings: 
	
The de.csmath.codec.Codec$ source file has the following regular definitions changed:
	needPads.
All member reference dependencies will be considered within this context.
Files invalidated by inheriting from (external) de.csmath.codec.Codec$: Set(); now invalidating by inheritance (internally).
Getting direct dependencies of all sources transitively invalidated by inheritance.
Getting sources that directly depend on (external) de.csmath.codec.Codec$.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/test/scala/Base16Spec.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/test/scala/Base32Spec.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/test/scala/Base64Spec.scala. This dependency is not being considered for invalidation.
The de.csmath.codec.StreamEncoder source file has the following regular definitions changed:
	groupStreamAux, groupStream.
All member reference dependencies will be considered within this context.
Files invalidated by inheriting from (external) de.csmath.codec.StreamEncoder: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamEncoderSpec.scala); now invalidating by inheritance (internally).
Invalidating (transitively) by inheritance from /Users/lpfeiler/develop/github/base64/src/test/scala/StreamEncoderSpec.scala...
Initial set of included nodes: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamEncoderSpec.scala)
Invalidated by transitive inheritance dependency: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamEncoderSpec.scala)
Getting direct dependencies of all sources transitively invalidated by inheritance.
Getting sources that directly depend on (external) de.csmath.codec.StreamEncoder.
The following modified names cause invalidation of /Users/lpfeiler/develop/github/base64/src/test/scala/StreamEncoderSpec.scala: Set(groupStream)
The de.csmath.codec.StreamDecoder source file has the following regular definitions changed:
	groupStreamAux, groupStream.
All member reference dependencies will be considered within this context.
Files invalidated by inheriting from (external) de.csmath.codec.StreamDecoder: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala); now invalidating by inheritance (internally).
Invalidating (transitively) by inheritance from /Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala...
Initial set of included nodes: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala)
Invalidated by transitive inheritance dependency: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala)
Getting direct dependencies of all sources transitively invalidated by inheritance.
Getting sources that directly depend on (external) de.csmath.codec.StreamDecoder.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala. This dependency is not being considered for invalidation.
The de.csmath.codec.StreamCodec source file has the following regular definitions changed:
	groupStreamAux, groupStream.
All member reference dependencies will be considered within this context.
Files invalidated by inheriting from (external) de.csmath.codec.StreamCodec: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala); now invalidating by inheritance (internally).
Invalidating (transitively) by inheritance from /Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala...
Initial set of included nodes: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala)
Invalidated by transitive inheritance dependency: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala)
Getting direct dependencies of all sources transitively invalidated by inheritance.
Getting sources that directly depend on (external) de.csmath.codec.StreamCodec.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala. This dependency is not being considered for invalidation.
The following modified names cause invalidation of /Users/lpfeiler/develop/github/base64/src/test/scala/StreamEncoderSpec.scala: Set(groupStream)

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala)
Removed products: Set()
External API changes: API Changes: Set(NamesChange(de.csmath.codec.Codec$,ModifiedNames(regularNames = needPads, implicitNames = )), NamesChange(de.csmath.codec.StreamEncoder,ModifiedNames(regularNames = groupStreamAux, groupStream, implicitNames = )), NamesChange(de.csmath.codec.StreamDecoder,ModifiedNames(regularNames = groupStreamAux, groupStream, implicitNames = )), NamesChange(de.csmath.codec.StreamCodec,ModifiedNames(regularNames = groupStreamAux, groupStream, implicitNames = )))
Modified binary dependencies: Set()
Initial directly invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala)

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamEncoderSpec.scala, /Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala, /Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala)
All initially invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala, /Users/lpfeiler/develop/github/base64/src/test/scala/StreamEncoderSpec.scala, /Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala)

Read from stdout: Compiling 3 Scala sources to /Users/lpfeiler/develop/github/base64/target/scala-2.11/test-classes...
Compiling 3 Scala sources to /Users/lpfeiler/develop/github/base64/target/scala-2.11/test-classes...
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Running cached compiler 238fbd47, interfacing (CompilerInterface) with Scala compiler version 2.11.7
Calling Scala compiler with arguments  (CompilerInterface):
	-bootclasspath
	/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/classes:/Users/lpfeiler/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.11.7.jar
	-classpath
	/Users/lpfeiler/develop/github/base64/target/scala-2.11/test-classes:/Users/lpfeiler/develop/github/base64/target/scala-2.11/classes:/Users/lpfeiler/develop/scala/activator-dist-1.3.6/repository/org.scalatest/scalatest_2.11/2.2.4/bundles/scalatest_2.11.jar:/Users/lpfeiler/develop/scala/activator-dist-1.3.6/repository/org.scala-lang/scala-reflect/2.11.2/jars/scala-reflect.jar:/Users/lpfeiler/develop/scala/activator-dist-1.3.6/repository/org.scala-lang.modules/scala-xml_2.11/1.0.2/bundles/scala-xml_2.11.jar
Read from stdout: there were 27 feature warnings; re-run with -feature for details
there were 27 feature warnings; re-run with -feature for details
Read from stdout: one warning found
one warning found
Scala compilation took 1.494908115 s
New invalidations:
	Set()
Initial set of included nodes: Set()
Previously invalidated, but (transitively) depend on new invalidations:
	Set()
All newly invalidated sources after taking into account (previously) recompiled sources:Set()
Copy resource mappings: 
	
Framework implementation 'org.scalacheck.ScalaCheckFramework' not present.
Framework implementation 'org.specs2.runner.Specs2Framework' not present.
Framework implementation 'org.specs2.runner.SpecsFramework' not present.
Framework implementation 'org.specs.runner.SpecsFramework' not present.
Framework implementation 'com.novocode.junit.JUnitFramework' not present.
Subclass fingerprints: List((org.scalatest.Suite,false,org.scalatest.tools.Framework$$anon$1@3288740))
Annotation fingerprints: List((org.scalatest.WrapWith,false,org.scalatest.tools.Framework$$anon$2@1f4c3a8))
Running TaskDef(Base64Spec, org.scalatest.tools.Framework$$anon$1@3288740, false, [SuiteSelector])
Running TaskDef(StreamCodecSpec, org.scalatest.tools.Framework$$anon$1@3288740, false, [SuiteSelector])
Running TaskDef(Base16Spec, org.scalatest.tools.Framework$$anon$1@3288740, false, [SuiteSelector])
Running TaskDef(StreamEncoderSpec, org.scalatest.tools.Framework$$anon$1@3288740, false, [SuiteSelector])
Read from stdout: StreamCodecSpec:
Read from stdout: StreamCodec
Read from stdout: - should create a ByteStream
[32mStreamCodecSpec:[0m
[32mStreamCodec[0m
[32m- should create a ByteStream[0m
Running TaskDef(Base32Spec, org.scalatest.tools.Framework$$anon$1@3288740, false, [SuiteSelector])
Read from stdout: Base16Spec:
Read from stdout: Base16
Read from stdout: - should encode to BASE16
[32mBase16Spec:[0m
[32mBase16[0m
[32m- should encode to BASE16[0m
Running TaskDef(StreamDecoderSpec, org.scalatest.tools.Framework$$anon$1@3288740, false, [SuiteSelector])
Read from stdout: StreamDecoderSpec:
Read from stdout: StreamDecoder
Read from stdout: - should check allowed bytes
[32mStreamDecoderSpec:[0m
[32mStreamDecoder[0m
[32m- should check allowed bytes[0m
Read from stdout: StreamEncoderSpec:
Read from stdout: StreamEncoder
Read from stdout: - should create a ByteStream
Read from stdout: StreamEncoder
Read from stdout: - should create a IntStream
Read from stdout: StreamEncoder
Read from stdout: - should create a groupStream
Read from stdout: StreamEncoder
Read from stdout: - should create a filledStream
Read from stdout: StreamEncoder
Read from stdout: - should flatten a filledStream
[32mStreamEncoderSpec:[0m
[32mStreamEncoder[0m
[32m- should create a ByteStream[0m
[32mStreamEncoder[0m
[32m- should create a IntStream[0m
[32mStreamEncoder[0m
[32m- should create a groupStream[0m
[32mStreamEncoder[0m
[32m- should create a filledStream[0m
[32mStreamEncoder[0m
[32m- should flatten a filledStream[0m
Read from stdout: Base64Spec:
Read from stdout: Base64
Read from stdout: - should encode to BASE64
Read from stdout: Base64
Read from stdout: - should encode to BASE64FILE
Read from stdout: Base64
Read from stdout: - should encode to BASE64URL
Read from stdout: Base64
Read from stdout: - should encode to BASE64NOPAD
Read from stdout: Base64
Read from stdout: - should encode to BASE64FILENOPAD
Read from stdout: Base64
Read from stdout: - should encode to BASE64URLNOPAD
Read from stdout: Base64
Read from stdout: - should decode from BASE64
Read from stdout: Base64
Read from stdout: - should decode from BASE64 w/o padding
Read from stdout: Base64
Read from stdout: - should fail with crap
Read from stdout: Base64
Read from stdout: - should decode from BASE64FILE
Read from stdout: Base64
Read from stdout: - should decode from BASE64FILE w/o padding
Read from stdout: Base64
Read from stdout: - should decode from BASE64URL
[32mBase64Spec:[0m
[32mBase64[0m
[32m- should encode to BASE64[0m
[32mBase64[0m
[32m- should encode to BASE64FILE[0m
[32mBase64[0m
[32m- should encode to BASE64URL[0m
[32mBase64[0m
[32m- should encode to BASE64NOPAD[0m
[32mBase64[0m
[32m- should encode to BASE64FILENOPAD[0m
[32mBase64[0m
[32m- should encode to BASE64URLNOPAD[0m
[32mBase64[0m
[32m- should decode from BASE64[0m
[32mBase64[0m
[32m- should decode from BASE64 w/o padding[0m
[32mBase64[0m
[32m- should fail with crap[0m
[32mBase64[0m
[32m- should decode from BASE64FILE[0m
[32mBase64[0m
[32m- should decode from BASE64FILE w/o padding[0m
[32mBase64[0m
[32m- should decode from BASE64URL[0m
Read from stdout: Base32Spec:
Read from stdout: Base32
Read from stdout: - should encode to BASE32
Read from stdout: Base32
Read from stdout: - should encode to BASE32NOPAD
Read from stdout: Base32
Read from stdout: - should encode to BASE32URL
Read from stdout: Base32
Read from stdout: - should encode to BASE32HEX
Read from stdout: Base32
Read from stdout: - should encode to BASE32HEXNOPAD
Read from stdout: Base32
Read from stdout: - should encode to BASE32HEXURL
Read from stdout: Base32
Read from stdout: - should decode from BASE32
Read from stdout: Base32
Read from stdout: - should decode from BASE32 w/o padding
Read from stdout: Base32
Read from stdout: - should decode from BASE32URL
Read from stdout: Base32
Read from stdout: - should decode from BASE32HEX
Read from stdout: Base32
Read from stdout: - should decode from BASE32HEX w/o padding
Read from stdout: Base32
Read from stdout: - should decode from BASE32HEXURL
[32mBase32Spec:[0m
[32mBase32[0m
[32m- should encode to BASE32[0m
[32mBase32[0m
[32m- should encode to BASE32NOPAD[0m
[32mBase32[0m
[32m- should encode to BASE32URL[0m
[32mBase32[0m
[32m- should encode to BASE32HEX[0m
[32mBase32[0m
[32m- should encode to BASE32HEXNOPAD[0m
[32mBase32[0m
[32m- should encode to BASE32HEXURL[0m
[32mBase32[0m
[32m- should decode from BASE32[0m
[32mBase32[0m
[32m- should decode from BASE32 w/o padding[0m
[32mBase32[0m
[32m- should decode from BASE32URL[0m
[32mBase32[0m
[32m- should decode from BASE32HEX[0m
[32mBase32[0m
[32m- should decode from BASE32HEX w/o padding[0m
[32mBase32[0m
[32m- should decode from BASE32HEXURL[0m
Read from stdout: Run completed in 456 milliseconds.
Read from stdout: Total number of tests run: 32
Read from stdout: Suites: completed 6, aborted 0
Read from stdout: Tests: succeeded 32, failed 0, canceled 0, ignored 0, pending 0
Read from stdout: All tests passed.
Run completed in 456 milliseconds.
Total number of tests run: 32
Suites: completed 6, aborted 0
Tests: succeeded 32, failed 0, canceled 0, ignored 0, pending 0
All tests passed.
Passed tests:
	StreamEncoderSpec
	StreamCodecSpec
	Base64Spec
	StreamDecoderSpec
	Base32Spec
	Base16Spec
Total time: 2 s, completed 01.06.2016 10:19:48
> server-post-command-cleanup
> server-handle-next-server-request
> compile
Evaluating tasks: compile:compile
Running task... Cancel: sbt.server.ServerTaskCancellation@2510a3a6, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamDecoder.scala)
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamDecoder.scala)

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamDecoder.scala)

Read from stdout: Compiling 1 Scala source to /Users/lpfeiler/develop/github/base64/target/scala-2.11/classes...
Compiling 1 Scala source to /Users/lpfeiler/develop/github/base64/target/scala-2.11/classes...
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Running cached compiler 212311b3, interfacing (CompilerInterface) with Scala compiler version 2.11.7
Calling Scala compiler with arguments  (CompilerInterface):
	-bootclasspath
	/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/classes:/Users/lpfeiler/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.11.7.jar
	-classpath
	/Users/lpfeiler/develop/github/base64/target/scala-2.11/classes
Scala compilation took 0.323621083 s
New invalidations:
	Set()
Initial set of included nodes: Set()
Previously invalidated, but (transitively) depend on new invalidations:
	Set()
All newly invalidated sources after taking into account (previously) recompiled sources:Set()
Total time: 0 s, completed 01.06.2016 10:20:02
> server-post-command-cleanup
> server-handle-next-server-request
> test
Evaluating tasks: test:test
Running task... Cancel: sbt.server.ServerTaskCancellation@1900c435, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set()
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set()

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set()

Copy resource mappings: 
	
The de.csmath.codec.Codec$ source file has the following regular definitions changed:
	needPads.
All member reference dependencies will be considered within this context.
Files invalidated by inheriting from (external) de.csmath.codec.Codec$: Set(); now invalidating by inheritance (internally).
Getting direct dependencies of all sources transitively invalidated by inheritance.
Getting sources that directly depend on (external) de.csmath.codec.Codec$.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/test/scala/Base16Spec.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/test/scala/Base32Spec.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/test/scala/Base64Spec.scala. This dependency is not being considered for invalidation.

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set()
Removed products: Set()
External API changes: API Changes: Set(NamesChange(de.csmath.codec.Codec$,ModifiedNames(regularNames = needPads, implicitNames = )))
Modified binary dependencies: Set()
Initial directly invalidated sources: Set()

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set()

Copy resource mappings: 
	
Framework implementation 'org.scalacheck.ScalaCheckFramework' not present.
Framework implementation 'org.specs2.runner.Specs2Framework' not present.
Framework implementation 'org.specs2.runner.SpecsFramework' not present.
Framework implementation 'org.specs.runner.SpecsFramework' not present.
Framework implementation 'com.novocode.junit.JUnitFramework' not present.
Subclass fingerprints: List((org.scalatest.Suite,false,org.scalatest.tools.Framework$$anon$1@2228c872))
Annotation fingerprints: List((org.scalatest.WrapWith,false,org.scalatest.tools.Framework$$anon$2@2e28e936))
Running TaskDef(Base32Spec, org.scalatest.tools.Framework$$anon$1@2228c872, false, [SuiteSelector])
Running TaskDef(Base16Spec, org.scalatest.tools.Framework$$anon$1@2228c872, false, [SuiteSelector])
Running TaskDef(StreamCodecSpec, org.scalatest.tools.Framework$$anon$1@2228c872, false, [SuiteSelector])
Running TaskDef(StreamDecoderSpec, org.scalatest.tools.Framework$$anon$1@2228c872, false, [SuiteSelector])
Read from stdout: Base16Spec:
Read from stdout: Base16
Read from stdout: - should encode to BASE16
[32mBase16Spec:[0m
[32mBase16[0m
[32m- should encode to BASE16[0m
Read from stdout: StreamCodecSpec:
Read from stdout: StreamCodec
Read from stdout: - should create a ByteStream
[32mStreamCodecSpec:[0m
[32mStreamCodec[0m
[32m- should create a ByteStream[0m
Read from stdout: StreamDecoderSpec:
Read from stdout: StreamDecoder
Read from stdout: - should check allowed bytes
[32mStreamDecoderSpec:[0m
[32mStreamDecoder[0m
[32m- should check allowed bytes[0m
Running TaskDef(Base64Spec, org.scalatest.tools.Framework$$anon$1@2228c872, false, [SuiteSelector])
Running TaskDef(StreamEncoderSpec, org.scalatest.tools.Framework$$anon$1@2228c872, false, [SuiteSelector])
Read from stdout: StreamEncoderSpec:
Read from stdout: StreamEncoder
Read from stdout: - should create a ByteStream
Read from stdout: StreamEncoder
Read from stdout: - should create a IntStream
Read from stdout: StreamEncoder
Read from stdout: - should create a groupStream
Read from stdout: StreamEncoder
Read from stdout: - should create a filledStream
Read from stdout: StreamEncoder
Read from stdout: - should flatten a filledStream
[32mStreamEncoderSpec:[0m
[32mStreamEncoder[0m
[32m- should create a ByteStream[0m
[32mStreamEncoder[0m
[32m- should create a IntStream[0m
[32mStreamEncoder[0m
[32m- should create a groupStream[0m
[32mStreamEncoder[0m
[32m- should create a filledStream[0m
[32mStreamEncoder[0m
[32m- should flatten a filledStream[0m
Read from stdout: Base32Spec:
Read from stdout: Base32
Read from stdout: - should encode to BASE32
Read from stdout: Base32
Read from stdout: - should encode to BASE32NOPAD
Read from stdout: Base32
Read from stdout: - should encode to BASE32URL
Read from stdout: Base32
Read from stdout: - should encode to BASE32HEX
Read from stdout: Base32
Read from stdout: - should encode to BASE32HEXNOPAD
Read from stdout: Base32
Read from stdout: - should encode to BASE32HEXURL
Read from stdout: Base32
Read from stdout: - should decode from BASE32
Read from stdout: Base32
Read from stdout: - should decode from BASE32 w/o padding
Read from stdout: Base32
Read from stdout: - should decode from BASE32URL
Read from stdout: Base32
Read from stdout: - should decode from BASE32HEX
Read from stdout: Base32
Read from stdout: - should decode from BASE32HEX w/o padding
Read from stdout: Base32
Read from stdout: - should decode from BASE32HEXURL
[32mBase32Spec:[0m
[32mBase32[0m
[32m- should encode to BASE32[0m
[32mBase32[0m
[32m- should encode to BASE32NOPAD[0m
[32mBase32[0m
[32m- should encode to BASE32URL[0m
[32mBase32[0m
[32m- should encode to BASE32HEX[0m
[32mBase32[0m
[32m- should encode to BASE32HEXNOPAD[0m
[32mBase32[0m
[32m- should encode to BASE32HEXURL[0m
[32mBase32[0m
[32m- should decode from BASE32[0m
[32mBase32[0m
[32m- should decode from BASE32 w/o padding[0m
[32mBase32[0m
[32m- should decode from BASE32URL[0m
[32mBase32[0m
[32m- should decode from BASE32HEX[0m
[32mBase32[0m
[32m- should decode from BASE32HEX w/o padding[0m
[32mBase32[0m
[32m- should decode from BASE32HEXURL[0m
Read from stdout: Base64Spec:
Read from stdout: Base64
Read from stdout: - should encode to BASE64
Read from stdout: Base64
Read from stdout: - should encode to BASE64FILE
Read from stdout: Base64
Read from stdout: - should encode to BASE64URL
Read from stdout: Base64
Read from stdout: - should encode to BASE64NOPAD
Read from stdout: Base64
Read from stdout: - should encode to BASE64FILENOPAD
Read from stdout: Base64
Read from stdout: - should encode to BASE64URLNOPAD
Read from stdout: Base64
Read from stdout: - should decode from BASE64
Read from stdout: Base64
Read from stdout: - should decode from BASE64 w/o padding
Read from stdout: Base64
Read from stdout: - should fail with crap
Read from stdout: Base64
Read from stdout: - should decode from BASE64FILE
Read from stdout: Base64
Read from stdout: - should decode from BASE64FILE w/o padding
Read from stdout: Base64
Read from stdout: - should decode from BASE64URL
[32mBase64Spec:[0m
[32mBase64[0m
[32m- should encode to BASE64[0m
[32mBase64[0m
[32m- should encode to BASE64FILE[0m
[32mBase64[0m
[32m- should encode to BASE64URL[0m
[32mBase64[0m
[32m- should encode to BASE64NOPAD[0m
[32mBase64[0m
[32m- should encode to BASE64FILENOPAD[0m
[32mBase64[0m
[32m- should encode to BASE64URLNOPAD[0m
[32mBase64[0m
[32m- should decode from BASE64[0m
[32mBase64[0m
[32m- should decode from BASE64 w/o padding[0m
[32mBase64[0m
[32m- should fail with crap[0m
[32mBase64[0m
[32m- should decode from BASE64FILE[0m
[32mBase64[0m
[32m- should decode from BASE64FILE w/o padding[0m
[32mBase64[0m
[32m- should decode from BASE64URL[0m
Read from stdout: Run completed in 385 milliseconds.
Read from stdout: Total number of tests run: 32
Read from stdout: Suites: completed 6, aborted 0
Read from stdout: Tests: succeeded 32, failed 0, canceled 0, ignored 0, pending 0
Read from stdout: All tests passed.
Run completed in 385 milliseconds.
Total number of tests run: 32
Suites: completed 6, aborted 0
Tests: succeeded 32, failed 0, canceled 0, ignored 0, pending 0
All tests passed.
Passed tests:
	StreamEncoderSpec
	StreamCodecSpec
	Base64Spec
	StreamDecoderSpec
	Base32Spec
	Base16Spec
Total time: 1 s, completed 01.06.2016 10:20:02
> server-post-command-cleanup
> server-handle-next-server-request
> compile
Evaluating tasks: compile:compile
Running task... Cancel: sbt.server.ServerTaskCancellation@572839b0, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamEncoder.scala)
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamEncoder.scala)

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamEncoder.scala)

Read from stdout: Compiling 1 Scala source to /Users/lpfeiler/develop/github/base64/target/scala-2.11/classes...
Compiling 1 Scala source to /Users/lpfeiler/develop/github/base64/target/scala-2.11/classes...
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Running cached compiler 917f345, interfacing (CompilerInterface) with Scala compiler version 2.11.7
Calling Scala compiler with arguments  (CompilerInterface):
	-bootclasspath
	/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/classes:/Users/lpfeiler/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.11.7.jar
	-classpath
	/Users/lpfeiler/develop/github/base64/target/scala-2.11/classes
Scala compilation took 0.419225158 s
New invalidations:
	Set()
Initial set of included nodes: Set()
Previously invalidated, but (transitively) depend on new invalidations:
	Set()
All newly invalidated sources after taking into account (previously) recompiled sources:Set()
Total time: 1 s, completed 01.06.2016 10:20:11
> server-post-command-cleanup
> server-handle-next-server-request
> test
Evaluating tasks: test:test
Running task... Cancel: sbt.server.ServerTaskCancellation@3c44f53b, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set()
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set()

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set()

Copy resource mappings: 
	
The de.csmath.codec.Codec$ source file has the following regular definitions changed:
	needPads.
All member reference dependencies will be considered within this context.
Files invalidated by inheriting from (external) de.csmath.codec.Codec$: Set(); now invalidating by inheritance (internally).
Getting direct dependencies of all sources transitively invalidated by inheritance.
Getting sources that directly depend on (external) de.csmath.codec.Codec$.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/test/scala/Base16Spec.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/test/scala/Base32Spec.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/test/scala/Base64Spec.scala. This dependency is not being considered for invalidation.

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set()
Removed products: Set()
External API changes: API Changes: Set(NamesChange(de.csmath.codec.Codec$,ModifiedNames(regularNames = needPads, implicitNames = )))
Modified binary dependencies: Set()
Initial directly invalidated sources: Set()

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set()

Copy resource mappings: 
	
Framework implementation 'org.scalacheck.ScalaCheckFramework' not present.
Framework implementation 'org.specs2.runner.Specs2Framework' not present.
Framework implementation 'org.specs2.runner.SpecsFramework' not present.
Framework implementation 'org.specs.runner.SpecsFramework' not present.
Framework implementation 'com.novocode.junit.JUnitFramework' not present.
Subclass fingerprints: List((org.scalatest.Suite,false,org.scalatest.tools.Framework$$anon$1@4b9453cf))
Annotation fingerprints: List((org.scalatest.WrapWith,false,org.scalatest.tools.Framework$$anon$2@20869d35))
Running TaskDef(StreamCodecSpec, org.scalatest.tools.Framework$$anon$1@4b9453cf, false, [SuiteSelector])
Running TaskDef(StreamDecoderSpec, org.scalatest.tools.Framework$$anon$1@4b9453cf, false, [SuiteSelector])
Running TaskDef(Base32Spec, org.scalatest.tools.Framework$$anon$1@4b9453cf, false, [SuiteSelector])
Running TaskDef(Base64Spec, org.scalatest.tools.Framework$$anon$1@4b9453cf, false, [SuiteSelector])
Read from stdout: StreamCodecSpec:
Read from stdout: StreamCodec
Read from stdout: - should create a ByteStream
Read from stdout: StreamDecoderSpec:
Read from stdout: StreamDecoder
[32mStreamCodecSpec:[0m
[32mStreamCodec[0m
[32m- should create a ByteStream[0m
Read from stdout: - should check allowed bytes
Running TaskDef(StreamEncoderSpec, org.scalatest.tools.Framework$$anon$1@4b9453cf, false, [SuiteSelector])
[32mStreamDecoderSpec:[0m
[32mStreamDecoder[0m
[32m- should check allowed bytes[0m
Running TaskDef(Base16Spec, org.scalatest.tools.Framework$$anon$1@4b9453cf, false, [SuiteSelector])
Read from stdout: Base16Spec:
Read from stdout: Base16
Read from stdout: - should encode to BASE16
[32mBase16Spec:[0m
[32mBase16[0m
[32m- should encode to BASE16[0m
Read from stdout: StreamEncoderSpec:
Read from stdout: StreamEncoder
Read from stdout: - should create a ByteStream
Read from stdout: StreamEncoder
Read from stdout: - should create a IntStream
Read from stdout: StreamEncoder
Read from stdout: - should create a groupStream
Read from stdout: StreamEncoder
Read from stdout: - should create a filledStream
Read from stdout: StreamEncoder
Read from stdout: - should flatten a filledStream
[32mStreamEncoderSpec:[0m
[32mStreamEncoder[0m
[32m- should create a ByteStream[0m
[32mStreamEncoder[0m
[32m- should create a IntStream[0m
[32mStreamEncoder[0m
[32m- should create a groupStream[0m
[32mStreamEncoder[0m
[32m- should create a filledStream[0m
[32mStreamEncoder[0m
[32m- should flatten a filledStream[0m
Read from stdout: Base64Spec:
Read from stdout: Base64
Read from stdout: - should encode to BASE64
Read from stdout: Base64
Read from stdout: - should encode to BASE64FILE
Read from stdout: Base64
Read from stdout: - should encode to BASE64URL
Read from stdout: Base64
Read from stdout: - should encode to BASE64NOPAD
Read from stdout: Base64
Read from stdout: - should encode to BASE64FILENOPAD
Read from stdout: Base64
Read from stdout: - should encode to BASE64URLNOPAD
Read from stdout: Base64
Read from stdout: - should decode from BASE64
Read from stdout: Base64
Read from stdout: - should decode from BASE64 w/o padding
Read from stdout: Base64
Read from stdout: - should fail with crap
Read from stdout: Base64
Read from stdout: - should decode from BASE64FILE
Read from stdout: Base64
Read from stdout: - should decode from BASE64FILE w/o padding
Read from stdout: Base64
Read from stdout: - should decode from BASE64URL
[32mBase64Spec:[0m
[32mBase64[0m
[32m- should encode to BASE64[0m
[32mBase64[0m
[32m- should encode to BASE64FILE[0m
[32mBase64[0m
[32m- should encode to BASE64URL[0m
[32mBase64[0m
[32m- should encode to BASE64NOPAD[0m
[32mBase64[0m
[32m- should encode to BASE64FILENOPAD[0m
[32mBase64[0m
[32m- should encode to BASE64URLNOPAD[0m
[32mBase64[0m
[32m- should decode from BASE64[0m
[32mBase64[0m
[32m- should decode from BASE64 w/o padding[0m
[32mBase64[0m
[32m- should fail with crap[0m
[32mBase64[0m
[32m- should decode from BASE64FILE[0m
[32mBase64[0m
[32m- should decode from BASE64FILE w/o padding[0m
[32mBase64[0m
[32m- should decode from BASE64URL[0m
Read from stdout: Base32Spec:
Read from stdout: Base32
Read from stdout: - should encode to BASE32
Read from stdout: Base32
Read from stdout: - should encode to BASE32NOPAD
Read from stdout: Base32
Read from stdout: - should encode to BASE32URL
Read from stdout: Base32
Read from stdout: - should encode to BASE32HEX
Read from stdout: Base32
Read from stdout: - should encode to BASE32HEXNOPAD
Read from stdout: Base32
Read from stdout: - should encode to BASE32HEXURL
Read from stdout: Base32
Read from stdout: - should decode from BASE32
Read from stdout: Base32
Read from stdout: - should decode from BASE32 w/o padding
Read from stdout: Base32
Read from stdout: - should decode from BASE32URL
Read from stdout: Base32
Read from stdout: - should decode from BASE32HEX
Read from stdout: Base32
Read from stdout: - should decode from BASE32HEX w/o padding
Read from stdout: Base32
Read from stdout: - should decode from BASE32HEXURL
[32mBase32Spec:[0m
[32mBase32[0m
[32m- should encode to BASE32[0m
[32mBase32[0m
[32m- should encode to BASE32NOPAD[0m
[32mBase32[0m
[32m- should encode to BASE32URL[0m
[32mBase32[0m
[32m- should encode to BASE32HEX[0m
[32mBase32[0m
[32m- should encode to BASE32HEXNOPAD[0m
[32mBase32[0m
[32m- should encode to BASE32HEXURL[0m
[32mBase32[0m
[32m- should decode from BASE32[0m
[32mBase32[0m
[32m- should decode from BASE32 w/o padding[0m
[32mBase32[0m
[32m- should decode from BASE32URL[0m
[32mBase32[0m
[32m- should decode from BASE32HEX[0m
[32mBase32[0m
[32m- should decode from BASE32HEX w/o padding[0m
[32mBase32[0m
[32m- should decode from BASE32HEXURL[0m
Read from stdout: Run completed in 500 milliseconds.
Read from stdout: Total number of tests run: 32
Read from stdout: Suites: completed 6, aborted 0
Read from stdout: Tests: succeeded 32, failed 0, canceled 0, ignored 0, pending 0
Read from stdout: All tests passed.
Run completed in 500 milliseconds.
Total number of tests run: 32
Suites: completed 6, aborted 0
Tests: succeeded 32, failed 0, canceled 0, ignored 0, pending 0
All tests passed.
Passed tests:
	StreamEncoderSpec
	StreamCodecSpec
	Base64Spec
	StreamDecoderSpec
	Base32Spec
	Base16Spec
Total time: 1 s, completed 01.06.2016 10:20:12
> server-post-command-cleanup
> server-handle-next-server-request
> compile
Evaluating tasks: compile:compile
Running task... Cancel: sbt.server.ServerTaskCancellation@1d82a520, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set()
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set()

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set()

Total time: 0 s, completed 01.06.2016 10:21:03
> server-post-command-cleanup
> server-handle-next-server-request
> test
Evaluating tasks: test:test
Running task... Cancel: sbt.server.ServerTaskCancellation@693aa4e1, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set()
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set()

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set()

Copy resource mappings: 
	
The de.csmath.codec.Codec$ source file has the following regular definitions changed:
	needPads.
All member reference dependencies will be considered within this context.
Files invalidated by inheriting from (external) de.csmath.codec.Codec$: Set(); now invalidating by inheritance (internally).
Getting direct dependencies of all sources transitively invalidated by inheritance.
Getting sources that directly depend on (external) de.csmath.codec.Codec$.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/test/scala/Base16Spec.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/test/scala/Base32Spec.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/test/scala/Base64Spec.scala. This dependency is not being considered for invalidation.

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamEncoderSpec.scala)
Removed products: Set()
External API changes: API Changes: Set(NamesChange(de.csmath.codec.Codec$,ModifiedNames(regularNames = needPads, implicitNames = )))
Modified binary dependencies: Set()
Initial directly invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamEncoderSpec.scala)

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamEncoderSpec.scala)

Read from stdout: Compiling 1 Scala source to /Users/lpfeiler/develop/github/base64/target/scala-2.11/test-classes...
Compiling 1 Scala source to /Users/lpfeiler/develop/github/base64/target/scala-2.11/test-classes...
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Running cached compiler 2219c94, interfacing (CompilerInterface) with Scala compiler version 2.11.7
Calling Scala compiler with arguments  (CompilerInterface):
	-bootclasspath
	/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/classes:/Users/lpfeiler/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.11.7.jar
	-classpath
	/Users/lpfeiler/develop/github/base64/target/scala-2.11/test-classes:/Users/lpfeiler/develop/github/base64/target/scala-2.11/classes:/Users/lpfeiler/develop/scala/activator-dist-1.3.6/repository/org.scalatest/scalatest_2.11/2.2.4/bundles/scalatest_2.11.jar:/Users/lpfeiler/develop/scala/activator-dist-1.3.6/repository/org.scala-lang/scala-reflect/2.11.2/jars/scala-reflect.jar:/Users/lpfeiler/develop/scala/activator-dist-1.3.6/repository/org.scala-lang.modules/scala-xml_2.11/1.0.2/bundles/scala-xml_2.11.jar
Read from stdout: there were 8 feature warnings; re-run with -feature for details
there were 8 feature warnings; re-run with -feature for details
Read from stdout: one warning found
one warning found
Scala compilation took 1.244634014 s
New invalidations:
	Set()
Initial set of included nodes: Set()
Previously invalidated, but (transitively) depend on new invalidations:
	Set()
All newly invalidated sources after taking into account (previously) recompiled sources:Set()
Copy resource mappings: 
	
Framework implementation 'org.scalacheck.ScalaCheckFramework' not present.
Framework implementation 'org.specs2.runner.Specs2Framework' not present.
Framework implementation 'org.specs2.runner.SpecsFramework' not present.
Framework implementation 'org.specs.runner.SpecsFramework' not present.
Framework implementation 'com.novocode.junit.JUnitFramework' not present.
Subclass fingerprints: List((org.scalatest.Suite,false,org.scalatest.tools.Framework$$anon$1@2948bd19))
Annotation fingerprints: List((org.scalatest.WrapWith,false,org.scalatest.tools.Framework$$anon$2@26b5735a))
Running TaskDef(StreamDecoderSpec, org.scalatest.tools.Framework$$anon$1@2948bd19, false, [SuiteSelector])
Running TaskDef(Base32Spec, org.scalatest.tools.Framework$$anon$1@2948bd19, false, [SuiteSelector])
Running TaskDef(StreamCodecSpec, org.scalatest.tools.Framework$$anon$1@2948bd19, false, [SuiteSelector])
Running TaskDef(Base64Spec, org.scalatest.tools.Framework$$anon$1@2948bd19, false, [SuiteSelector])
Read from stdout: StreamCodecSpec:
Read from stdout: StreamCodec
Read from stdout: - should create a ByteStream
Read from stdout: StreamDecoderSpec:
Read from stdout: StreamDecoder
[32mStreamCodecSpec:[0m
[32mStreamCodec[0m
[32m- should create a ByteStream[0m
Read from stdout: - should check allowed bytes
[32mStreamDecoderSpec:[0m
[32mStreamDecoder[0m
[32m- should check allowed bytes[0m
Running TaskDef(Base16Spec, org.scalatest.tools.Framework$$anon$1@2948bd19, false, [SuiteSelector])
Running TaskDef(StreamEncoderSpec, org.scalatest.tools.Framework$$anon$1@2948bd19, false, [SuiteSelector])
Read from stdout: StreamEncoderSpec:
Read from stdout: StreamEncoder
Read from stdout: - should create a ByteStream
Read from stdout: StreamEncoder
Read from stdout: - should create a IntStream
[32mStreamEncoderSpec:[0m
[32mStreamEncoder[0m
[32m- should create a ByteStream[0m
[32mStreamEncoder[0m
[32m- should create a IntStream[0m
Read from stdout: Base16Spec:
Read from stdout: Base16
Read from stdout: - should encode to BASE16
[32mBase16Spec:[0m
[32mBase16[0m
[32m- should encode to BASE16[0m
Read from stdout: Base64Spec:
Read from stdout: Base64
Read from stdout: - should encode to BASE64
Read from stdout: Base64
Read from stdout: - should encode to BASE64FILE
Read from stdout: Base64
Read from stdout: - should encode to BASE64URL
Read from stdout: Base64
Read from stdout: - should encode to BASE64NOPAD
Read from stdout: Base64
Read from stdout: - should encode to BASE64FILENOPAD
Read from stdout: Base64
Read from stdout: - should encode to BASE64URLNOPAD
Read from stdout: Base64
Read from stdout: - should decode from BASE64
Read from stdout: Base64
Read from stdout: - should decode from BASE64 w/o padding
Read from stdout: Base64
Read from stdout: - should fail with crap
Read from stdout: Base64
Read from stdout: - should decode from BASE64FILE
Read from stdout: Base64
Read from stdout: - should decode from BASE64FILE w/o padding
Read from stdout: Base64
Read from stdout: - should decode from BASE64URL
[32mBase64Spec:[0m
[32mBase64[0m
[32m- should encode to BASE64[0m
[32mBase64[0m
[32m- should encode to BASE64FILE[0m
[32mBase64[0m
[32m- should encode to BASE64URL[0m
[32mBase64[0m
[32m- should encode to BASE64NOPAD[0m
[32mBase64[0m
[32m- should encode to BASE64FILENOPAD[0m
[32mBase64[0m
[32m- should encode to BASE64URLNOPAD[0m
[32mBase64[0m
[32m- should decode from BASE64[0m
[32mBase64[0m
[32m- should decode from BASE64 w/o padding[0m
[32mBase64[0m
[32m- should fail with crap[0m
[32mBase64[0m
[32m- should decode from BASE64FILE[0m
[32mBase64[0m
[32m- should decode from BASE64FILE w/o padding[0m
[32mBase64[0m
[32m- should decode from BASE64URL[0m
Read from stdout: Base32Spec:
Read from stdout: Base32
Read from stdout: - should encode to BASE32
Read from stdout: Base32
Read from stdout: - should encode to BASE32NOPAD
Read from stdout: Base32
Read from stdout: - should encode to BASE32URL
Read from stdout: Base32
Read from stdout: - should encode to BASE32HEX
Read from stdout: Base32
Read from stdout: - should encode to BASE32HEXNOPAD
Read from stdout: Base32
Read from stdout: - should encode to BASE32HEXURL
Read from stdout: Base32
Read from stdout: - should decode from BASE32
Read from stdout: Base32
Read from stdout: - should decode from BASE32 w/o padding
Read from stdout: Base32
Read from stdout: - should decode from BASE32URL
Read from stdout: Base32
Read from stdout: - should decode from BASE32HEX
Read from stdout: Base32
Read from stdout: - should decode from BASE32HEX w/o padding
Read from stdout: Base32
Read from stdout: - should decode from BASE32HEXURL
[32mBase32Spec:[0m
[32mBase32[0m
[32m- should encode to BASE32[0m
[32mBase32[0m
[32m- should encode to BASE32NOPAD[0m
[32mBase32[0m
[32m- should encode to BASE32URL[0m
[32mBase32[0m
[32m- should encode to BASE32HEX[0m
[32mBase32[0m
[32m- should encode to BASE32HEXNOPAD[0m
[32mBase32[0m
[32m- should encode to BASE32HEXURL[0m
[32mBase32[0m
[32m- should decode from BASE32[0m
[32mBase32[0m
[32m- should decode from BASE32 w/o padding[0m
[32mBase32[0m
[32m- should decode from BASE32URL[0m
[32mBase32[0m
[32m- should decode from BASE32HEX[0m
[32mBase32[0m
[32m- should decode from BASE32HEX w/o padding[0m
[32mBase32[0m
[32m- should decode from BASE32HEXURL[0m
Read from stdout: Run completed in 338 milliseconds.
Read from stdout: Total number of tests run: 29
Read from stdout: Suites: completed 6, aborted 0
Read from stdout: Tests: succeeded 29, failed 0, canceled 0, ignored 0, pending 0
Read from stdout: All tests passed.
Run completed in 338 milliseconds.
Total number of tests run: 29
Suites: completed 6, aborted 0
Tests: succeeded 29, failed 0, canceled 0, ignored 0, pending 0
All tests passed.
Passed tests:
	StreamEncoderSpec
	StreamCodecSpec
	Base64Spec
	StreamDecoderSpec
	Base32Spec
	Base16Spec
Total time: 2 s, completed 01.06.2016 10:21:05
> server-post-command-cleanup
> server-handle-next-server-request
> compile
Evaluating tasks: compile:compile
Running task... Cancel: sbt.server.ServerTaskCancellation@795c5231, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set()
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set()

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set()

Total time: 0 s, completed 01.06.2016 10:21:13
> server-post-command-cleanup
> server-handle-next-server-request
> test
Evaluating tasks: test:test
Running task... Cancel: sbt.server.ServerTaskCancellation@1312cec8, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set()
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set()

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set()

Copy resource mappings: 
	
The de.csmath.codec.Codec$ source file has the following regular definitions changed:
	needPads.
All member reference dependencies will be considered within this context.
Files invalidated by inheriting from (external) de.csmath.codec.Codec$: Set(); now invalidating by inheritance (internally).
Getting direct dependencies of all sources transitively invalidated by inheritance.
Getting sources that directly depend on (external) de.csmath.codec.Codec$.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/test/scala/Base16Spec.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/test/scala/Base32Spec.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/test/scala/Base64Spec.scala. This dependency is not being considered for invalidation.

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala)
Removed products: Set()
External API changes: API Changes: Set(NamesChange(de.csmath.codec.Codec$,ModifiedNames(regularNames = needPads, implicitNames = )))
Modified binary dependencies: Set()
Initial directly invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala)

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala)

Read from stdout: Compiling 1 Scala source to /Users/lpfeiler/develop/github/base64/target/scala-2.11/test-classes...
Compiling 1 Scala source to /Users/lpfeiler/develop/github/base64/target/scala-2.11/test-classes...
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Running cached compiler 1e0aaf13, interfacing (CompilerInterface) with Scala compiler version 2.11.7
Calling Scala compiler with arguments  (CompilerInterface):
	-bootclasspath
	/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/classes:/Users/lpfeiler/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.11.7.jar
	-classpath
	/Users/lpfeiler/develop/github/base64/target/scala-2.11/test-classes:/Users/lpfeiler/develop/github/base64/target/scala-2.11/classes:/Users/lpfeiler/develop/scala/activator-dist-1.3.6/repository/org.scalatest/scalatest_2.11/2.2.4/bundles/scalatest_2.11.jar:/Users/lpfeiler/develop/scala/activator-dist-1.3.6/repository/org.scala-lang/scala-reflect/2.11.2/jars/scala-reflect.jar:/Users/lpfeiler/develop/scala/activator-dist-1.3.6/repository/org.scala-lang.modules/scala-xml_2.11/1.0.2/bundles/scala-xml_2.11.jar
Read from stdout: there were 16 feature warnings; re-run with -feature for details
there were 16 feature warnings; re-run with -feature for details
Read from stdout: one warning found
one warning found
Scala compilation took 1.046032706 s
New invalidations:
	Set()
Initial set of included nodes: Set()
Previously invalidated, but (transitively) depend on new invalidations:
	Set()
All newly invalidated sources after taking into account (previously) recompiled sources:Set()
Copy resource mappings: 
	
Framework implementation 'org.scalacheck.ScalaCheckFramework' not present.
Framework implementation 'org.specs2.runner.Specs2Framework' not present.
Framework implementation 'org.specs2.runner.SpecsFramework' not present.
Framework implementation 'org.specs.runner.SpecsFramework' not present.
Framework implementation 'com.novocode.junit.JUnitFramework' not present.
Subclass fingerprints: List((org.scalatest.Suite,false,org.scalatest.tools.Framework$$anon$1@5f8c4417))
Annotation fingerprints: List((org.scalatest.WrapWith,false,org.scalatest.tools.Framework$$anon$2@124a13a7))
Running TaskDef(Base16Spec, org.scalatest.tools.Framework$$anon$1@5f8c4417, false, [SuiteSelector])
Running TaskDef(StreamEncoderSpec, org.scalatest.tools.Framework$$anon$1@5f8c4417, false, [SuiteSelector])
Running TaskDef(Base64Spec, org.scalatest.tools.Framework$$anon$1@5f8c4417, false, [SuiteSelector])
Running TaskDef(Base32Spec, org.scalatest.tools.Framework$$anon$1@5f8c4417, false, [SuiteSelector])
Read from stdout: Base16Spec:
Read from stdout: Base16
Read from stdout: - should encode to BASE16
[32mBase16Spec:[0m
[32mBase16[0m
[32m- should encode to BASE16[0m
Read from stdout: StreamEncoderSpec:
Read from stdout: StreamEncoder
Read from stdout: - should create a ByteStream
Read from stdout: StreamEncoder
Read from stdout: - should create a IntStream
[32mStreamEncoderSpec:[0m
[32mStreamEncoder[0m
[32m- should create a ByteStream[0m
[32mStreamEncoder[0m
[32m- should create a IntStream[0m
Running TaskDef(StreamCodecSpec, org.scalatest.tools.Framework$$anon$1@5f8c4417, false, [SuiteSelector])
Running TaskDef(StreamDecoderSpec, org.scalatest.tools.Framework$$anon$1@5f8c4417, false, [SuiteSelector])
Read from stdout: StreamCodecSpec:
Read from stdout: StreamCodec
Read from stdout: - should create a ByteStream
Read from stdout: StreamEncoder
Read from stdout: - should create a groupStream
Read from stdout: StreamEncoder
Read from stdout: - should create a filledStream
Read from stdout: StreamEncoder
Read from stdout: - should flatten a filledStream
[32mStreamCodecSpec:[0m
[32mStreamCodec[0m
[32m- should create a ByteStream[0m
[32mStreamEncoder[0m
[32m- should create a groupStream[0m
[32mStreamEncoder[0m
[32m- should create a filledStream[0m
[32mStreamEncoder[0m
[32m- should flatten a filledStream[0m
Read from stdout: StreamDecoderSpec:
Read from stdout: StreamDecoder
Read from stdout: - should check allowed bytes
[32mStreamDecoderSpec:[0m
[32mStreamDecoder[0m
[32m- should check allowed bytes[0m
Read from stdout: Base64Spec:
Read from stdout: Base64
Read from stdout: - should encode to BASE64
Read from stdout: Base64
Read from stdout: - should encode to BASE64FILE
Read from stdout: Base64
Read from stdout: - should encode to BASE64URL
Read from stdout: Base64
Read from stdout: - should encode to BASE64NOPAD
Read from stdout: Base64
Read from stdout: - should encode to BASE64FILENOPAD
Read from stdout: Base64
Read from stdout: - should encode to BASE64URLNOPAD
Read from stdout: Base64
Read from stdout: - should decode from BASE64
Read from stdout: Base64
Read from stdout: - should decode from BASE64 w/o padding
Read from stdout: Base64
Read from stdout: - should fail with crap
Read from stdout: Base64
Read from stdout: - should decode from BASE64FILE
Read from stdout: Base64
Read from stdout: - should decode from BASE64FILE w/o padding
Read from stdout: Base64
Read from stdout: - should decode from BASE64URL
[32mBase64Spec:[0m
[32mBase64[0m
[32m- should encode to BASE64[0m
[32mBase64[0m
[32m- should encode to BASE64FILE[0m
[32mBase64[0m
[32m- should encode to BASE64URL[0m
[32mBase64[0m
[32m- should encode to BASE64NOPAD[0m
[32mBase64[0m
[32m- should encode to BASE64FILENOPAD[0m
[32mBase64[0m
[32m- should encode to BASE64URLNOPAD[0m
[32mBase64[0m
[32m- should decode from BASE64[0m
[32mBase64[0m
[32m- should decode from BASE64 w/o padding[0m
[32mBase64[0m
[32m- should fail with crap[0m
[32mBase64[0m
[32m- should decode from BASE64FILE[0m
[32mBase64[0m
[32m- should decode from BASE64FILE w/o padding[0m
[32mBase64[0m
[32m- should decode from BASE64URL[0m
Read from stdout: Base32Spec:
Read from stdout: Base32
Read from stdout: - should encode to BASE32
Read from stdout: Base32
Read from stdout: - should encode to BASE32NOPAD
Read from stdout: Base32
Read from stdout: - should encode to BASE32URL
Read from stdout: Base32
Read from stdout: - should encode to BASE32HEX
Read from stdout: Base32
Read from stdout: - should encode to BASE32HEXNOPAD
Read from stdout: Base32
Read from stdout: - should encode to BASE32HEXURL
Read from stdout: Base32
Read from stdout: - should decode from BASE32
Read from stdout: Base32
Read from stdout: - should decode from BASE32 w/o padding
Read from stdout: Base32
Read from stdout: - should decode from BASE32URL
Read from stdout: Base32
Read from stdout: - should decode from BASE32HEX
Read from stdout: Base32
Read from stdout: - should decode from BASE32HEX w/o padding
Read from stdout: Base32
Read from stdout: - should decode from BASE32HEXURL
[32mBase32Spec:[0m
[32mBase32[0m
[32m- should encode to BASE32[0m
[32mBase32[0m
[32m- should encode to BASE32NOPAD[0m
[32mBase32[0m
[32m- should encode to BASE32URL[0m
[32mBase32[0m
[32m- should encode to BASE32HEX[0m
[32mBase32[0m
[32m- should encode to BASE32HEXNOPAD[0m
[32mBase32[0m
[32m- should encode to BASE32HEXURL[0m
[32mBase32[0m
[32m- should decode from BASE32[0m
[32mBase32[0m
[32m- should decode from BASE32 w/o padding[0m
[32mBase32[0m
[32m- should decode from BASE32URL[0m
[32mBase32[0m
[32m- should decode from BASE32HEX[0m
[32mBase32[0m
[32m- should decode from BASE32HEX w/o padding[0m
[32mBase32[0m
[32m- should decode from BASE32HEXURL[0m
Read from stdout: Run completed in 447 milliseconds.
Read from stdout: Total number of tests run: 32
Read from stdout: Suites: completed 6, aborted 0
Read from stdout: Tests: succeeded 32, failed 0, canceled 0, ignored 0, pending 0
Read from stdout: All tests passed.
Run completed in 447 milliseconds.
Total number of tests run: 32
Suites: completed 6, aborted 0
Tests: succeeded 32, failed 0, canceled 0, ignored 0, pending 0
All tests passed.
Passed tests:
	StreamEncoderSpec
	StreamCodecSpec
	Base64Spec
	StreamDecoderSpec
	Base32Spec
	Base16Spec
Total time: 2 s, completed 01.06.2016 10:21:15
> server-post-command-cleanup
> server-handle-next-server-request
> compile
Evaluating tasks: compile:compile
Running task... Cancel: sbt.server.ServerTaskCancellation@18ebf900, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set()
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set()

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set()

Total time: 0 s, completed 01.06.2016 10:21:25
> server-post-command-cleanup
> server-handle-next-server-request
> test
Evaluating tasks: test:test
Running task... Cancel: sbt.server.ServerTaskCancellation@57110009, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set()
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set()

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set()

Copy resource mappings: 
	
The de.csmath.codec.Codec$ source file has the following regular definitions changed:
	needPads.
All member reference dependencies will be considered within this context.
Files invalidated by inheriting from (external) de.csmath.codec.Codec$: Set(); now invalidating by inheritance (internally).
Getting direct dependencies of all sources transitively invalidated by inheritance.
Getting sources that directly depend on (external) de.csmath.codec.Codec$.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/test/scala/Base16Spec.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/test/scala/Base32Spec.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/test/scala/Base64Spec.scala. This dependency is not being considered for invalidation.

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala)
Removed products: Set()
External API changes: API Changes: Set(NamesChange(de.csmath.codec.Codec$,ModifiedNames(regularNames = needPads, implicitNames = )))
Modified binary dependencies: Set()
Initial directly invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala)

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala)

Read from stdout: Compiling 1 Scala source to /Users/lpfeiler/develop/github/base64/target/scala-2.11/test-classes...
Compiling 1 Scala source to /Users/lpfeiler/develop/github/base64/target/scala-2.11/test-classes...
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Running cached compiler 6ab50254, interfacing (CompilerInterface) with Scala compiler version 2.11.7
Calling Scala compiler with arguments  (CompilerInterface):
	-bootclasspath
	/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/classes:/Users/lpfeiler/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.11.7.jar
	-classpath
	/Users/lpfeiler/develop/github/base64/target/scala-2.11/test-classes:/Users/lpfeiler/develop/github/base64/target/scala-2.11/classes:/Users/lpfeiler/develop/scala/activator-dist-1.3.6/repository/org.scalatest/scalatest_2.11/2.2.4/bundles/scalatest_2.11.jar:/Users/lpfeiler/develop/scala/activator-dist-1.3.6/repository/org.scala-lang/scala-reflect/2.11.2/jars/scala-reflect.jar:/Users/lpfeiler/develop/scala/activator-dist-1.3.6/repository/org.scala-lang.modules/scala-xml_2.11/1.0.2/bundles/scala-xml_2.11.jar
Read from stdout: /Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala:22: not found: value intStream
/Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala:22: not found: value intStream
Read from stdout: val s = intStream(list)
          val s = intStream(list)
Read from stdout: ^
                  ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala:34: not found: value intStream
/Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala:34: not found: value intStream
Read from stdout: val s = intStream(list)
          val s = intStream(list)
Read from stdout: ^
                  ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala:49: not found: value intStream
/Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala:49: not found: value intStream
Read from stdout: val s = intStream(list)
          val s = intStream(list)
Read from stdout: ^
                  ^
Read from stdout: three errors found
three errors found
Compilation failed (CompilerInterface)
Read from stdout: (test:compileIncremental) Compilation failed
(test:compileIncremental) Compilation failed
Total time: 0 s, completed 01.06.2016 10:21:26
> server-post-command-error-handler
> server-post-command-cleanup
> server-handle-next-server-request
> compile
Evaluating tasks: compile:compile
Running task... Cancel: sbt.server.ServerTaskCancellation@508d4a63, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set()
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set()

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set()

Total time: 0 s, completed 01.06.2016 10:21:57
> server-post-command-cleanup
> server-handle-next-server-request
> test
Evaluating tasks: test:test
Running task... Cancel: sbt.server.ServerTaskCancellation@21d42acd, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set()
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set()

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set()

Copy resource mappings: 
	
The de.csmath.codec.Codec$ source file has the following regular definitions changed:
	needPads.
All member reference dependencies will be considered within this context.
Files invalidated by inheriting from (external) de.csmath.codec.Codec$: Set(); now invalidating by inheritance (internally).
Getting direct dependencies of all sources transitively invalidated by inheritance.
Getting sources that directly depend on (external) de.csmath.codec.Codec$.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/test/scala/Base16Spec.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/test/scala/Base32Spec.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/test/scala/Base64Spec.scala. This dependency is not being considered for invalidation.

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala)
Removed products: Set()
External API changes: API Changes: Set(NamesChange(de.csmath.codec.Codec$,ModifiedNames(regularNames = needPads, implicitNames = )))
Modified binary dependencies: Set()
Initial directly invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala)

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala)

Read from stdout: Compiling 1 Scala source to /Users/lpfeiler/develop/github/base64/target/scala-2.11/test-classes...
Compiling 1 Scala source to /Users/lpfeiler/develop/github/base64/target/scala-2.11/test-classes...
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Running cached compiler 795059ad, interfacing (CompilerInterface) with Scala compiler version 2.11.7
Calling Scala compiler with arguments  (CompilerInterface):
	-bootclasspath
	/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/classes:/Users/lpfeiler/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.11.7.jar
	-classpath
	/Users/lpfeiler/develop/github/base64/target/scala-2.11/test-classes:/Users/lpfeiler/develop/github/base64/target/scala-2.11/classes:/Users/lpfeiler/develop/scala/activator-dist-1.3.6/repository/org.scalatest/scalatest_2.11/2.2.4/bundles/scalatest_2.11.jar:/Users/lpfeiler/develop/scala/activator-dist-1.3.6/repository/org.scala-lang/scala-reflect/2.11.2/jars/scala-reflect.jar:/Users/lpfeiler/develop/scala/activator-dist-1.3.6/repository/org.scala-lang.modules/scala-xml_2.11/1.0.2/bundles/scala-xml_2.11.jar
Read from stdout: /Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala:34: not found: value intStream
/Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala:34: not found: value intStream
Read from stdout: val s = intStream(list)
          val s = intStream(list)
Read from stdout: ^
                  ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala:49: not found: value intStream
/Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala:49: not found: value intStream
Read from stdout: val s = intStream(list)
          val s = intStream(list)
Read from stdout: ^
                  ^
Read from stdout: two errors found
two errors found
Compilation failed (CompilerInterface)
Read from stdout: (test:compileIncremental) Compilation failed
(test:compileIncremental) Compilation failed
Total time: 0 s, completed 01.06.2016 10:21:57
> server-post-command-error-handler
> server-post-command-cleanup
> server-handle-next-server-request
> compile
Evaluating tasks: compile:compile
Running task... Cancel: sbt.server.ServerTaskCancellation@386e5325, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set()
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set()

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set()

Total time: 0 s, completed 01.06.2016 10:22:18
> server-post-command-cleanup
> server-handle-next-server-request
> test
Evaluating tasks: test:test
Running task... Cancel: sbt.server.ServerTaskCancellation@5922b309, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set()
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set()

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set()

Copy resource mappings: 
	
The de.csmath.codec.Codec$ source file has the following regular definitions changed:
	needPads.
All member reference dependencies will be considered within this context.
Files invalidated by inheriting from (external) de.csmath.codec.Codec$: Set(); now invalidating by inheritance (internally).
Getting direct dependencies of all sources transitively invalidated by inheritance.
Getting sources that directly depend on (external) de.csmath.codec.Codec$.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/test/scala/Base16Spec.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/test/scala/Base32Spec.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/test/scala/Base64Spec.scala. This dependency is not being considered for invalidation.

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala)
Removed products: Set()
External API changes: API Changes: Set(NamesChange(de.csmath.codec.Codec$,ModifiedNames(regularNames = needPads, implicitNames = )))
Modified binary dependencies: Set()
Initial directly invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala)

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala)

Read from stdout: Compiling 1 Scala source to /Users/lpfeiler/develop/github/base64/target/scala-2.11/test-classes...
Compiling 1 Scala source to /Users/lpfeiler/develop/github/base64/target/scala-2.11/test-classes...
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Running cached compiler 38880d86, interfacing (CompilerInterface) with Scala compiler version 2.11.7
Calling Scala compiler with arguments  (CompilerInterface):
	-bootclasspath
	/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/classes:/Users/lpfeiler/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.11.7.jar
	-classpath
	/Users/lpfeiler/develop/github/base64/target/scala-2.11/test-classes:/Users/lpfeiler/develop/github/base64/target/scala-2.11/classes:/Users/lpfeiler/develop/scala/activator-dist-1.3.6/repository/org.scalatest/scalatest_2.11/2.2.4/bundles/scalatest_2.11.jar:/Users/lpfeiler/develop/scala/activator-dist-1.3.6/repository/org.scala-lang/scala-reflect/2.11.2/jars/scala-reflect.jar:/Users/lpfeiler/develop/scala/activator-dist-1.3.6/repository/org.scala-lang.modules/scala-xml_2.11/1.0.2/bundles/scala-xml_2.11.jar
Read from stdout: /Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala:36: type mismatch;
Read from stdout: found   : Stream[Seq[Byte]]
Read from stdout: required: Stream[Seq[Int]]
/Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala:36: type mismatch;
 found   : Stream[Seq[Byte]]
 required: Stream[Seq[Int]]
Read from stdout: val f = filledStream(2,g)
          val f = filledStream(2,g)
Read from stdout: ^
                                 ^
Read from stdout: one error found
one error found
Compilation failed (CompilerInterface)
Read from stdout: (test:compileIncremental) Compilation failed
(test:compileIncremental) Compilation failed
Total time: 1 s, completed 01.06.2016 10:22:19
> server-post-command-error-handler
> server-post-command-cleanup
> server-handle-next-server-request
> compile
Evaluating tasks: compile:compile
Running task... Cancel: sbt.server.ServerTaskCancellation@720d2cfc, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamCodec.scala)
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamCodec.scala)

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamCodec.scala)

Read from stdout: Compiling 1 Scala source to /Users/lpfeiler/develop/github/base64/target/scala-2.11/classes...
Compiling 1 Scala source to /Users/lpfeiler/develop/github/base64/target/scala-2.11/classes...
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Running cached compiler 469ec38c, interfacing (CompilerInterface) with Scala compiler version 2.11.7
Calling Scala compiler with arguments  (CompilerInterface):
	-bootclasspath
	/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/classes:/Users/lpfeiler/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.11.7.jar
	-classpath
	/Users/lpfeiler/develop/github/base64/target/scala-2.11/classes
Read from stdout: /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamCodec.scala:16: not found: type T
/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamCodec.scala:16: not found: type T
Read from stdout: protected def filledStream(groupSize: Int, s:Stream[Seq[T]]): Stream[(Int,Seq[T])] =
    protected def filledStream(groupSize: Int, s:Stream[Seq[T]]): Stream[(Int,Seq[T])] =
Read from stdout: ^
                                                                                  ^
Read from stdout: /Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamCodec.scala:16: not found: type T
/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamCodec.scala:16: not found: type T
Read from stdout: protected def filledStream(groupSize: Int, s:Stream[Seq[T]]): Stream[(Int,Seq[T])] =
    protected def filledStream(groupSize: Int, s:Stream[Seq[T]]): Stream[(Int,Seq[T])] =
Read from stdout: ^
                                                            ^
Read from stdout: two errors found
two errors found
Compilation failed (CompilerInterface)
Read from stdout: (compile:compileIncremental) Compilation failed
(compile:compileIncremental) Compilation failed
Total time: 0 s, completed 01.06.2016 10:23:44
> server-post-command-error-handler
> server-post-command-cleanup
> server-handle-next-server-request
> compile
Evaluating tasks: compile:compile
Running task... Cancel: sbt.server.ServerTaskCancellation@23302f01, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set()
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set()

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set()

Total time: 0 s, completed 01.06.2016 10:24:01
> server-post-command-cleanup
> server-handle-next-server-request
> test
Evaluating tasks: test:test
Running task... Cancel: sbt.server.ServerTaskCancellation@6c685e9f, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set()
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set()

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set()

Copy resource mappings: 
	
The de.csmath.codec.Codec$ source file has the following regular definitions changed:
	needPads.
All member reference dependencies will be considered within this context.
Files invalidated by inheriting from (external) de.csmath.codec.Codec$: Set(); now invalidating by inheritance (internally).
Getting direct dependencies of all sources transitively invalidated by inheritance.
Getting sources that directly depend on (external) de.csmath.codec.Codec$.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/test/scala/Base16Spec.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/test/scala/Base32Spec.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/test/scala/Base64Spec.scala. This dependency is not being considered for invalidation.

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala)
Removed products: Set()
External API changes: API Changes: Set(NamesChange(de.csmath.codec.Codec$,ModifiedNames(regularNames = needPads, implicitNames = )))
Modified binary dependencies: Set()
Initial directly invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala)

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala)

Read from stdout: Compiling 1 Scala source to /Users/lpfeiler/develop/github/base64/target/scala-2.11/test-classes...
Compiling 1 Scala source to /Users/lpfeiler/develop/github/base64/target/scala-2.11/test-classes...
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Running cached compiler 5d8353cd, interfacing (CompilerInterface) with Scala compiler version 2.11.7
Calling Scala compiler with arguments  (CompilerInterface):
	-bootclasspath
	/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/classes:/Users/lpfeiler/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.11.7.jar
	-classpath
	/Users/lpfeiler/develop/github/base64/target/scala-2.11/test-classes:/Users/lpfeiler/develop/github/base64/target/scala-2.11/classes:/Users/lpfeiler/develop/scala/activator-dist-1.3.6/repository/org.scalatest/scalatest_2.11/2.2.4/bundles/scalatest_2.11.jar:/Users/lpfeiler/develop/scala/activator-dist-1.3.6/repository/org.scala-lang/scala-reflect/2.11.2/jars/scala-reflect.jar:/Users/lpfeiler/develop/scala/activator-dist-1.3.6/repository/org.scala-lang.modules/scala-xml_2.11/1.0.2/bundles/scala-xml_2.11.jar
Read from stdout: /Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala:36: type mismatch;
Read from stdout: found   : Stream[Seq[Byte]]
Read from stdout: required: Stream[Seq[Int]]
/Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala:36: type mismatch;
 found   : Stream[Seq[Byte]]
 required: Stream[Seq[Int]]
Read from stdout: val f = filledStream(2,g)
          val f = filledStream(2,g)
Read from stdout: ^
                                 ^
Read from stdout: one error found
one error found
Compilation failed (CompilerInterface)
Read from stdout: (test:compileIncremental) Compilation failed
(test:compileIncremental) Compilation failed
Total time: 0 s, completed 01.06.2016 10:24:02
> server-post-command-error-handler
> server-post-command-cleanup
> server-handle-next-server-request
> compile
Evaluating tasks: compile:compile
Running task... Cancel: sbt.server.ServerTaskCancellation@4f6f81e9, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set()
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set()

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set()

Total time: 0 s, completed 01.06.2016 10:25:23
> server-post-command-cleanup
> server-handle-next-server-request
> test
Evaluating tasks: test:test
Running task... Cancel: sbt.server.ServerTaskCancellation@359292f6, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set()
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set()

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set()

Copy resource mappings: 
	
The de.csmath.codec.Codec$ source file has the following regular definitions changed:
	needPads.
All member reference dependencies will be considered within this context.
Files invalidated by inheriting from (external) de.csmath.codec.Codec$: Set(); now invalidating by inheritance (internally).
Getting direct dependencies of all sources transitively invalidated by inheritance.
Getting sources that directly depend on (external) de.csmath.codec.Codec$.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/test/scala/Base16Spec.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/test/scala/Base32Spec.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/test/scala/Base64Spec.scala. This dependency is not being considered for invalidation.

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala)
Removed products: Set()
External API changes: API Changes: Set(NamesChange(de.csmath.codec.Codec$,ModifiedNames(regularNames = needPads, implicitNames = )))
Modified binary dependencies: Set()
Initial directly invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala)

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala)

Read from stdout: Compiling 1 Scala source to /Users/lpfeiler/develop/github/base64/target/scala-2.11/test-classes...
Compiling 1 Scala source to /Users/lpfeiler/develop/github/base64/target/scala-2.11/test-classes...
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Running cached compiler 7ca419b6, interfacing (CompilerInterface) with Scala compiler version 2.11.7
Calling Scala compiler with arguments  (CompilerInterface):
	-bootclasspath
	/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/classes:/Users/lpfeiler/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.11.7.jar
	-classpath
	/Users/lpfeiler/develop/github/base64/target/scala-2.11/test-classes:/Users/lpfeiler/develop/github/base64/target/scala-2.11/classes:/Users/lpfeiler/develop/scala/activator-dist-1.3.6/repository/org.scalatest/scalatest_2.11/2.2.4/bundles/scalatest_2.11.jar:/Users/lpfeiler/develop/scala/activator-dist-1.3.6/repository/org.scala-lang/scala-reflect/2.11.2/jars/scala-reflect.jar:/Users/lpfeiler/develop/scala/activator-dist-1.3.6/repository/org.scala-lang.modules/scala-xml_2.11/1.0.2/bundles/scala-xml_2.11.jar
Read from stdout: there were 16 feature warnings; re-run with -feature for details
there were 16 feature warnings; re-run with -feature for details
Read from stdout: one warning found
one warning found
Scala compilation took 1.01485037 s
New invalidations:
	Set()
Initial set of included nodes: Set()
Previously invalidated, but (transitively) depend on new invalidations:
	Set()
All newly invalidated sources after taking into account (previously) recompiled sources:Set()
Copy resource mappings: 
	
Framework implementation 'org.scalacheck.ScalaCheckFramework' not present.
Framework implementation 'org.specs2.runner.Specs2Framework' not present.
Framework implementation 'org.specs2.runner.SpecsFramework' not present.
Framework implementation 'org.specs.runner.SpecsFramework' not present.
Framework implementation 'com.novocode.junit.JUnitFramework' not present.
Subclass fingerprints: List((org.scalatest.Suite,false,org.scalatest.tools.Framework$$anon$1@589939d3))
Annotation fingerprints: List((org.scalatest.WrapWith,false,org.scalatest.tools.Framework$$anon$2@14cc7dc0))
Running TaskDef(Base64Spec, org.scalatest.tools.Framework$$anon$1@589939d3, false, [SuiteSelector])
Running TaskDef(Base32Spec, org.scalatest.tools.Framework$$anon$1@589939d3, false, [SuiteSelector])
Running TaskDef(Base16Spec, org.scalatest.tools.Framework$$anon$1@589939d3, false, [SuiteSelector])
Running TaskDef(StreamDecoderSpec, org.scalatest.tools.Framework$$anon$1@589939d3, false, [SuiteSelector])
Read from stdout: Base16Spec:
Read from stdout: Base16
Read from stdout: - should encode to BASE16
Read from stdout: StreamDecoderSpec:
Read from stdout: StreamDecoder
Read from stdout: - should check allowed bytes
[32mStreamDecoderSpec:[0m
[32mStreamDecoder[0m
[32m- should check allowed bytes[0m
[32mBase16Spec:[0m
[32mBase16[0m
[32m- should encode to BASE16[0m
Running TaskDef(StreamCodecSpec, org.scalatest.tools.Framework$$anon$1@589939d3, false, [SuiteSelector])
Running TaskDef(StreamEncoderSpec, org.scalatest.tools.Framework$$anon$1@589939d3, false, [SuiteSelector])
Read from stdout: StreamEncoderSpec:
Read from stdout: StreamEncoder
Read from stdout: - should create a ByteStream
Read from stdout: StreamEncoder
Read from stdout: - should create a IntStream
[32mStreamEncoderSpec:[0m
[32mStreamEncoder[0m
[32m- should create a ByteStream[0m
[32mStreamEncoder[0m
[32m- should create a IntStream[0m
Read from stdout: StreamCodecSpec:
Read from stdout: StreamCodec
Read from stdout: - should create a ByteStream
Read from stdout: StreamCodec
Read from stdout: - should create a groupStream
Read from stdout: StreamCodec
Read from stdout: - should create a filledStream
Read from stdout: StreamCodec
Read from stdout: - should flatten a filledStream
[32mStreamCodecSpec:[0m
[32mStreamCodec[0m
[32m- should create a ByteStream[0m
[32mStreamCodec[0m
[32m- should create a groupStream[0m
[32mStreamCodec[0m
[32m- should create a filledStream[0m
[32mStreamCodec[0m
[32m- should flatten a filledStream[0m
Read from stdout: Base64Spec:
Read from stdout: Base64
Read from stdout: - should encode to BASE64
Read from stdout: Base64
Read from stdout: - should encode to BASE64FILE
Read from stdout: Base64
Read from stdout: - should encode to BASE64URL
Read from stdout: Base64
Read from stdout: - should encode to BASE64NOPAD
Read from stdout: Base64
Read from stdout: - should encode to BASE64FILENOPAD
Read from stdout: Base64
Read from stdout: - should encode to BASE64URLNOPAD
Read from stdout: Base64
Read from stdout: - should decode from BASE64
Read from stdout: Base64
Read from stdout: - should decode from BASE64 w/o padding
Read from stdout: Base64
Read from stdout: - should fail with crap
Read from stdout: Base64
Read from stdout: - should decode from BASE64FILE
Read from stdout: Base64
Read from stdout: - should decode from BASE64FILE w/o padding
Read from stdout: Base64
Read from stdout: - should decode from BASE64URL
[32mBase64Spec:[0m
[32mBase64[0m
[32m- should encode to BASE64[0m
[32mBase64[0m
[32m- should encode to BASE64FILE[0m
[32mBase64[0m
[32m- should encode to BASE64URL[0m
[32mBase64[0m
[32m- should encode to BASE64NOPAD[0m
[32mBase64[0m
[32m- should encode to BASE64FILENOPAD[0m
[32mBase64[0m
[32m- should encode to BASE64URLNOPAD[0m
[32mBase64[0m
[32m- should decode from BASE64[0m
[32mBase64[0m
[32m- should decode from BASE64 w/o padding[0m
[32mBase64[0m
[32m- should fail with crap[0m
[32mBase64[0m
[32m- should decode from BASE64FILE[0m
[32mBase64[0m
[32m- should decode from BASE64FILE w/o padding[0m
[32mBase64[0m
[32m- should decode from BASE64URL[0m
Read from stdout: Base32Spec:
Read from stdout: Base32
Read from stdout: - should encode to BASE32
Read from stdout: Base32
Read from stdout: - should encode to BASE32NOPAD
Read from stdout: Base32
Read from stdout: - should encode to BASE32URL
Read from stdout: Base32
Read from stdout: - should encode to BASE32HEX
Read from stdout: Base32
Read from stdout: - should encode to BASE32HEXNOPAD
Read from stdout: Base32
Read from stdout: - should encode to BASE32HEXURL
Read from stdout: Base32
Read from stdout: - should decode from BASE32
Read from stdout: Base32
Read from stdout: - should decode from BASE32 w/o padding
Read from stdout: Base32
Read from stdout: - should decode from BASE32URL
Read from stdout: Base32
Read from stdout: - should decode from BASE32HEX
Read from stdout: Base32
Read from stdout: - should decode from BASE32HEX w/o padding
Read from stdout: Base32
Read from stdout: - should decode from BASE32HEXURL
[32mBase32Spec:[0m
[32mBase32[0m
[32m- should encode to BASE32[0m
[32mBase32[0m
[32m- should encode to BASE32NOPAD[0m
[32mBase32[0m
[32m- should encode to BASE32URL[0m
[32mBase32[0m
[32m- should encode to BASE32HEX[0m
[32mBase32[0m
[32m- should encode to BASE32HEXNOPAD[0m
[32mBase32[0m
[32m- should encode to BASE32HEXURL[0m
[32mBase32[0m
[32m- should decode from BASE32[0m
[32mBase32[0m
[32m- should decode from BASE32 w/o padding[0m
[32mBase32[0m
[32m- should decode from BASE32URL[0m
[32mBase32[0m
[32m- should decode from BASE32HEX[0m
[32mBase32[0m
[32m- should decode from BASE32HEX w/o padding[0m
[32mBase32[0m
[32m- should decode from BASE32HEXURL[0m
Read from stdout: Run completed in 484 milliseconds.
Read from stdout: Total number of tests run: 32
Read from stdout: Suites: completed 6, aborted 0
Read from stdout: Tests: succeeded 32, failed 0, canceled 0, ignored 0, pending 0
Read from stdout: All tests passed.
Run completed in 484 milliseconds.
Total number of tests run: 32
Suites: completed 6, aborted 0
Tests: succeeded 32, failed 0, canceled 0, ignored 0, pending 0
All tests passed.
Passed tests:
	StreamEncoderSpec
	StreamCodecSpec
	Base64Spec
	StreamDecoderSpec
	Base32Spec
	Base16Spec
Total time: 2 s, completed 01.06.2016 10:25:25
> server-post-command-cleanup
> server-handle-next-server-request
> compile
Evaluating tasks: compile:compile
Running task... Cancel: sbt.server.ServerTaskCancellation@9fccb38, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set()
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set()

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set()

Total time: 0 s, completed 01.06.2016 10:25:56
> server-post-command-cleanup
> server-handle-next-server-request
> test
Evaluating tasks: test:test
Running task... Cancel: sbt.server.ServerTaskCancellation@2cd62a8a, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set()
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set()

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set()

Copy resource mappings: 
	
The de.csmath.codec.Codec$ source file has the following regular definitions changed:
	needPads.
All member reference dependencies will be considered within this context.
Files invalidated by inheriting from (external) de.csmath.codec.Codec$: Set(); now invalidating by inheritance (internally).
Getting direct dependencies of all sources transitively invalidated by inheritance.
Getting sources that directly depend on (external) de.csmath.codec.Codec$.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/test/scala/Base16Spec.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/test/scala/Base32Spec.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/test/scala/Base64Spec.scala. This dependency is not being considered for invalidation.

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala)
Removed products: Set()
External API changes: API Changes: Set(NamesChange(de.csmath.codec.Codec$,ModifiedNames(regularNames = needPads, implicitNames = )))
Modified binary dependencies: Set()
Initial directly invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala)

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala)

Read from stdout: Compiling 1 Scala source to /Users/lpfeiler/develop/github/base64/target/scala-2.11/test-classes...
Compiling 1 Scala source to /Users/lpfeiler/develop/github/base64/target/scala-2.11/test-classes...
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Running cached compiler 6f30e0ee, interfacing (CompilerInterface) with Scala compiler version 2.11.7
Calling Scala compiler with arguments  (CompilerInterface):
	-bootclasspath
	/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/classes:/Users/lpfeiler/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.11.7.jar
	-classpath
	/Users/lpfeiler/develop/github/base64/target/scala-2.11/test-classes:/Users/lpfeiler/develop/github/base64/target/scala-2.11/classes:/Users/lpfeiler/develop/scala/activator-dist-1.3.6/repository/org.scalatest/scalatest_2.11/2.2.4/bundles/scalatest_2.11.jar:/Users/lpfeiler/develop/scala/activator-dist-1.3.6/repository/org.scala-lang/scala-reflect/2.11.2/jars/scala-reflect.jar:/Users/lpfeiler/develop/scala/activator-dist-1.3.6/repository/org.scala-lang.modules/scala-xml_2.11/1.0.2/bundles/scala-xml_2.11.jar
Read from stdout: there were 16 feature warnings; re-run with -feature for details
there were 16 feature warnings; re-run with -feature for details
Read from stdout: one warning found
one warning found
Scala compilation took 1.103424171 s
New invalidations:
	Set()
Initial set of included nodes: Set()
Previously invalidated, but (transitively) depend on new invalidations:
	Set()
All newly invalidated sources after taking into account (previously) recompiled sources:Set()
Copy resource mappings: 
	
Framework implementation 'org.scalacheck.ScalaCheckFramework' not present.
Framework implementation 'org.specs2.runner.Specs2Framework' not present.
Framework implementation 'org.specs2.runner.SpecsFramework' not present.
Framework implementation 'org.specs.runner.SpecsFramework' not present.
Framework implementation 'com.novocode.junit.JUnitFramework' not present.
Subclass fingerprints: List((org.scalatest.Suite,false,org.scalatest.tools.Framework$$anon$1@4647369b))
Annotation fingerprints: List((org.scalatest.WrapWith,false,org.scalatest.tools.Framework$$anon$2@273f77a2))
Running TaskDef(Base32Spec, org.scalatest.tools.Framework$$anon$1@4647369b, false, [SuiteSelector])
Running TaskDef(Base16Spec, org.scalatest.tools.Framework$$anon$1@4647369b, false, [SuiteSelector])
Running TaskDef(Base64Spec, org.scalatest.tools.Framework$$anon$1@4647369b, false, [SuiteSelector])
Running TaskDef(StreamEncoderSpec, org.scalatest.tools.Framework$$anon$1@4647369b, false, [SuiteSelector])
Read from stdout: Base16Spec:
Read from stdout: Base16
Read from stdout: - should encode to BASE16
[32mBase16Spec:[0m
[32mBase16[0m
[32m- should encode to BASE16[0m
Read from stdout: StreamEncoderSpec:
Read from stdout: StreamEncoder
Read from stdout: - should create a ByteStream
Read from stdout: StreamEncoder
Read from stdout: - should create a IntStream
[32mStreamEncoderSpec:[0m
[32mStreamEncoder[0m
[32m- should create a ByteStream[0m
[32mStreamEncoder[0m
[32m- should create a IntStream[0m
Running TaskDef(StreamCodecSpec, org.scalatest.tools.Framework$$anon$1@4647369b, false, [SuiteSelector])
Running TaskDef(StreamDecoderSpec, org.scalatest.tools.Framework$$anon$1@4647369b, false, [SuiteSelector])
Read from stdout: StreamDecoderSpec:
Read from stdout: StreamDecoder
Read from stdout: - should check allowed bytes
[32mStreamDecoderSpec:[0m
[32mStreamDecoder[0m
[32m- should check allowed bytes[0m
Read from stdout: StreamCodecSpec:
Read from stdout: StreamCodec
Read from stdout: - should create a ByteStream
Read from stdout: StreamCodec
Read from stdout: - should create a groupStream
Read from stdout: StreamCodec
Read from stdout: - should create a filledStream
Read from stdout: StreamCodec
Read from stdout: - should flatten a filledStream
[32mStreamCodecSpec:[0m
[32mStreamCodec[0m
[32m- should create a ByteStream[0m
[32mStreamCodec[0m
[32m- should create a groupStream[0m
[32mStreamCodec[0m
[32m- should create a filledStream[0m
[32mStreamCodec[0m
[32m- should flatten a filledStream[0m
Read from stdout: Base64Spec:
Read from stdout: Base64
Read from stdout: - should encode to BASE64
Read from stdout: Base64
Read from stdout: - should encode to BASE64FILE
Read from stdout: Base64
Read from stdout: - should encode to BASE64URL
Read from stdout: Base64
Read from stdout: - should encode to BASE64NOPAD
Read from stdout: Base64
Read from stdout: - should encode to BASE64FILENOPAD
Read from stdout: Base64
Read from stdout: - should encode to BASE64URLNOPAD
Read from stdout: Base64
Read from stdout: - should decode from BASE64
Read from stdout: Base64
Read from stdout: - should decode from BASE64 w/o padding
Read from stdout: Base64
Read from stdout: - should fail with crap
Read from stdout: Base64
Read from stdout: - should decode from BASE64FILE
Read from stdout: Base64
Read from stdout: - should decode from BASE64FILE w/o padding
Read from stdout: Base64
Read from stdout: - should decode from BASE64URL
[32mBase64Spec:[0m
[32mBase64[0m
[32m- should encode to BASE64[0m
[32mBase64[0m
[32m- should encode to BASE64FILE[0m
[32mBase64[0m
[32m- should encode to BASE64URL[0m
[32mBase64[0m
[32m- should encode to BASE64NOPAD[0m
[32mBase64[0m
[32m- should encode to BASE64FILENOPAD[0m
[32mBase64[0m
[32m- should encode to BASE64URLNOPAD[0m
[32mBase64[0m
[32m- should decode from BASE64[0m
[32mBase64[0m
[32m- should decode from BASE64 w/o padding[0m
[32mBase64[0m
[32m- should fail with crap[0m
[32mBase64[0m
[32m- should decode from BASE64FILE[0m
[32mBase64[0m
[32m- should decode from BASE64FILE w/o padding[0m
[32mBase64[0m
[32m- should decode from BASE64URL[0m
Read from stdout: Base32Spec:
Read from stdout: Base32
Read from stdout: - should encode to BASE32
Read from stdout: Base32
Read from stdout: - should encode to BASE32NOPAD
Read from stdout: Base32
Read from stdout: - should encode to BASE32URL
Read from stdout: Base32
Read from stdout: - should encode to BASE32HEX
Read from stdout: Base32
Read from stdout: - should encode to BASE32HEXNOPAD
Read from stdout: Base32
Read from stdout: - should encode to BASE32HEXURL
Read from stdout: Base32
Read from stdout: - should decode from BASE32
Read from stdout: Base32
Read from stdout: - should decode from BASE32 w/o padding
Read from stdout: Base32
Read from stdout: - should decode from BASE32URL
Read from stdout: Base32
Read from stdout: - should decode from BASE32HEX
Read from stdout: Base32
Read from stdout: - should decode from BASE32HEX w/o padding
Read from stdout: Base32
Read from stdout: - should decode from BASE32HEXURL
[32mBase32Spec:[0m
[32mBase32[0m
[32m- should encode to BASE32[0m
[32mBase32[0m
[32m- should encode to BASE32NOPAD[0m
[32mBase32[0m
[32m- should encode to BASE32URL[0m
[32mBase32[0m
[32m- should encode to BASE32HEX[0m
[32mBase32[0m
[32m- should encode to BASE32HEXNOPAD[0m
[32mBase32[0m
[32m- should encode to BASE32HEXURL[0m
[32mBase32[0m
[32m- should decode from BASE32[0m
[32mBase32[0m
[32m- should decode from BASE32 w/o padding[0m
[32mBase32[0m
[32m- should decode from BASE32URL[0m
[32mBase32[0m
[32m- should decode from BASE32HEX[0m
[32mBase32[0m
[32m- should decode from BASE32HEX w/o padding[0m
[32mBase32[0m
[32m- should decode from BASE32HEXURL[0m
Read from stdout: Run completed in 347 milliseconds.
Read from stdout: Total number of tests run: 32
Read from stdout: Suites: completed 6, aborted 0
Read from stdout: Tests: succeeded 32, failed 0, canceled 0, ignored 0, pending 0
Read from stdout: All tests passed.
Run completed in 347 milliseconds.
Total number of tests run: 32
Suites: completed 6, aborted 0
Tests: succeeded 32, failed 0, canceled 0, ignored 0, pending 0
All tests passed.
Passed tests:
	StreamEncoderSpec
	StreamCodecSpec
	Base64Spec
	StreamDecoderSpec
	Base32Spec
	Base16Spec
Total time: 2 s, completed 01.06.2016 10:25:58
> server-post-command-cleanup
> server-handle-next-server-request
> compile
Evaluating tasks: compile:compile
Running task... Cancel: sbt.server.ServerTaskCancellation@9d6b3c4, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set()
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set()

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set()

Total time: 0 s, completed 01.06.2016 10:26:06
> server-post-command-cleanup
> server-handle-next-server-request
> compile
Evaluating tasks: compile:compile
Running task... Cancel: sbt.server.ServerTaskCancellation@70f6cf01, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set()
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set()

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set()

Total time: 0 s, completed 01.06.2016 10:26:58
> server-post-command-cleanup
> server-handle-next-server-request
> test
Evaluating tasks: test:test
Running task... Cancel: sbt.server.ServerTaskCancellation@4f0a86c2, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set()
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set()

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set()

Copy resource mappings: 
	
The de.csmath.codec.Codec$ source file has the following regular definitions changed:
	needPads.
All member reference dependencies will be considered within this context.
Files invalidated by inheriting from (external) de.csmath.codec.Codec$: Set(); now invalidating by inheritance (internally).
Getting direct dependencies of all sources transitively invalidated by inheritance.
Getting sources that directly depend on (external) de.csmath.codec.Codec$.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/test/scala/Base16Spec.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/test/scala/Base32Spec.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/test/scala/Base64Spec.scala. This dependency is not being considered for invalidation.

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala, /Users/lpfeiler/develop/github/base64/src/test/scala/StreamEncoderSpec.scala)
Removed products: Set()
External API changes: API Changes: Set(NamesChange(de.csmath.codec.Codec$,ModifiedNames(regularNames = needPads, implicitNames = )))
Modified binary dependencies: Set()
Initial directly invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala, /Users/lpfeiler/develop/github/base64/src/test/scala/StreamEncoderSpec.scala)

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamCodecSpec.scala, /Users/lpfeiler/develop/github/base64/src/test/scala/StreamEncoderSpec.scala)

Read from stdout: Compiling 2 Scala sources to /Users/lpfeiler/develop/github/base64/target/scala-2.11/test-classes...
Compiling 2 Scala sources to /Users/lpfeiler/develop/github/base64/target/scala-2.11/test-classes...
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Running cached compiler ed495a1, interfacing (CompilerInterface) with Scala compiler version 2.11.7
Calling Scala compiler with arguments  (CompilerInterface):
	-bootclasspath
	/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/classes:/Users/lpfeiler/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.11.7.jar
	-classpath
	/Users/lpfeiler/develop/github/base64/target/scala-2.11/test-classes:/Users/lpfeiler/develop/github/base64/target/scala-2.11/classes:/Users/lpfeiler/develop/scala/activator-dist-1.3.6/repository/org.scalatest/scalatest_2.11/2.2.4/bundles/scalatest_2.11.jar:/Users/lpfeiler/develop/scala/activator-dist-1.3.6/repository/org.scala-lang/scala-reflect/2.11.2/jars/scala-reflect.jar:/Users/lpfeiler/develop/scala/activator-dist-1.3.6/repository/org.scala-lang.modules/scala-xml_2.11/1.0.2/bundles/scala-xml_2.11.jar
Read from stdout: there were 20 feature warnings; re-run with -feature for details
there were 20 feature warnings; re-run with -feature for details
Read from stdout: one warning found
one warning found
Scala compilation took 1.161238307 s
New invalidations:
	Set()
Initial set of included nodes: Set()
Previously invalidated, but (transitively) depend on new invalidations:
	Set()
All newly invalidated sources after taking into account (previously) recompiled sources:Set()
Copy resource mappings: 
	
Framework implementation 'org.scalacheck.ScalaCheckFramework' not present.
Framework implementation 'org.specs2.runner.Specs2Framework' not present.
Framework implementation 'org.specs2.runner.SpecsFramework' not present.
Framework implementation 'org.specs.runner.SpecsFramework' not present.
Framework implementation 'com.novocode.junit.JUnitFramework' not present.
Subclass fingerprints: List((org.scalatest.Suite,false,org.scalatest.tools.Framework$$anon$1@582cb498))
Annotation fingerprints: List((org.scalatest.WrapWith,false,org.scalatest.tools.Framework$$anon$2@3ff0e18e))
Running TaskDef(Base32Spec, org.scalatest.tools.Framework$$anon$1@582cb498, false, [SuiteSelector])
Running TaskDef(Base16Spec, org.scalatest.tools.Framework$$anon$1@582cb498, false, [SuiteSelector])
Running TaskDef(Base64Spec, org.scalatest.tools.Framework$$anon$1@582cb498, false, [SuiteSelector])
Running TaskDef(StreamDecoderSpec, org.scalatest.tools.Framework$$anon$1@582cb498, false, [SuiteSelector])
Read from stdout: Base16Spec:
Read from stdout: Base16
Read from stdout: - should encode to BASE16
[32mBase16Spec:[0m
[32mBase16[0m
[32m- should encode to BASE16[0m
Running TaskDef(StreamCodecSpec, org.scalatest.tools.Framework$$anon$1@582cb498, false, [SuiteSelector])
Read from stdout: StreamDecoderSpec:
Read from stdout: StreamDecoder
Read from stdout: - should check allowed bytes
[32mStreamDecoderSpec:[0m
[32mStreamDecoder[0m
[32m- should check allowed bytes[0m
Running TaskDef(StreamEncoderSpec, org.scalatest.tools.Framework$$anon$1@582cb498, false, [SuiteSelector])
Read from stdout: StreamEncoderSpec:
Read from stdout: StreamEncoder
Read from stdout: - should create a IntStream
[32mStreamEncoderSpec:[0m
[32mStreamEncoder[0m
[32m- should create a IntStream[0m
Read from stdout: StreamCodecSpec:
Read from stdout: StreamCodec
Read from stdout: - should create a ByteStream
Read from stdout: StreamCodec
Read from stdout: - should create a groupStream
Read from stdout: StreamCodec
Read from stdout: - should create a filledStream
Read from stdout: StreamCodec
Read from stdout: - should flatten a filledStream
[32mStreamCodecSpec:[0m
[32mStreamCodec[0m
[32m- should create a ByteStream[0m
[32mStreamCodec[0m
[32m- should create a groupStream[0m
[32mStreamCodec[0m
[32m- should create a filledStream[0m
[32mStreamCodec[0m
[32m- should flatten a filledStream[0m
Read from stdout: Base32Spec:
Read from stdout: Base32
Read from stdout: - should encode to BASE32
Read from stdout: Base32
Read from stdout: - should encode to BASE32NOPAD
Read from stdout: Base32
Read from stdout: - should encode to BASE32URL
Read from stdout: Base32
Read from stdout: - should encode to BASE32HEX
Read from stdout: Base32
Read from stdout: - should encode to BASE32HEXNOPAD
Read from stdout: Base32
Read from stdout: - should encode to BASE32HEXURL
Read from stdout: Base32
Read from stdout: - should decode from BASE32
Read from stdout: Base32
Read from stdout: - should decode from BASE32 w/o padding
Read from stdout: Base32
Read from stdout: - should decode from BASE32URL
Read from stdout: Base32
Read from stdout: - should decode from BASE32HEX
Read from stdout: Base32
Read from stdout: - should decode from BASE32HEX w/o padding
Read from stdout: Base32
Read from stdout: - should decode from BASE32HEXURL
[32mBase32Spec:[0m
[32mBase32[0m
[32m- should encode to BASE32[0m
[32mBase32[0m
[32m- should encode to BASE32NOPAD[0m
[32mBase32[0m
[32m- should encode to BASE32URL[0m
[32mBase32[0m
[32m- should encode to BASE32HEX[0m
[32mBase32[0m
[32m- should encode to BASE32HEXNOPAD[0m
[32mBase32[0m
[32m- should encode to BASE32HEXURL[0m
[32mBase32[0m
[32m- should decode from BASE32[0m
[32mBase32[0m
[32m- should decode from BASE32 w/o padding[0m
[32mBase32[0m
[32m- should decode from BASE32URL[0m
[32mBase32[0m
[32m- should decode from BASE32HEX[0m
[32mBase32[0m
[32m- should decode from BASE32HEX w/o padding[0m
[32mBase32[0m
[32m- should decode from BASE32HEXURL[0m
Read from stdout: Base64Spec:
Read from stdout: Base64
Read from stdout: - should encode to BASE64
Read from stdout: Base64
Read from stdout: - should encode to BASE64FILE
Read from stdout: Base64
Read from stdout: - should encode to BASE64URL
Read from stdout: Base64
Read from stdout: - should encode to BASE64NOPAD
Read from stdout: Base64
Read from stdout: - should encode to BASE64FILENOPAD
Read from stdout: Base64
Read from stdout: - should encode to BASE64URLNOPAD
Read from stdout: Base64
Read from stdout: - should decode from BASE64
Read from stdout: Base64
Read from stdout: - should decode from BASE64 w/o padding
Read from stdout: Base64
Read from stdout: - should fail with crap
Read from stdout: Base64
Read from stdout: - should decode from BASE64FILE
Read from stdout: Base64
Read from stdout: - should decode from BASE64FILE w/o padding
Read from stdout: Base64
Read from stdout: - should decode from BASE64URL
[32mBase64Spec:[0m
[32mBase64[0m
[32m- should encode to BASE64[0m
[32mBase64[0m
[32m- should encode to BASE64FILE[0m
[32mBase64[0m
[32m- should encode to BASE64URL[0m
[32mBase64[0m
[32m- should encode to BASE64NOPAD[0m
[32mBase64[0m
[32m- should encode to BASE64FILENOPAD[0m
[32mBase64[0m
[32m- should encode to BASE64URLNOPAD[0m
[32mBase64[0m
[32m- should decode from BASE64[0m
[32mBase64[0m
[32m- should decode from BASE64 w/o padding[0m
[32mBase64[0m
[32m- should fail with crap[0m
[32mBase64[0m
[32m- should decode from BASE64FILE[0m
[32mBase64[0m
[32m- should decode from BASE64FILE w/o padding[0m
[32mBase64[0m
[32m- should decode from BASE64URL[0m
Read from stdout: Run completed in 533 milliseconds.
Read from stdout: Total number of tests run: 31
Read from stdout: Suites: completed 6, aborted 0
Read from stdout: Tests: succeeded 31, failed 0, canceled 0, ignored 0, pending 0
Read from stdout: All tests passed.
Run completed in 533 milliseconds.
Total number of tests run: 31
Suites: completed 6, aborted 0
Tests: succeeded 31, failed 0, canceled 0, ignored 0, pending 0
All tests passed.
Passed tests:
	StreamEncoderSpec
	StreamCodecSpec
	Base64Spec
	StreamDecoderSpec
	Base32Spec
	Base16Spec
Total time: 2 s, completed 01.06.2016 10:27:00
> server-post-command-cleanup
> server-handle-next-server-request
> compile
Evaluating tasks: compile:compile
Running task... Cancel: sbt.server.ServerTaskCancellation@3bdce2cf, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set()
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set()

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set()

Total time: 0 s, completed 01.06.2016 10:27:30
> server-post-command-cleanup
> server-handle-next-server-request
> test
Evaluating tasks: test:test
Running task... Cancel: sbt.server.ServerTaskCancellation@5c4ac24e, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set()
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set()

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set()

Copy resource mappings: 
	
The de.csmath.codec.Codec$ source file has the following regular definitions changed:
	needPads.
All member reference dependencies will be considered within this context.
Files invalidated by inheriting from (external) de.csmath.codec.Codec$: Set(); now invalidating by inheritance (internally).
Getting direct dependencies of all sources transitively invalidated by inheritance.
Getting sources that directly depend on (external) de.csmath.codec.Codec$.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/test/scala/Base16Spec.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/test/scala/Base32Spec.scala. This dependency is not being considered for invalidation.
None of the modified names appears in /Users/lpfeiler/develop/github/base64/src/test/scala/Base64Spec.scala. This dependency is not being considered for invalidation.

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala)
Removed products: Set()
External API changes: API Changes: Set(NamesChange(de.csmath.codec.Codec$,ModifiedNames(regularNames = needPads, implicitNames = )))
Modified binary dependencies: Set()
Initial directly invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala)

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/test/scala/StreamDecoderSpec.scala)

Read from stdout: Compiling 1 Scala source to /Users/lpfeiler/develop/github/base64/target/scala-2.11/test-classes...
Compiling 1 Scala source to /Users/lpfeiler/develop/github/base64/target/scala-2.11/test-classes...
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Running cached compiler 4a13d831, interfacing (CompilerInterface) with Scala compiler version 2.11.7
Calling Scala compiler with arguments  (CompilerInterface):
	-bootclasspath
	/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/classes:/Users/lpfeiler/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.11.7.jar
	-classpath
	/Users/lpfeiler/develop/github/base64/target/scala-2.11/test-classes:/Users/lpfeiler/develop/github/base64/target/scala-2.11/classes:/Users/lpfeiler/develop/scala/activator-dist-1.3.6/repository/org.scalatest/scalatest_2.11/2.2.4/bundles/scalatest_2.11.jar:/Users/lpfeiler/develop/scala/activator-dist-1.3.6/repository/org.scala-lang/scala-reflect/2.11.2/jars/scala-reflect.jar:/Users/lpfeiler/develop/scala/activator-dist-1.3.6/repository/org.scala-lang.modules/scala-xml_2.11/1.0.2/bundles/scala-xml_2.11.jar
Read from stdout: there were three feature warnings; re-run with -feature for details
there were three feature warnings; re-run with -feature for details
Read from stdout: one warning found
one warning found
Scala compilation took 0.962514909 s
New invalidations:
	Set()
Initial set of included nodes: Set()
Previously invalidated, but (transitively) depend on new invalidations:
	Set()
All newly invalidated sources after taking into account (previously) recompiled sources:Set()
Copy resource mappings: 
	
Framework implementation 'org.scalacheck.ScalaCheckFramework' not present.
Framework implementation 'org.specs2.runner.Specs2Framework' not present.
Framework implementation 'org.specs2.runner.SpecsFramework' not present.
Framework implementation 'org.specs.runner.SpecsFramework' not present.
Framework implementation 'com.novocode.junit.JUnitFramework' not present.
Subclass fingerprints: List((org.scalatest.Suite,false,org.scalatest.tools.Framework$$anon$1@6a21beb6))
Annotation fingerprints: List((org.scalatest.WrapWith,false,org.scalatest.tools.Framework$$anon$2@6f19bcab))
Running TaskDef(Base16Spec, org.scalatest.tools.Framework$$anon$1@6a21beb6, false, [SuiteSelector])
Running TaskDef(StreamCodecSpec, org.scalatest.tools.Framework$$anon$1@6a21beb6, false, [SuiteSelector])
Running TaskDef(Base32Spec, org.scalatest.tools.Framework$$anon$1@6a21beb6, false, [SuiteSelector])
Running TaskDef(StreamEncoderSpec, org.scalatest.tools.Framework$$anon$1@6a21beb6, false, [SuiteSelector])
Read from stdout: Base16Spec:
Read from stdout: Base16
Read from stdout: - should encode to BASE16
Read from stdout: StreamEncoderSpec:
Read from stdout: StreamEncoder
[32mBase16Spec:[0m
[32mBase16[0m
[32m- should encode to BASE16[0m
Read from stdout: - should create a IntStream
Running TaskDef(Base64Spec, org.scalatest.tools.Framework$$anon$1@6a21beb6, false, [SuiteSelector])
[32mStreamEncoderSpec:[0m
[32mStreamEncoder[0m
[32m- should create a IntStream[0m
Running TaskDef(StreamDecoderSpec, org.scalatest.tools.Framework$$anon$1@6a21beb6, false, [SuiteSelector])
Read from stdout: StreamCodecSpec:
Read from stdout: StreamCodec
Read from stdout: - should create a ByteStream
Read from stdout: StreamCodec
Read from stdout: - should create a groupStream
Read from stdout: StreamCodec
Read from stdout: - should create a filledStream
Read from stdout: StreamCodec
Read from stdout: - should flatten a filledStream
[32mStreamCodecSpec:[0m
[32mStreamCodec[0m
[32m- should create a ByteStream[0m
[32mStreamCodec[0m
[32m- should create a groupStream[0m
[32mStreamCodec[0m
[32m- should create a filledStream[0m
[32mStreamCodec[0m
[32m- should flatten a filledStream[0m
Read from stdout: StreamDecoderSpec:
Read from stdout: StreamDecoder
Read from stdout: - should check allowed bytes
[32mStreamDecoderSpec:[0m
[32mStreamDecoder[0m
[32m- should check allowed bytes[0m
Read from stdout: Base64Spec:
Read from stdout: Base64
Read from stdout: - should encode to BASE64
Read from stdout: Base64
Read from stdout: - should encode to BASE64FILE
Read from stdout: Base64
Read from stdout: - should encode to BASE64URL
Read from stdout: Base64
Read from stdout: - should encode to BASE64NOPAD
Read from stdout: Base64
Read from stdout: - should encode to BASE64FILENOPAD
Read from stdout: Base64
Read from stdout: - should encode to BASE64URLNOPAD
Read from stdout: Base64
Read from stdout: - should decode from BASE64
Read from stdout: Base64
Read from stdout: - should decode from BASE64 w/o padding
Read from stdout: Base64
Read from stdout: - should fail with crap
Read from stdout: Base64
Read from stdout: - should decode from BASE64FILE
Read from stdout: Base64
Read from stdout: - should decode from BASE64FILE w/o padding
Read from stdout: Base64
Read from stdout: - should decode from BASE64URL
[32mBase64Spec:[0m
[32mBase64[0m
[32m- should encode to BASE64[0m
[32mBase64[0m
[32m- should encode to BASE64FILE[0m
[32mBase64[0m
[32m- should encode to BASE64URL[0m
[32mBase64[0m
[32m- should encode to BASE64NOPAD[0m
[32mBase64[0m
[32m- should encode to BASE64FILENOPAD[0m
[32mBase64[0m
[32m- should encode to BASE64URLNOPAD[0m
[32mBase64[0m
[32m- should decode from BASE64[0m
[32mBase64[0m
[32m- should decode from BASE64 w/o padding[0m
[32mBase64[0m
[32m- should fail with crap[0m
[32mBase64[0m
[32m- should decode from BASE64FILE[0m
[32mBase64[0m
[32m- should decode from BASE64FILE w/o padding[0m
[32mBase64[0m
[32m- should decode from BASE64URL[0m
Read from stdout: Base32Spec:
Read from stdout: Base32
Read from stdout: - should encode to BASE32
Read from stdout: Base32
Read from stdout: - should encode to BASE32NOPAD
Read from stdout: Base32
Read from stdout: - should encode to BASE32URL
Read from stdout: Base32
Read from stdout: - should encode to BASE32HEX
Read from stdout: Base32
Read from stdout: - should encode to BASE32HEXNOPAD
Read from stdout: Base32
Read from stdout: - should encode to BASE32HEXURL
Read from stdout: Base32
Read from stdout: - should decode from BASE32
Read from stdout: Base32
Read from stdout: - should decode from BASE32 w/o padding
Read from stdout: Base32
Read from stdout: - should decode from BASE32URL
Read from stdout: Base32
Read from stdout: - should decode from BASE32HEX
Read from stdout: Base32
Read from stdout: - should decode from BASE32HEX w/o padding
Read from stdout: Base32
Read from stdout: - should decode from BASE32HEXURL
[32mBase32Spec:[0m
[32mBase32[0m
[32m- should encode to BASE32[0m
[32mBase32[0m
[32m- should encode to BASE32NOPAD[0m
[32mBase32[0m
[32m- should encode to BASE32URL[0m
[32mBase32[0m
[32m- should encode to BASE32HEX[0m
[32mBase32[0m
[32m- should encode to BASE32HEXNOPAD[0m
[32mBase32[0m
[32m- should encode to BASE32HEXURL[0m
[32mBase32[0m
[32m- should decode from BASE32[0m
[32mBase32[0m
[32m- should decode from BASE32 w/o padding[0m
[32mBase32[0m
[32m- should decode from BASE32URL[0m
[32mBase32[0m
[32m- should decode from BASE32HEX[0m
[32mBase32[0m
[32m- should decode from BASE32HEX w/o padding[0m
[32mBase32[0m
[32m- should decode from BASE32HEXURL[0m
Read from stdout: Run completed in 453 milliseconds.
Read from stdout: Total number of tests run: 31
Read from stdout: Suites: completed 6, aborted 0
Read from stdout: Tests: succeeded 31, failed 0, canceled 0, ignored 0, pending 0
Read from stdout: All tests passed.
Run completed in 453 milliseconds.
Total number of tests run: 31
Suites: completed 6, aborted 0
Tests: succeeded 31, failed 0, canceled 0, ignored 0, pending 0
All tests passed.
Passed tests:
	StreamEncoderSpec
	StreamCodecSpec
	Base64Spec
	StreamDecoderSpec
	Base32Spec
	Base16Spec
Total time: 2 s, completed 01.06.2016 10:27:32
> server-post-command-cleanup
> server-handle-next-server-request
> compile
Evaluating tasks: compile:compile
Running task... Cancel: sbt.server.ServerTaskCancellation@37a994b1, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamCodec.scala)
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamCodec.scala)

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamCodec.scala)

Read from stdout: Compiling 1 Scala source to /Users/lpfeiler/develop/github/base64/target/scala-2.11/classes...
Compiling 1 Scala source to /Users/lpfeiler/develop/github/base64/target/scala-2.11/classes...
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Running cached compiler 3f6bb525, interfacing (CompilerInterface) with Scala compiler version 2.11.7
Calling Scala compiler with arguments  (CompilerInterface):
	-bootclasspath
	/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/classes:/Users/lpfeiler/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.11.7.jar
	-classpath
	/Users/lpfeiler/develop/github/base64/target/scala-2.11/classes
Read from stdout: there was one feature warning; re-run with -feature for details
there was one feature warning; re-run with -feature for details
Read from stdout: one warning found
one warning found
Scala compilation took 0.375485649 s
New invalidations:
	Set()
Initial set of included nodes: Set()
Previously invalidated, but (transitively) depend on new invalidations:
	Set()
All newly invalidated sources after taking into account (previously) recompiled sources:Set()
Total time: 0 s, completed 01.06.2016 10:29:24
> server-post-command-cleanup
> server-handle-next-server-request
> compile
Evaluating tasks: compile:compile
Running task... Cancel: sbt.server.ServerTaskCancellation@5b4784c8, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamCodec.scala)
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamCodec.scala)

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamCodec.scala)

Read from stdout: Compiling 1 Scala source to /Users/lpfeiler/develop/github/base64/target/scala-2.11/classes...
Compiling 1 Scala source to /Users/lpfeiler/develop/github/base64/target/scala-2.11/classes...
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Running cached compiler 5aebcc1a, interfacing (CompilerInterface) with Scala compiler version 2.11.7
Calling Scala compiler with arguments  (CompilerInterface):
	-bootclasspath
	/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/classes:/Users/lpfeiler/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.11.7.jar
	-classpath
	/Users/lpfeiler/develop/github/base64/target/scala-2.11/classes
Read from stdout: there was one feature warning; re-run with -feature for details
there was one feature warning; re-run with -feature for details
Read from stdout: one warning found
one warning found
Scala compilation took 0.395608543 s
New invalidations:
	Set()
Initial set of included nodes: Set()
Previously invalidated, but (transitively) depend on new invalidations:
	Set()
All newly invalidated sources after taking into account (previously) recompiled sources:Set()
Total time: 0 s, completed 01.06.2016 10:29:35
> server-post-command-cleanup
> server-handle-next-server-request
> compile
Evaluating tasks: compile:compile
Running task... Cancel: sbt.server.ServerTaskCancellation@57f26eb6, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamCodec.scala)
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamCodec.scala)

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamCodec.scala)

Read from stdout: Compiling 1 Scala source to /Users/lpfeiler/develop/github/base64/target/scala-2.11/classes...
Compiling 1 Scala source to /Users/lpfeiler/develop/github/base64/target/scala-2.11/classes...
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Running cached compiler 99f21aa, interfacing (CompilerInterface) with Scala compiler version 2.11.7
Calling Scala compiler with arguments  (CompilerInterface):
	-bootclasspath
	/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/classes:/Users/lpfeiler/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.11.7.jar
	-classpath
	/Users/lpfeiler/develop/github/base64/target/scala-2.11/classes
Read from stdout: there was one feature warning; re-run with -feature for details
there was one feature warning; re-run with -feature for details
Read from stdout: one warning found
one warning found
Scala compilation took 0.319788723 s
New invalidations:
	Set()
Initial set of included nodes: Set()
Previously invalidated, but (transitively) depend on new invalidations:
	Set()
All newly invalidated sources after taking into account (previously) recompiled sources:Set()
Total time: 0 s, completed 01.06.2016 10:29:37
> server-post-command-cleanup
> server-handle-next-server-request
> compile
Evaluating tasks: compile:compile
Running task... Cancel: sbt.server.ServerTaskCancellation@4bb3ae94, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamCodec.scala)
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamCodec.scala)

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamCodec.scala)

Read from stdout: Compiling 1 Scala source to /Users/lpfeiler/develop/github/base64/target/scala-2.11/classes...
Compiling 1 Scala source to /Users/lpfeiler/develop/github/base64/target/scala-2.11/classes...
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Running cached compiler 5d387d4e, interfacing (CompilerInterface) with Scala compiler version 2.11.7
Calling Scala compiler with arguments  (CompilerInterface):
	-bootclasspath
	/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/classes:/Users/lpfeiler/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.11.7.jar
	-classpath
	/Users/lpfeiler/develop/github/base64/target/scala-2.11/classes
Read from stdout: there was one feature warning; re-run with -feature for details
there was one feature warning; re-run with -feature for details
Read from stdout: one warning found
one warning found
Scala compilation took 0.375890979 s
New invalidations:
	Set()
Initial set of included nodes: Set()
Previously invalidated, but (transitively) depend on new invalidations:
	Set()
All newly invalidated sources after taking into account (previously) recompiled sources:Set()
Total time: 0 s, completed 01.06.2016 10:30:16
> server-post-command-cleanup
> server-handle-next-server-request
> compile
Evaluating tasks: compile:compile
Running task... Cancel: sbt.server.ServerTaskCancellation@3cc89915, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamCodec.scala)
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamCodec.scala)

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamCodec.scala)

Read from stdout: Compiling 1 Scala source to /Users/lpfeiler/develop/github/base64/target/scala-2.11/classes...
Compiling 1 Scala source to /Users/lpfeiler/develop/github/base64/target/scala-2.11/classes...
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Running cached compiler 36604438, interfacing (CompilerInterface) with Scala compiler version 2.11.7
Calling Scala compiler with arguments  (CompilerInterface):
	-bootclasspath
	/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/classes:/Users/lpfeiler/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.11.7.jar
	-classpath
	/Users/lpfeiler/develop/github/base64/target/scala-2.11/classes
Read from stdout: there was one feature warning; re-run with -feature for details
there was one feature warning; re-run with -feature for details
Read from stdout: one warning found
one warning found
Scala compilation took 0.515039094 s
New invalidations:
	Set()
Initial set of included nodes: Set()
Previously invalidated, but (transitively) depend on new invalidations:
	Set()
All newly invalidated sources after taking into account (previously) recompiled sources:Set()
Total time: 1 s, completed 01.06.2016 10:31:31
> server-post-command-cleanup
> server-handle-next-server-request
> compile
Evaluating tasks: compile:compile
Running task... Cancel: sbt.server.ServerTaskCancellation@667faf27, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamCodec.scala)
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamCodec.scala)

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set(/Users/lpfeiler/develop/github/base64/src/main/scala/de/csmath/codec/StreamCodec.scala)

Read from stdout: Compiling 1 Scala source to /Users/lpfeiler/develop/github/base64/target/scala-2.11/classes...
Compiling 1 Scala source to /Users/lpfeiler/develop/github/base64/target/scala-2.11/classes...
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Getting compiler-interface from component compiler for Scala 2.11.7
Other repositories:
Default repositories:
Running cached compiler 27172151, interfacing (CompilerInterface) with Scala compiler version 2.11.7
Calling Scala compiler with arguments  (CompilerInterface):
	-bootclasspath
	/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/classes:/Users/lpfeiler/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.11.7.jar
	-classpath
	/Users/lpfeiler/develop/github/base64/target/scala-2.11/classes
Read from stdout: there was one feature warning; re-run with -feature for details
there was one feature warning; re-run with -feature for details
Read from stdout: one warning found
one warning found
Scala compilation took 0.407113391 s
New invalidations:
	Set()
Initial set of included nodes: Set()
Previously invalidated, but (transitively) depend on new invalidations:
	Set()
All newly invalidated sources after taking into account (previously) recompiled sources:Set()
Total time: 0 s, completed 01.06.2016 10:34:08
> server-post-command-cleanup
> server-handle-next-server-request
> {file:/Users/lpfeiler/develop/github/base64/}base64/compile:discoveredMainClasses
Evaluating tasks: compile:discoveredMainClasses
Running task... Cancel: sbt.server.ServerTaskCancellation@c357add, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set()
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set()

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set()

Total time: 0 s, completed 01.06.2016 10:35:06
> server-post-command-cleanup
> server-handle-next-server-request
> {file:/Users/lpfeiler/develop/github/base64/}base64/compile:mainClass
Evaluating tasks: compile:mainClass
Running task... Cancel: sbt.server.ServerTaskCancellation@4c5567, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set()
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set()

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set()

Total time: 0 s, completed 01.06.2016 10:35:07
> server-post-command-cleanup
> server-handle-next-server-request
> {file:/Users/lpfeiler/develop/github/base64/}base64/compile:discoveredMainClasses
Evaluating tasks: compile:discoveredMainClasses
Running task... Cancel: sbt.server.ServerTaskCancellation@142ba62f, check cycles: false

Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set()
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set()

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()
All initially invalidated sources: Set()

Total time: 0 s, completed 01.06.2016 10:35:07
> server-post-command-cleanup
> server-handle-next-server-request
Done executing sbt server engine, result Right(Exit(0))
Closing listening server socket
Waiting for socket thread
Waiting for request processor thread
Waiting for command engine result
Returning control to sbt launcher with result Exit(0)
Closing the 7285@Lothars-MBP.fritz.box logs at Wed Jun 01 10:35:08 CEST 2016, goodbye.
